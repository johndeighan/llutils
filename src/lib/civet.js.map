{
  "version": 3,
  "file": "civet.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\lib\\civet.coffee"
  ],
  "names": [],
  "mappings": "AAAc;AAEd,OAAA;EAAQ,OAAR;CAAA,MAAA;;AAEA,OAAA;EACC,KADD;EACQ,OADR;EACiB,UADjB;EAC6B,UAD7B;EAEC,MAFD;EAES,KAFT;CAAA,MAAA;;AAIA,OAAA;EAAQ,OAAR;EAAiB,MAAjB;CAAA,MAAA,+BARc;;;;AAad,OAAA,IAAO,SAAA,GAAY,MAAA,QAAA,CAAC,IAAD,EAAO,YAAU,CAAA,CAAjB,EAAqB,WAAS,KAA9B,CAAA;AAEnB,MAAA;EAAC,MAAA,GAAS,CAAA,MAAM,OAAA,CAAQ,IAAR,EAAc;IAC5B,EAAA,EAAI,IADwB;IAE5B,YAAA,EAAc;MACb,GAAA,EAAK,CADQ;MAEb,eAAA,EAAiB,KAFJ;MAGb,SAAA,EAAW,KAHE;MAIb,OAAA,EAAS,KAJI;MAKb,OAAA,EAAS,KALI;MAMb,cAAA,EAAgB,KANH;MAOb,aAAA,EAAe,IAPF;MAQb,aAAA,EAAe,IARF;MASb,SAAA,EAAW,IATE;MAUb,QAAA,EAAU,KAVG;MAWb,QAAA,EAAU,IAXG;MAYb,cAAA,EAAgB,KAZH;MAab,mBAAA,EAAqB,IAbR;MAcb,QAAA,EAAU,KAdG;MAeb,eAAA,EAAiB;IAfJ;EAFc,CAAd,CAAN;AAoBT,SAAO;AAtBW,EAbL;;;;AAwCd,OAAA,IAAO,SAAA,GAAY,MAAA,QAAA,CAAC,IAAD,EAAO,YAAU,CAAA,CAAjB,EAAqB,WAAS,KAA9B,CAAA;AAElB;AAAD,MAAA,GAAA,EAAA;AACC;IACC,MAAA,GAAS,CAAA,MAAM,SAAA,CAAU,IAAV,EAAgB,SAAhB,EAA2B,QAA3B,CAAN,EADV;GAEA,aAAA;IAAM;IACL,KAAA,CAAM,CAAA,gBAAA,CAAA,CAAmB,IAAnB,CAAA,CAAN,EADD;;EAGA,IAAG,CAAC,MAAA,KAAU,qBAAX,CAAA,IAAqC,CAAE,OAAA,CAAQ,MAAR,CAA1C;IACC,KAAA,CAAM,CAAA,aAAA,CAAA,CAAgB,MAAhB,CAAA,CAAN,EADD;;AAGA;AACC,WAAO,MAAA,CAAO,MAAP,EADR;GAEA,aAAA;IAAM;IACL,MAAM,IAAI,KAAJ,CAAU,CAAA,QAAA,CAAA,CAAW,MAAX,CAAA,CAAV,EADP;;AAbkB",
  "sourcesContent": [
    "# civet.coffee\r\n\r\nimport {compile} from \"@danielx/civet\"\r\n\r\nimport {\r\n\tundef, defined, notdefined, getOptions,\r\n\tassert, croak,\r\n\t} from '@jdeighan/llutils'\r\nimport {checkJS, execJS} from '@jdeighan/llutils/exec-utils'\r\n\r\n# ---------------------------------------------------------------------------\r\n# --- ASYNC!\r\n\r\nexport procCivet = (code, hMetaData={}, filePath=undef) ->\r\n\r\n\tjsCode = await compile code, {\r\n\t\tjs: true\r\n\t\tparseOptions: {\r\n\t\t\ttab: 3\r\n\t\t\timplicitReturns: false\r\n\t\t\tautoConst: false\r\n\t\t\tautoLet: false\r\n\t\t\tautoVar: false\r\n\t\t\tcoffeeBooleans: false\r\n\t\t\tcoffeeClasses: true\r\n\t\t\tcoffeeComment: true\r\n\t\t\tcoffeeDiv: true\r\n\t\t\tcoffeeDo: false\r\n\t\t\tcoffeeEq: true\r\n\t\t\tcoffeeForLoops: false\r\n\t\t\tcoffeeInterpolation: true\r\n\t\t\tcoffeeOf: false\r\n\t\t\tcoffeePrototype: true\r\n\t\t\t}\r\n\t\t}\r\n\treturn jsCode\r\n\r\n# ---------------------------------------------------------------------------\r\n# --- ASYNC!\r\n\r\nexport execCivet = (code, hMetaData={}, filePath=undef) ->\r\n\r\n\tdebugger\r\n\ttry\r\n\t\tjsCode = await procCivet(code, hMetaData, filePath)\r\n\tcatch err\r\n\t\tcroak \"Bad civet code: #{code}\"\r\n\r\n\tif (jsCode == 'invalid(javascript)') || ! checkJS(jsCode)\r\n\t\tcroak \"Bad JS Code: #{jsCode}\"\r\n\r\n\ttry\r\n\t\treturn execJS(jsCode)\r\n\tcatch err\r\n\t\tthrow new Error(\"Bad JS: #{jsCode}\")\r\n"
  ]
}