{
  "version": 3,
  "file": "node-walker.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\lib\\node-walker.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# node-walker.coffee\r\n\r\nimport {\r\n\tundef, defined, notdefined, OL, getOptions, LOG,\r\n\tassert, croak, dclone,\r\n\tisString, isArray, isHash,\r\n\thasKey, keys,\r\n\t} from '@jdeighan/llutils'\r\nimport {indented, undented} from '@jdeighan/llutils/indent'\r\n\r\n# ---------------------------------------------------------------------------\r\n# --- anything named 'item'\r\n#     can always be a node or array of nodes\r\n\r\nexport class NodeWalker\r\n\r\n\tconstructor: (hOptions={}) ->\r\n\r\n\t\t{debug: @debug} = getOptions hOptions, {\r\n\t\t\tdebug: false\r\n\t\t\t}\r\n\r\n\t\t# --- Array of {key, hNode}\r\n\t\t@lStack = []\r\n\r\n\t# ..........................................................\r\n\r\n\tlevel: () ->\r\n\r\n\t\treturn @lStack.length\r\n\r\n\t# ..........................................................\r\n\r\n\tisNode: (item) ->\r\n\r\n\t\treturn isHash(item) && hasKey(item, 'type')\r\n\r\n\t# ..........................................................\r\n\r\n\tisArrayOfNodes: (item) ->\r\n\r\n\t\tif ! isArray(item)\r\n\t\t\treturn false\r\n\t\tfor x in item\r\n\t\t\tif !@isNode(x)\r\n\t\t\t\treturn false\r\n\t\treturn true\r\n\r\n\t# ..........................................................\r\n\r\n\tdbg: (str) ->\r\n\r\n\t\tif @debug\r\n\t\t\tLOG indented(str, @level())\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\twalk: (hAST) ->\r\n\r\n\t\tassert @isNode(hAST), \"Not a node: #{OL(hAST)}\"\r\n\t\t@init()\r\n\t\t@visit hAST\r\n\t\t@visitChildren hAST\r\n\t\t@end hAST\r\n\t\treturn this    # allow chaining\r\n\r\n\t# ..........................................................\r\n\r\n\tvisitChildren: (hNode) ->\r\n\r\n\t\tfor own key,value of hNode\r\n\t\t\t@lStack.push {key, hNode}\r\n\t\t\tif @isNode(value)\r\n\t\t\t\t@visit value\r\n\t\t\t\t@visitChildren value\r\n\t\t\t\t@end value\r\n\t\t\telse if @isArrayOfNodes(value)\r\n\t\t\t\tfor hNode in value\r\n\t\t\t\t\t@visit hNode\r\n\t\t\t\t\t@visitChildren hNode\r\n\t\t\t\t\t@end hNode\r\n\t\t\t@lStack.pop()\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\t# --- Override these\r\n\r\n\tinit: () ->\r\n\r\n\t\t@lLines = []\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\tvisit: (hNode) ->\r\n\r\n\t\t@dbg indented(\"VISIT #{hNode.type}\")\r\n\t\t@lLines.push indented(@stringify(hNode), @level())\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\tstringify: (hNode) ->\r\n\r\n\t\tif (@lStack.length == 0)\r\n\t\t\treturn hNode.type\r\n\t\telse\r\n\t\t\t{key} = @lStack.at(-1)\r\n\t\t\treturn \"#{key}: #{hNode.type}\"\r\n\r\n\t# ..........................................................\r\n\r\n\tend: (hNode) ->\r\n\r\n\t\t@dbg indented(\"END   #{hNode.type}\")\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\tgetTrace: () ->\r\n\r\n\t\treturn @lLines.join(\"\\n\")\r\n"
  ]
}