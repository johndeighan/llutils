{
  "version": 3,
  "file": "fetcher.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\lib\\fetcher.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# fetcher.coffee\r\n\r\nimport {\r\n\tundef, defined, notdefined, OL, escapeStr, DUMP,\r\n\tblockToArray, arrayToBlock, getOptions,\r\n\t} from '@jdeighan/llutils'\r\nimport {indentLevel, undented} from '@jdeighan/llutils/indent'\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class Fetcher\r\n\r\n\tconstructor: (block, hOptions={}) ->\r\n\r\n\t\t{filterFunc, debug} = getOptions hOptions, {\r\n\t\t\tfilterFunc: undef\r\n\t\t\tdebug: false\r\n\t\t\t}\r\n\r\n\t\t@lLines = blockToArray(block)\r\n\t\tif defined(filterFunc)\r\n\t\t\t@lLines = @lLines.filter(filterFunc)\r\n\t\t@debug = debug\r\n\r\n\t# ..........................................................\r\n\r\n\tnumLines: () ->\r\n\r\n\t\treturn @lLines.length\r\n\r\n\t# ..........................................................\r\n\r\n\tdump: (label='BLOCK') ->\r\n\r\n\t\tDUMP @lLines, label\r\n\r\n\t# ..........................................................\r\n\r\n\tdbg: (str, block=undef) ->\r\n\r\n\t\tif !@debug then return\r\n\t\tconsole.log str\r\n\t\tif defined(block)\r\n\t\t\tconsole.log block\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\tmoreLines: () ->\r\n\r\n\t\tresult = (@lLines.length > 0)\r\n\t\t@dbg \"MORE_LINES => #{OL(result)}\"\r\n\t\treturn result\r\n\r\n\t# ..........................................................\r\n\r\n\tnext: () ->\r\n\r\n\t\tif (@lLines.length == 0)\r\n\t\t\t@dbg \"NEXT => undef\"\r\n\t\t\treturn undef\r\n\t\telse\r\n\t\t\t@dbg \"NEXT => #{escapeStr(@lLines[0])}\"\r\n\t\t\treturn @lLines[0]\r\n\r\n\t# ..........................................................\r\n\r\n\tnextLevel: () ->\r\n\r\n\t\tif (@next() == undef)\r\n\t\t\tlevel = 0\r\n\t\telse\r\n\t\t\tlevel = indentLevel(@lLines[0])\r\n\t\t@dbg \"NEXT LEVEL => #{OL(level)}\"\r\n\t\treturn level\r\n\r\n\t# ..........................................................\r\n\r\n\tget: () ->\r\n\r\n\t\tline = @lLines.shift()\r\n\t\t@dbg \"GET => #{escapeStr(line)}\"\r\n\t\treturn line\r\n\r\n\t# ..........................................................\r\n\r\n\tskip: () ->\r\n\r\n\t\t@lLines.shift()\r\n\t\t@dbg \"SKIP =>\"\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\t# --- returns undented block\r\n\r\n\tgetBlock: (minLevel) ->\r\n\r\n\t\tlBlockLines = while (@nextLevel() >= minLevel)\r\n\t\t\t@get()\r\n\t\tif (lBlockLines.length == 0)\r\n\t\t\t@dbg \"GET BLOCK (#{minLevel}) => undef\"\r\n\t\t\treturn undef\r\n\t\telse\r\n\t\t\tblock = arrayToBlock(undented(lBlockLines))\r\n\t\t\t@dbg \"GET BLOCK (#{minLevel}) =>\", block\r\n\t\t\treturn block\r\n"
  ]
}