{
  "version": 3,
  "file": "proj-utils.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\lib\\proj-utils.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# proj-utils.coffee\r\n\r\nimport prompts from 'prompts'\r\n\r\nimport {\r\n\tundef, defined, notdefined, OL, getOptions,\r\n\tassert, croak, words, isEmpty, nonEmpty, hasKey\r\n\t} from '@jdeighan/llutils'\r\nimport {execCmd} from '@jdeighan/llutils/exec-utils'\r\nimport {BOX} from '@jdeighan/llutils/dump'\r\nimport {\r\n\tmkpath, isDir, mkDir, slurp, barf, clearDir,\r\n\tslurpJSON, barfJSON, slurpPkgJSON, barfPkgJSON,\r\n\ttouch, insertLinesAfter,\r\n\t} from '@jdeighan/llutils/fs'\r\n\r\nexport lValidTypes = [\r\n\t'electron'\r\n\t'codemirror'\r\n\t'elm'\r\n\t'parcel'\r\n\t'vite'\r\n\t'none'\r\n\t]\r\ntype = 'none'\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport checkIfInstalled = (...lCmds) =>\r\n\r\n\tfor cmd in lCmds\r\n\t\ttry\r\n\t\t\toutput = execCmd \"#{cmd} --version\"\r\n\t\t\treturn output\r\n\t\tcatch err\r\n\t\t\tconsole.log \"ERROR #{cmd} is not installed\"\r\n\t\t\tprocess.exit()\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport setProjType = (t) =>\r\n\r\n\tif (t == 'website')\r\n\t\ttype = 'parcel'    # default web site type\r\n\tassert defined(t), \"type is undef\"\r\n\tassert lValidTypes.includes(t), \"Bad type: #{OL(t)}\"\r\n\ttype = t\r\n\treturn\r\n\r\n# ---------------------------------------------------------------------------\r\n# --- For example, isType('electron') will return true\r\n#     when type is 'codemirror'\r\n\r\nexport isOfType = (t) =>\r\n\r\n\tswitch t\r\n\t\twhen 'electron'\r\n\t\t\tlMembers = ['electron','codemirror']\r\n\t\twhen 'website'\r\n\t\t\tlMembers = ['parcel','vite']\r\n\t\telse\r\n\t\t\tlMembers = [t]\r\n\treturn lMembers.includes(type)\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport promptForProjType = () =>\r\n\r\n\thResponse = await prompts({\r\n\t\ttype: 'select'\r\n\t\tname: 'type'\r\n\t\tmessage: 'Which type of project?'\r\n\t\tchoices: [\r\n\t\t\t{\r\n\t\t\t\ttitle: 'Bare'\r\n\t\t\t\tdescription: 'Bare project'\r\n\t\t\t\tvalue: 'none'\r\n\t\t\t\t}\r\n\t\t\t{\r\n\t\t\t\ttitle: 'parcel'\r\n\t\t\t\tdescription: 'parcel web site'\r\n\t\t\t\tvalue: 'parcel'\r\n\t\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: 'vite'\r\n\t\t\t\tdescription: 'vite web site'\r\n\t\t\t\tvalue: 'vite'\r\n\t\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: 'electron'\r\n\t\t\t\tdescription: 'electron app'\r\n\t\t\t\tvalue: 'electron'\r\n\t\t\t\t}\r\n\t\t\t{\r\n\t\t\t\ttitle: 'codemirror'\r\n\t\t\t\tdescription: 'codeMirror editor'\r\n\t\t\t\tvalue: 'codemirror'\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t});\r\n\tsetProjType hResponse.type\r\n\treturn type\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport makeProjDir = (dirname, hOptions={}) =>\r\n\r\n\t{clear} = getOptions hOptions, {\r\n\t\tclear: false\r\n\t\t}\r\n\r\n\trootDir = process.env.PROJECT_ROOT_DIR\r\n\tif ! isDir(rootDir)\r\n\t\tconsole.log \"\"\"\r\n\t\t\tPlease set env var PROJECT_ROOT_DIR to a valid directory\r\n\t\t\t\"\"\"\r\n\t\tprocess.exit()\r\n\r\n\t# === Create the new directory and cd to it\r\n\r\n\tnewDir = mkpath(rootDir, dirname)\r\n\tif isDir(newDir)\r\n\t\tif clear\r\n\t\t\tconsole.log \"Directory #{OL(newDir)} exists, clearing it out\"\r\n\t\t\tclearDir newDir\r\n\t\telse\r\n\t\t\tconsole.log \"Directory #{OL(newDir)} already exists\"\r\n\t\t\tconsole.log \"Aborting...\"\r\n\t\t\tprocess.exit()\r\n\telse\r\n\t\tconsole.log \"Creating directory #{newDir}\"\r\n\t\tmkDir newDir\r\n\r\n\tprocess.chdir newDir\r\n\tmake_dirs()\r\n\treturn\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nmake_dirs = () =>\r\n\r\n\tconsole.log \"Making directories\"\r\n\tconsole.log \"   ./src\"\r\n\tmkDir './src'\r\n\r\n\tconsole.log \"   ./src/lib\"\r\n\tmkDir './src/lib'\r\n\r\n\tconsole.log \"   ./src/bin\"\r\n\tmkDir './src/bin'\r\n\r\n\tif isOfType('website')\r\n\t\tconsole.log \"   ./src/elements\"\r\n\t\tmkDir './src/elements'\r\n\r\n\tconsole.log \"   ./test\"\r\n\tmkDir './test'\r\n\treturn\r\n\r\n# ---------------------------------------------------------------------------\r\n# --- Used in bins addUserBin, addUserLib, addUserElement\r\n# ---------------------------------------------------------------------------\r\n# --- valFunc is a validation function\r\n#        return undef if valid\r\n#        else return error message\r\n\r\nexport promptForNames = (prompt, valFunc=undef) =>\r\n\r\n\tlNames = []\r\n\tloop\r\n\t\thResponse = await prompts {\r\n\t\t\ttype: 'text',\r\n\t\t\tname: 'name',\r\n\t\t\tmessage: prompt\r\n\t\t\t}\r\n\t\tname = hResponse.name\r\n\t\tif name\r\n\t\t\tif validFunc && (msg = validFunc(name))\r\n\t\t\t\tconsole.log msg\r\n\t\t\telse\r\n\t\t\t\tlNames.push name\r\n\t\telse\r\n\t\t\treturn lNames\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport typeSpecificSetup = (nodeEnv) =>\r\n\r\n\tif isOfType('website')\r\n\t\tsetUpWebSite(nodeEnv)\r\n\tif isOfType('elm')\r\n\t\tsetUpElm(nodeEnv)\r\n\tif isOfType('parcel')\r\n\t\tsetUpParcel(nodeEnv)\r\n\tif isOfType('vite')\r\n\t\tsetUpVite(nodeEnv)\r\n\tif isOfType('electron')\r\n\t\tsetUpElectron(nodeEnv)\r\n\tif isOfType('codemirror')\r\n\t\tsetUpCodeMirror(nodeEnv)\r\n\treturn\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nsetUpWebSite = (nodeEnv) =>\r\n\r\n\tnodeEnv.addDevDependency 'svelte'\r\n\r\n\tconsole.log \"Creating src/index.html\"\r\n\tbarf \"\"\"\r\n\t\t<!DOCTYPE html>\r\n\t\t<html lang=\"en\">\r\n\t\t\t<head>\r\n\t\t\t\t<meta charset=\"utf-8\">\r\n\t\t\t\t<title>Web Site</title>\r\n\t\t\t</head>\r\n\t\t\t<body>\r\n\t\t\t\t<h1>Hello, World!</h1>\r\n\t\t\t\t<script type=\"module\">\r\n\t\t\t\t\timport './index.js';\r\n\t\t\t\t\t// --- Custom Element Imports\r\n\t\t\t\t</script>\r\n\t\t\t</body>\r\n\t\t</html>\r\n\t\t\"\"\", \"./src/index.html\"\r\n\r\n\tbarf \"\"\"\r\n\t\t# index.coffee\r\n\r\n\t\timport {escapeStr} from '@jdeighan/llutils'\r\n\t\tconsole.log escapeStr(\"\\t\\tabc\\r\\n\")\r\n\t\t\"\"\", \"./src/index.coffee\"\r\n\treturn\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport importCustomElement = (name) =>\r\n\r\n\tinsertLinesAfter(\r\n\t\t\"./src/index.coffee\",\r\n\t\t/Custom Element Imports/,\r\n\t\t\"\\t\\t\\timport ./elements/#{name}.js\"\r\n\t\t)\r\n\treturn\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nsetUpElm = (nodeEnv) =>\r\n\r\n\tcheckIfInstalled 'elm'\r\n\t# execCmd \"echo y | elm init\"\r\n\r\n\tnodeEnv.addDevDependency 'svelte'\r\n\r\n\tnodeEnv.addScript 'build',  \"npm run build:coffee && elm make src/Main.elm --output=main.js\"\r\n\tnodeEnv.addScript 'dev',    \"npm run build && elm reactor\"\r\n\r\n\tnodeEnv.addFile \"./src/Main.elm\", \"\"\"\r\n\t\timport Main exposing (..)\r\n\t\timport Html exposing (text)\r\n\r\n\t\tmain =\r\n\t\t  text \"Hello!\"\r\n\t\t\"\"\"\r\n\r\n\tnodeEnv.addFile \"./src/index.html\",  \"\"\"\r\n\t\t<!DOCTYPE html>\r\n\t\t<html lang=\"en\">\r\n\t\t<head>\r\n\t\t\t<meta charset=\"utf-8\">\r\n\t\t\t<title>Elm Web Site</title>\r\n\t\t\t<script src=\"main.js\"></script>\r\n\t\t</head>\r\n\r\n\t\t<body>\r\n\t\t\t<div id=\"myapp\"></div>\r\n\t\t\t<script>\r\n\t\t\t\tvar app = Elm.Main.init({\r\n\t\t\t\t\tnode: document.getElementById('myapp')\r\n\t\t\t\t\t});\r\n\t\t\t</script>\r\n\t\t</body>\r\n\t\t</html>\r\n\t\t\"\"\"\r\n\treturn\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nsetUpParcel = (nodeEnv) =>\r\n\r\n\tnodeEnv.addDevDependency 'parcel'\r\n\tnodeEnv.setField  'source', 'src/index.html'\r\n\tnodeEnv.addScript 'dev',    'concurrently --kill-others \"llb -w\" \"parcel\"'\r\n\tnodeEnv.addScript 'build',  'llb && parcel build'\r\n\treturn\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nsetUpVite = (nodeEnv) =>\r\n\r\n\tnodeEnv.addDevDependency 'vite'\r\n\tnodeEnv.addDevDependency 'vite-plugin-top-level-await'\r\n\tnodeEnv.setField  'source', 'src/index.html'\r\n\tnodeEnv.addScript 'dev',    'concurrently --kill-others \"llb -w\" \"vite -c src/vite.config.js src\"'\r\n\tnodeEnv.addScript 'build',  'llb && vite build'\r\n\tbarf \"\"\"\r\n\t\timport topLevelAwait from \"vite-plugin-top-level-await\";\r\n\r\n\t\texport default {\r\n\t\t\tbuild: {\r\n\t\t\t\ttarget: 'esnext'\r\n\t\t\t\t},\r\n\t\t\tplugins: [\r\n\t\t\t\ttopLevelAwait({\r\n\t\t\t\t\tpromiseExportName: \"__tla\",\r\n\t\t\t\t\tpromiseImportName: i => `__tla_${i}`\r\n\t\t\t\t\t})\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t\"\"\", \"./src/vite.config.js\"\r\n\treturn\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nsetUpElectron = (nodeEnv) =>\r\n\r\n\tnodeEnv.setField 'main', 'src/main.js'\r\n\tnodeEnv.addScript 'start', 'npm run build && electron .'\r\n\r\n\tconsole.log \"Installing (dev) \\\"electron\\\"\"\r\n\tnodeEnv.addDevDependency 'electron'\r\n\r\n\tconsole.log \"Creating src/main.coffee\"\r\n\tbarf \"\"\"\r\n\t\timport pathLib from 'node:path'\r\n\t\timport {app, BrowserWindow} from 'electron'\r\n\r\n\t\tapp.on 'ready', () =>\r\n\t\t\twin = new BrowserWindow({\r\n\t\t\t\twidth: 800,\r\n\t\t\t\theight: 600\r\n\t\t\t\twebPreferences: {\r\n\t\t\t\t\tnodeIntegration: true\r\n\t\t\t\t\tpreload: pathLib.join(import.meta.dirname, 'preload.js')\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t# --- win.loadFile('src/index.html')\r\n\t\t\twin.loadURL(\"file://#{import.meta.dirname}/index.html\")\r\n\t\t\t\"\"\", \"./src/main.coffee\"\r\n\r\n\t# ..........................................................\r\n\r\n\tconsole.log \"Creating src/index.html\"\r\n\tbarf \"\"\"\r\n\t\t<!DOCTYPE html>\r\n\t\t<html lang=\"en\">\r\n\t\t\t<head>\r\n\t\t\t\t<meta charset=\"UTF-8\">\r\n\t\t\t\t<!-- https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP -->\r\n\t\t\t\t<meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'self'; script-src 'self'\">\r\n\t\t\t\t<title>Electron App</title>\r\n\t\t\t</head>\r\n\t\t\t<body>\r\n\t\t\t\t<h1>Electron App, using:</h1>\r\n\t\t\t\t<p span id=\"node-version\">node-version</p>\r\n\t\t\t\t<p span id=\"chrome-version\">chrome-version</p>\r\n\t\t\t\t<p span id=\"electron-version\">electron-version</p>\r\n\t\t\t\tby <p id=\"myname\">My Name Here</p>\r\n\t\t\t\t<script src=\"./renderer.js\"></script>\r\n\t\t\t</body>\r\n\t\t</html>\r\n\t\t\"\"\", \"./src/index.html\"\r\n\r\n\t# ..........................................................\r\n\r\n\tconsole.log \"Creating src/preload.coffee\"\r\n\tbarf \"\"\"\r\n\t\t# --- preload.coffee has access to window,\r\n\t\t#     document and NodeJS globals\r\n\r\n\t\twindow.addEventListener 'DOMContentLoaded', () =>\r\n\t\t\treplaceText = (selector, text) =>\r\n\t\t\t\telem = document.getElementById(selector)\r\n\t\t\t\tif (elem)\r\n\t\t\t\t\telem.innerText = text\r\n\r\n\t\t\tfor dep in ['chrome','node','electron']\r\n\t\t\t\tstr = \"\\#{dep} version \\#{process.versions[dep]}\"\r\n\t\t\t\treplaceText \"\\#{dep}-version\", str\r\n\t\t\"\"\", \"./src/preload.coffee\"\r\n\r\n\t# ..........................................................\r\n\r\n\tconsole.log \"Creating src/renderer.coffee\"\r\n\tbarf \"\"\"\r\n\t\t# --- preload.coffee has access to window and document\r\n\r\n\t\telem = document.getElementById('myname')\r\n\t\tif elem\r\n\t\t\telem.innerText = '#{author}'\r\n\t\telse\r\n\t\t\tconsole.log \"No element with id 'myname'\"\r\n\t\t\"\"\", \"./src/renderer.coffee\"\r\n\r\n\treturn\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nsetUpCodeMirror = (nodeEnv) =>\r\n\r\n\treturn\r\n\r\n# ---------------------------------------------------------------------------\r\n# --- 1. Read in current package.json\r\n#     2. If option 'fix':\r\n#        - get keys from env var PROJECT_PACKAGE_JSON\r\n#        - overwrite keys in package.json\r\n#        - adjust name if env var PROJECT_NAME_PREFIX is set\r\n\r\nexport class NodeEnv\r\n\r\n\tconstructor: (hOptions={}) ->\r\n\r\n\t\t{fixPkgJson, echo: @echo} = getOptions hOptions, {\r\n\t\t\tfixPkgJson: false\r\n\t\t\techo: true\r\n\t\t\t}\r\n\t\t@hJson = slurpPkgJSON()\r\n\t\tif fixPkgJson\r\n\t\t\t@mergeKeysFromEnv()\r\n\t\t\tprefix = process.env.PROJECT_NAME_PREFIX\r\n\t\t\tif nonEmpty(prefix) && ! @hJson.name.startsWith(prefix)\r\n\t\t\t\t@setField 'name', \"#{prefix}#{@hJson.name}\"\r\n\t\t\t@setField 'license', 'MIT'\r\n\r\n\t# ..........................................................\r\n\r\n\tmergeKeysFromEnv: () ->\r\n\r\n\t\tpkgJson = process.env.PROJECT_PACKAGE_JSON\r\n\t\tif nonEmpty(pkgJson)\r\n\t\t\t# --- Can be either a JSON string or a file path\r\n\t\t\tif (pkgJson.indexOf('{') == 0)\r\n\t\t\t\thSetKeys = JSON.parse(pkgJson)\r\n\t\t\telse\r\n\t\t\t\thSetKeys = slurpJSON(pkgJson)\r\n\t\t\tObject.assign @hJson, hSetKeys\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\tname: () ->\r\n\r\n\t\treturn @hJson.name\r\n\r\n\t# ..........................................................\r\n\r\n\tgetField: (name) ->\r\n\r\n\t\treturn @hJson[name]\r\n\r\n\t# ..........................................................\r\n\r\n\tsetField: (name, value) ->\r\n\r\n\t\t@hJson[name] = value\r\n\t\tif @echo\r\n\t\t\tconsole.log \"   SET #{name} = #{OL(value)}\"\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\taddScript: (name, str) ->\r\n\r\n\t\tif ! hasKey(@hJson, 'scripts')\r\n\t\t\t@hJson.scripts = {}\r\n\t\t@hJson.scripts[name] = str\r\n\t\tif @echo\r\n\t\t\tconsole.log \"   ADD SCRIPT #{name} = #{OL(str)}\"\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\taddExport: (name, str) ->\r\n\r\n\t\tif ! hasKey(@hJson, 'exports')\r\n\t\t\t@hJson.exports = {}\r\n\t\t@hJson.exports[name] = str\r\n\t\tif @echo\r\n\t\t\tconsole.log \"   ADD EXPORT #{name} = #{OL(str)}\"\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\taddUserBin: (name) ->\r\n\r\n\t\tbarf \"\"\"\r\n\t\t\t# --- #{name}.coffee\r\n\r\n\r\n\t\t\t\"\"\", \"./src/bin/#{name}.coffee\"\r\n\r\n\t\tif ! hasKey(@hJson, 'bin')\r\n\t\t\t@hJson.bin = {}\r\n\t\t@hJson.bin[name] = \"./src/bin/#{name}.js\"\r\n\t\tif @echo\r\n\t\t\tconsole.log \"   ADD BIN #{name}\"\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\taddUserLib: (name) ->\r\n\r\n\t\tbarf \"\"\"\r\n\t\t\t# --- #{name}.coffee\r\n\r\n\r\n\t\t\t\"\"\", \"./src/lib/#{name}.coffee\"\r\n\r\n\t\t# --- Add a unit test\r\n\t\tbarf \"\"\"\r\n\t\t\t# --- #{name}.test.offee\r\n\r\n\t\t\timport * as lib from './#{name}'\r\n\t\t\tObject.assign(global, lib)\r\n\t\t\timport * as lib2 from '@jdeighan/llutils/utest'\r\n\t\t\tObject.assign(global, lib2)\r\n\r\n\t\t\tequal 2+2, 4\r\n\t\t\t\"\"\", \"./test/#{name}.test.coffee\"\r\n\r\n\t\t@addExport \"./#{name}\", \"./src/lib/#{name}.js\"\r\n\r\n\t\tif ! hasKey(@hJson, 'bin')\r\n\t\t\t@hJson.bin = {}\r\n\t\t@hJson.bin[name] = \"./src/bin/#{name}.js\"\r\n\t\tif @echo\r\n\t\t\tconsole.log \"   ADD BIN #{name}\"\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\taddUserElement: (name) ->\r\n\r\n\t\tbarf \"\"\"\r\n\t\t\t<!-- #{name}.svelte -->\r\n\t\t\t<svelte:options customElement=\"#{name}\" />\r\n\t\t\t<p>A new element</p>\r\n\r\n\t\t\t\"\"\", \"./src/elements/#{name}.svelte\"\r\n\r\n\t\t@addExport \"./#{name}\", \"./src/elements/#{name}.js\"\r\n\t\tif @echo\r\n\t\t\tconsole.log \"   ADD ELEMENT #{name}\"\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\thasDep: (pkg) ->\r\n\r\n\t\tif hasKey(@hJson, 'dependencies')\r\n\t\t\treturn hasKey(@hJson.dependencies, pkg)\r\n\t\telse\r\n\t\t\treturn false\r\n\r\n\t# ..........................................................\r\n\r\n\thasDevDep: (pkg) ->\r\n\r\n\t\tif hasKey(@hJson, 'devDependencies')\r\n\t\t\treturn hasKey(@hJson.devDependencies, pkg)\r\n\t\telse\r\n\t\t\treturn false\r\n\r\n\t# ..........................................................\r\n\r\n\tremoveDep: (pkg) ->\r\n\r\n\t\tif @hasDep(pkg)\r\n\t\t\tdelete @hJson.dependencies[pkg]\r\n\t\tif @hasDevDep(pkg)\r\n\t\t\tdelete @hJson.devDependencies[pkg]\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\taddDependency: (pkg) ->\r\n\r\n\t\tif ! hasKey(@hJson, 'dependencies')\r\n\t\t\t@hJson.dependencies = {}\r\n\t\t@removeDep pkg\r\n\t\tversion = getVersion(pkg)\r\n\t\t@hJson.dependencies[pkg] = version\r\n\t\tif @echo\r\n\t\t\tconsole.log \"   DEP #{pkg} = #{OL(version)}\"\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\taddDevDependency: (pkg) ->\r\n\r\n\t\tif ! hasKey(@hJson, 'devDependencies')\r\n\t\t\t@hJson.devDependencies = {}\r\n\t\t@removeDep pkg\r\n\t\tversion = getVersion(pkg)\r\n\t\t@hJson.devDependencies[pkg] = version\r\n\t\tif @echo\r\n\t\t\tconsole.log \"   DEV DEP #{pkg} = #{OL(version)}\"\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\tisInstalled: (pkg) ->\r\n\r\n\t\treturn hasKey(@hJson.dependencies, pkg) \\\r\n\t\t\t\t|| hasKey(@hJson.devDependencies, pkg)\r\n\r\n\t# ..........................................................\r\n\r\n\twrite_pkg_json: () ->\r\n\r\n\t\t@addExport \"./package.json\", \"./package.json\"\r\n\t\tbarfPkgJSON @hJson\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\taddFile: (fileName, contents=undef) ->\r\n\r\n\t\tif @echo\r\n\t\t\tconsole.log \"ADD FILE #{OL(fileName)}\"\r\n\r\n\t\tif defined(contents)\r\n\t\t\tbarf contents, fileName\r\n\t\t\treturn\r\n\r\n\t\tswitch fileName\r\n\r\n\t\t\twhen 'README.md'\r\n\t\t\t\tbarf contents || \"\"\"\r\n\t\t\t\t\tREADME.md file\r\n\t\t\t\t\t==============\r\n\r\n\r\n\t\t\t\t\t\"\"\", \"./README.md\"\r\n\r\n\t\t\twhen '.gitignore'\r\n\t\t\t\tbarf contents || \"\"\"\r\n\t\t\t\t\tlogs/\r\n\t\t\t\t\tnode_modules/\r\n\t\t\t\t\ttypings/\r\n\t\t\t\t\t*.tsbuildinfo\r\n\t\t\t\t\t.npmrc\r\n\t\t\t\t\t/build\r\n\t\t\t\t\t/public\r\n\t\t\t\t\t/dist\r\n\r\n\t\t\t\t\t# dotenv environment variables file\r\n\t\t\t\t\t.env\r\n\t\t\t\t\t.env.test\r\n\r\n\t\t\t\t\ttest/temp*.*\r\n\t\t\t\t\t/.svelte-kit\r\n\t\t\t\t\t\"\"\", \"./.gitignore\"\r\n\r\n\t\t\twhen '.npmrc'\r\n\t\t\t\tbarf contents || \"\"\"\r\n\t\t\t\t\tengine-strict=true\r\n\t\t\t\t\t# --- loglevel can be silent or warn\r\n\t\t\t\t\tloglevel=silent\r\n\t\t\t\t\t\"\"\", \"./.npmrc\"\r\n\r\n\t\t\telse\r\n\t\t\t\tcroak \"addFile #{OL(fileName)} not implemented\"\r\n\t\treturn\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\ngetVersion = (pkg) =>\r\n\r\n\tswitch pkg\r\n\t\twhen 'coffeescript'\r\n\t\t\treturn \"^2.7.0\"\r\n\t\twhen 'concurrently'\r\n\t\t\treturn \"^8.2.2\"\r\n\t\twhen 'ava'\r\n\t\t\treturn \"^6.1.3\"\r\n\t\twhen 'svelte'\r\n\t\t\treturn \"^5.0.0-next.200\"\r\n\t\twhen 'gulp'\r\n\t\t\treturn \"^5.0.0\"\r\n\t\twhen 'parcel'\r\n\t\t\treturn \"^2.12.0\"\r\n\t\twhen 'vite'\r\n\t\t\treturn \"^5.4.0\"\r\n\t\twhen 'vite-plugin-top-level-await'\r\n\t\t\treturn \"^1.4.3\"\r\n\t\telse\r\n\t\t\treturn '*'\r\n"
  ]
}