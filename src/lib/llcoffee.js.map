{
  "version": 3,
  "file": "llcoffee.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\lib\\llcoffee.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# llcoffee.coffee\r\n\r\nimport {compile} from 'coffeescript'\r\n\r\nimport {\r\n\tundef, defined, notdefined, assert, croak,\r\n\tOL, getOptions, isString, isFunction, gen2block,\r\n\t} from '@jdeighan/llutils'\r\nimport {DUMP} from '@jdeighan/llutils/dump'\r\nimport {\r\n\tisFile, readTextFile, barf, withExt,\r\n\t} from '@jdeighan/llutils/fs'\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport brew = (code, hMetaData={}) ->\r\n\r\n\t# --- metadata can be used to add a shebang line\r\n\t#     if true, use \"#!/usr/bin/env node\"\r\n\t#     else use value of shebang key\r\n\r\n\t# --- filePath is used to check for a source map\r\n\t#     without it, no source map is produced\r\n\t# --- if key preprocess is set, it must be a function\r\n\t#     that converts one block of code to another\r\n\t#     block of code\r\n\r\n\tassert isString(code), \"code: #{OL(code)}\"\r\n\t{filePath, preprocess, debug,\r\n\t\t} = getOptions hMetaData, {\r\n\t\tfilePath: undef\r\n\t\tpreprocess: undef\r\n\t\tdebug: false\r\n\t\t}\r\n\r\n\tif defined(preprocess)\r\n\t\tassert isFunction(preprocess),\r\n\t\t\t\t\"Not a function: #{OL(preprocess)}\"\r\n\t\tif debug\r\n\t\t\tconsole.log \"pre-processing code\"\r\n\t\tpreprocCode = preprocess(code, {debug})\r\n\t\tif debug\r\n\t\t\tDUMP preprocCode, 'PreProcessed code'\r\n\r\n\tif defined(filePath)\r\n\t\t{js, v3SourceMap} = compile (preprocCode || code), {\r\n\t\t\tsourceMap: true\r\n\t\t\tbare: true\r\n\t\t\theader: false\r\n\t\t\tfilename: filePath\r\n\t\t\t}\r\n\telse\r\n\t\tjs = compile (preprocCode || code), {\r\n\t\t\tbare: true\r\n\t\t\theader: false\r\n\t\t\t}\r\n\t\tv3SourceMap = undef\r\n\r\n\tassert defined(js), \"No JS code generated\"\r\n\r\n\tshebang = getShebang(hMetaData)\r\n\tif defined(shebang)\r\n\t\tjs = shebang + \"\\n\" + js.trim()\r\n\telse\r\n\t\tjs = js.trim()\r\n\treturn {\r\n\t\torgCode: code\r\n\t\tpreprocCode\r\n\t\tjs\r\n\t\tsourceMap: v3SourceMap\r\n\t\t}\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport brewFile = (filePath, hOptions={}) ->\r\n\r\n\t{debug} = getOptions hOptions, {\r\n\t\tdebug: false\r\n\t\t}\r\n\tassert isFile(filePath), \"No such file: #{filePath}\"\r\n\t{hMetaData, contents} = readTextFile(filePath, 'eager')\r\n\tif debug\r\n\t\thMetaData.debug = true\r\n\th = brew contents, hMetaData\r\n\tbarf h.js, withExt(filePath, '.js')\r\n\tbarf h.sourceMap, withExt(filePath, '.js.map')\r\n\treturn h\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport getShebang = (hMetaData) =>\r\n\r\n\tshebang = hMetaData.shebang\r\n\tif defined(shebang)\r\n\t\tif isString(shebang)\r\n\t\t\treturn shebang\r\n\t\telse if shebang\r\n\t\t\treturn \"#!/usr/bin/env node\"\r\n\treturn undef\r\n"
  ]
}