{
  "version": 3,
  "file": "coffee.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\lib\\coffee.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# coffee.coffee\r\n\r\nimport fs from 'fs'\r\nimport CoffeeScript from 'coffeescript'\r\n\r\nimport {\r\n\tundef, defined, notdefined, gen2block, words,\r\n\tassert, croak, DUMP, OL,\r\n\tisString, isArray, isHash, removeKeys,\r\n\t} from '@jdeighan/llutils'\r\nimport {\r\n\treadTextFile, barf, withExt, isFile,\r\n\t} from '@jdeighan/llutils/fs'\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport brew = (code, hMetaData={}, filePath=undef) ->\r\n\r\n\t# --- metadata is used to add a shebang line\r\n\t#     if true, use \"#!/usr/bin/env node\"\r\n\t#     else use value of shebang key\r\n\t# --- filePath is used to check for a source map\r\n\t#     without it, no source map is produced\r\n\r\n\tassert isString(code), \"code: #{OL(code)}\"\r\n\tif defined(filePath)\r\n\t\t{js, v3SourceMap} = CoffeeScript.compile code, {\r\n\t\t\tsourceMap: true\r\n\t\t\tbare: true\r\n\t\t\theader: false\r\n\t\t\tfilename: filePath\r\n\t\t\t}\r\n\telse\r\n\t\tjs = CoffeeScript.compile code, {\r\n\t\t\tbare: true\r\n\t\t\theader: false\r\n\t\t\t}\r\n\t\tv3SourceMap = undef\r\n\r\n\tassert defined(js), \"No JS code generated\"\r\n\r\n\tshebang = getShebang(hMetaData)\r\n\tif defined(shebang)\r\n\t\tjs = shebang + \"\\n\" + js.trim()\r\n\telse\r\n\t\tjs = js.trim()\r\n\treturn {\r\n\t\tjs\r\n\t\tsourceMap: v3SourceMap\r\n\t\t}\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport brewFile = (filePath) ->\r\n\r\n\tassert isFile(filePath), \"No such file: #{filePath}\"\r\n\t{hMetaData, reader} = readTextFile(filePath)\r\n\tcode = gen2block(reader)\r\n\t{js, sourceMap} = brew code, hMetaData, filePath\r\n\tbarf js, withExt(filePath, '.js')\r\n\tbarf sourceMap, withExt(filePath, '.js.map')\r\n\treturn {js, sourceMap}\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport getShebang = (hMetaData) =>\r\n\r\n\tshebang = hMetaData.shebang\r\n\tif defined(shebang)\r\n\t\tif isString(shebang)\r\n\t\t\treturn shebang\r\n\t\telse if shebang\r\n\t\t\treturn \"#!/usr/bin/env node\"\r\n\treturn undef\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport toAST = (code, hOptions={minimal: true}) ->\r\n\r\n\thAST = CoffeeScript.compile(code, {ast: true})\r\n\tif hOptions.minimal\r\n\t\tremoveKeys hAST, words(\r\n\t\t\t'loc range extra start end',\r\n\t\t\t'directives comments tokens',\r\n\t\t\t)\r\n\treturn hAST\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport removeExtraASTKeys = (hAST) =>\r\n\r\n\tremoveKeys hAST, words(\r\n\t\t'loc range extra start end',\r\n\t\t'directives comments tokens',\r\n\t\t)\r\n\treturn hAST\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport toASTFile = (code, filePath, hOptions={}) ->\r\n\r\n\thAST = toAST(code, hOptions)\r\n\tbarfAST hAST, filePath\r\n\treturn\r\n"
  ]
}