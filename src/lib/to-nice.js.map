{
  "version": 3,
  "file": "to-nice.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\lib\\to-nice.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# to-nice.coffee\r\n\r\nimport {\r\n\tundef, defined, notdefined, getOptions, OL,\r\n\tassert, croak, escapeStr,\r\n\tisString, isBoolean, isArray, isHash, isEmpty,\r\n\tisFunction, isNumber, isInteger,\r\n\tisClassInstance, isClass, className,\r\n\ttoBlock,\r\n\t} from '@jdeighan/llutils'\r\nimport {indented} from '@jdeighan/llutils/indent'\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport toNICE = (obj, hOptions={}) =>\r\n\r\n\thOptions = getOptions hOptions, {\r\n\t\tsortKeys: false    # --- can be boolean/array/function\r\n\t\t}\r\n\t{sortKeys} = hOptions\r\n\r\n\tif isArray(sortKeys)\r\n\t\tsortKeys = getSortKeysFunc sortKeys\r\n\t\tassert isFunction(sortKeys), \"Not a function: #{OL(sortKeys)}\"\r\n\telse\r\n\t\tassert isBoolean(sortKeys) || isFunction(sortKeys),\r\n\t\t\t\"sortKeys not boolean, array or function\"\r\n\r\n\tswitch (typeof obj)\r\n\t\twhen 'undefined'\r\n\t\t\treturn '.undef.'\r\n\t\twhen 'boolean'\r\n\t\t\tif obj\r\n\t\t\t\treturn '.true.'\r\n\t\t\telse\r\n\t\t\t\treturn '.false.'\r\n\t\twhen 'string'\r\n\t\t\tif isEmpty(obj)\r\n\t\t\t\treturn escapeStr(obj)\r\n\t\t\telse\r\n\t\t\t\treturn obj\r\n\t\twhen 'number'\r\n\t\t\tif Number.isNaN(obj)\r\n\t\t\t\treturn '.NaN.'\r\n\t\t\telse\r\n\t\t\t\treturn obj.toString()\r\n\t\twhen 'function'\r\n\t\t\tif isClass(obj)\r\n\t\t\t\tname = className(obj)\r\n\t\t\t\tif name\r\n\t\t\t\t\treturn \".Class #{name}.\"\r\n\t\t\t\telse\r\n\t\t\t\t\treturn \".Class.\"\r\n\t\t\telse if isFunction(obj)\r\n\t\t\t\tname = obj.name\r\n\t\t\t\tif name\r\n\t\t\t\t\treturn \".Function #{name}.\"\r\n\t\t\t\telse\r\n\t\t\t\t\treturn \".Function.\"\r\n\t\twhen 'object'\r\n\t\t\tif (obj == null)\r\n\t\t\t\treturn '.null.'\r\n\t\t\tif (obj instanceof String) \\\r\n\t\t\t\t\t|| (obj instanceof Number) \\\r\n\t\t\t\t\t|| (obj instanceof RegExp)\r\n\t\t\t\treturn obj.toString()\r\n\t\t\telse if isArray(obj) && isEmpty(obj)\r\n\t\t\t\treturn '.[].'\r\n\t\t\telse if isArray(obj)\r\n\t\t\t\tlLines = []\r\n\t\t\t\tfor item in obj\r\n\t\t\t\t\tblock = toNICE(item, hOptions)\r\n\t\t\t\t\tif shouldSplit(item)\r\n\t\t\t\t\t\tlLines.push '-'\r\n\t\t\t\t\t\tlLines.push indented(block)\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tlLines.push \"- #{block}\"\r\n\t\t\t\treturn toBlock(lLines)\r\n\t\t\telse if (obj instanceof Function)\r\n\t\t\t\tif obj.prototype && (obj.prototype.constructor == obj)\r\n\t\t\t\t\treturn \".Class.\"\r\n\t\t\t\telse if obj.name\r\n\t\t\t\t\treturn \".Function #{obj.name}.\"\r\n\t\t\t\telse\r\n\t\t\t\t\treturn \".Function.\"\r\n\t\t\telse if isHash(obj) && isEmpty(obj)\r\n\t\t\t\treturn '.{}.'\r\n\t\t\telse if isHash(obj) || isClassInstance(obj)\r\n\t\t\t\tlLines = []\r\n\t\t\t\tlKeys = Object.keys(obj)\r\n\t\t\t\tif (sortKeys == true)\r\n\t\t\t\t\tlKeys.sort()\r\n\t\t\t\telse if isFunction(sortKeys)\r\n\t\t\t\t\tlKeys.sort(sortKeys)\r\n\t\t\t\tfor key in lKeys\r\n\t\t\t\t\tassert isString(key), \"key not a string: #{OL(key)}\"\r\n\t\t\t\t\tval = obj[key]\r\n\t\t\t\t\tblock = toNICE(val, hOptions)\r\n\t\t\t\t\tif shouldSplit(val)\r\n\t\t\t\t\t\tlLines.push \"#{key}:\"\r\n\t\t\t\t\t\tlLines.push indented(block)\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tlLines.push \"#{key}: #{block}\"\r\n\t\t\t\treturn toBlock(lLines)\r\n\tcroak \"Unknown object: #{OL(obj)}\"\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\ngetSortKeysFunc = (lSortKeys) =>\r\n\r\n\t# --- Convert to a function\r\n\th = {}\r\n\tfor key,i in lSortKeys\r\n\t\th[key] = i+1\r\n\r\n\treturn (aKey, bKey) ->\r\n\t\taVal = h[aKey]\r\n\t\tbVal = h[bKey]\r\n\r\n\t\tif defined(aVal)\r\n\t\t\tif defined(bVal)\r\n\t\t\t\t# --- compare numerically\r\n\t\t\t\treturn baseCompare(aVal, bVal)\r\n\t\t\telse\r\n\t\t\t\treturn -1\r\n\t\telse\r\n\t\t\tif defined(bVal)\r\n\t\t\t\treturn 1\r\n\t\t\telse\r\n\t\t\t\t# --- compare keys alphabetically\r\n\t\t\t\treturn baseCompare(aKey, bKey)\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport needsQuotes = (str) =>\r\n\r\n\t# --- if it looks like an array item, it needs quotes\r\n\tif str.match(/^\\s*-/)\r\n\t\treturn true\r\n\r\n\t# --- if it looks like a hash key, it needs quotes\r\n\tif str.match(/^\\s*\\S+\\s*:/)\r\n\t\treturn true\r\n\r\n\t# --- if it looks like a number, it needs quotes\r\n\tif str.match(/^\\s*\\d+(?:\\.\\d*)?/)\r\n\t\treturn true\r\n\r\n\treturn false\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport shouldSplit = (obj) =>\r\n\r\n\treturn isHash(obj) || isArray(obj) || isClass(obj) || isClassInstance(obj)\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport baseCompare = (a, b) =>\r\n\r\n\tif (a < b)\r\n\t\treturn -1\r\n\telse if (a > b)\r\n\t\treturn 1\r\n\telse\r\n\t\treturn 0\r\n"
  ]
}