{
  "version": 3,
  "file": "file-processor.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\lib\\file-processor.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# file-processor.coffee\r\n\r\nimport {compile as compileCoffee} from 'coffeescript'\r\nimport {compile as compileSvelte} from 'svelte/compiler'\r\n\r\nimport {\r\n\tundef, defined, notdefined, getOptions, OL,\r\n\tisString, isFunction, isArray, isHash,\r\n\tassert, croak, keys,\r\n\t} from '@jdeighan/llutils'\r\nimport {splitLine, indented} from '@jdeighan/llutils/indent'\r\nimport {\r\n\tisProjRoot, isFile, barf, slurp,\r\n\tfileExt, withExt, mkpath,\r\n\tallFilesMatching, readTextFile, newerDestFileExists,\r\n\t} from '@jdeighan/llutils/fs'\r\nimport {LineFetcher} from '@jdeighan/llutils/fetcher'\r\nimport {replaceHereDocs} from '@jdeighan/llutils/heredoc'\r\n\r\n# ---------------------------------------------------------------------------\r\n# --- func must have the following signature:\r\n#        params: (code, hMetaData)\r\n#        return value:\r\n#           either a string (e.g. code)\r\n#           or a hash with keys:\r\n#              code\r\n#              sourceMap (optional)\r\n#              hOtherFiles (optional)\r\n#                 { <ext> => <contents>, ... }\r\n\r\nexport procFiles = (pattern, lFuncs, outExt, hOptions={}) =>\r\n\r\n\t# --- A file is out of date unless a file exists\r\n\t#        with outExt extension\r\n\t#        that's newer than the original file\r\n\t# --- But ignore files inside node_modules\r\n\r\n\tif isArray(lFuncs)\r\n\t\tfor f in lFuncs\r\n\t\t\tassert isFunction(f), \"not a function: #{OL(f)}\"\r\n\telse\r\n\t\tassert isFunction(lFuncs), \"not a function: #{OL(lFuncs)}\"\r\n\t\tlFuncs = [lFuncs]\r\n\r\n\tassert outExt.startsWith('.'), \"Bad out ext: #{OL(outExt)}\"\r\n\r\n\t{force, debug, logOnly, echo} = getOptions hOptions, {\r\n\t\tforce: false\r\n\t\tdebug: false\r\n\t\tlogOnly: false\r\n\t\techo: true\r\n\t\t}\r\n\r\n\tfileFilter = ({filePath}) =>\r\n\t\tif filePath.match(/\\bnode_modules\\b/i)\r\n\t\t\treturn false\r\n\t\tif force\r\n\t\t\treturn true\r\n\t\tdestFile = withExt(filePath, outExt)\r\n\t\treturn ! newerDestFileExists(filePath, destFile)\r\n\r\n\tnumFilesProcessed = 0\r\n\tfor {relPath} from allFilesMatching(pattern, {fileFilter})\r\n\t\tif echo || logOnly\r\n\t\t\tconsole.log relPath\r\n\t\tif logOnly\r\n\t\t\tcontinue\r\n\r\n\t\t{hMetaData, contents: code} = readTextFile(relPath, 'eager')\r\n\t\tassert defined(code), \"procFiles(): undef code\"\r\n\t\tif debug\r\n\t\t\thMetaData.debug = true\r\n\r\n\t\tlSourceMaps = []\r\n\t\tfor func in lFuncs\r\n\t\t\tresult = func code, hMetaData\r\n\t\t\tif isString(result)\r\n\t\t\t\tcode = result\r\n\t\t\t\tlSourceMaps = undef\r\n\t\t\t\thOtherFiles = undef\r\n\t\t\telse\r\n\t\t\t\tassert isHash(result), \"result not a string or hash: #{OL(result)}\"\r\n\t\t\t\t{code, sourceMap, hOtherFiles} = result\r\n\t\t\t\tassert isString(code), \"code not a string: #{OL(code)}\"\r\n\t\t\t\tif defined(lSourceMaps) && defined(sourceMap)\r\n\t\t\t\t\tlSourceMaps.push sourceMap\r\n\t\t\t\telse\r\n\t\t\t\t\tlSourceMaps = undef\r\n\t\t\t\tif defined(hOtherFiles)\r\n\t\t\t\t\tfor ext in keys(hOtherFiles)\r\n\t\t\t\t\t\tbarf hOtherFiles[ext], withExt(relPath, ext)\r\n\r\n\t\tbarf code, withExt(relPath, outExt)\r\n\t\tif defined(lSourceMaps) && (lSourceMaps.length == 1)\r\n\t\t\tbarf lSourceMaps[0], withExt(relPath, \"#{outExt}.map\")\r\n\t\tnumFilesProcessed += 1\r\n\treturn numFilesProcessed\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport brew = (code, hMetaData={}) ->\r\n\r\n\t# --- metadata can be used to add a shebang line\r\n\t#     if true, use \"#!/usr/bin/env node\"\r\n\t#     else use value of shebang key\r\n\r\n\t# --- filePath is used to check for a source map\r\n\t#     without it, no source map is produced\r\n\r\n\tassert defined(code), \"code: #{OL(code)}\"\r\n\tassert isString(code), \"Not a string: #{OL(code)}\"\r\n\t{filePath, debug, shebang,\r\n\t\t} = getOptions hMetaData, {\r\n\t\tfilePath: undef\r\n\t\tdebug: false\r\n\t\tshebang: undef\r\n\t\t}\r\n\r\n\tif defined(filePath)\r\n\t\t{js, v3SourceMap} = compileCoffee code, {\r\n\t\t\tsourceMap: true\r\n\t\t\tbare: true\r\n\t\t\theader: false\r\n\t\t\tfilename: filePath\r\n\t\t\t}\r\n\telse\r\n\t\tjs = compileCoffee code, {\r\n\t\t\tbare: true\r\n\t\t\theader: false\r\n\t\t\t}\r\n\t\tv3SourceMap = undef\r\n\r\n\tassert defined(js), \"No JS code generated\"\r\n\r\n\tif defined(shebang)\r\n\t\tif isString(shebang)\r\n\t\t\tjs = shebang + \"\\n\" + js.trim()\r\n\t\telse\r\n\t\t\tjs = \"#!/usr/bin/env node\" + \"\\n\" + js.trim()\r\n\r\n\treturn {\r\n\t\tcode: js\r\n\t\tsourceMap: v3SourceMap\r\n\t\t}\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport cieloPreProcess = (code, hOptions) =>\r\n\r\n\t{debug} = getOptions hOptions, {\r\n\t\tdebug: false\r\n\t\t}\r\n\r\n\tif debug\r\n\t\tconsole.log \"IN cieloPreProcess()\"\r\n\tlLines = []\r\n\tsrc = new LineFetcher(code)\r\n\twhile src.moreLines()\r\n\t\t[level, str] = splitLine(src.fetch())\r\n\t\tif (level == 0) && (str == '__END__')\r\n\t\t\tbreak\r\n\t\tif debug\r\n\t\t\tconsole.log \"GOT: #{OL(str)} at level #{level}\"\r\n\t\tstr = replaceHereDocs(level, str, src)\r\n\t\tlLines.push indented(str, level)\r\n\treturn lLines.join(\"\\n\")\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport sveltify = (code, hMetaData={}) =>\r\n\r\n\thMetaData.filename = hMetaData.filePath\r\n\tdelete hMetaData.filePath\r\n\telem = hMetaData.customElement\r\n\tif isString(elem, 'nonempty')\r\n\t\tcheckCustomElemName(elem)\r\n\t\thMetaData.customElement = true\r\n\t\tstr = \"<svelte:options customElement=#{OL(elem)}/>\"\r\n\t\tcode = str + \"\\n\" + code\r\n\thResult = compileSvelte code, hMetaData\r\n\thResult.code = hResult.js.code\r\n\treturn hResult\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport checkCustomElemName = (name) =>\r\n\r\n\tassert (name.length > 0), \"empty name: #{OL(name)}\"\r\n\tassert (name.indexOf('-') > 0), \"Bad custom elem name: #{OL(name)}\"\r\n\treturn true\r\n\r\n# ---------------------------------------------------------------------------\r\n"
  ]
}