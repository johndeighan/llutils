{
  "version": 3,
  "file": "svelte-utils.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\lib\\svelte-utils.coffee"
  ],
  "names": [],
  "mappings": "AAAqB;AAAA,IAAA;;AAErB,OAAA;EAAQ,OAAR;CAAA,MAAA;;AAEA,OAAA;EACC,KADD;EACQ,OADR;EACiB,UADjB;EAC6B,UAD7B;EACyC,MADzC;EAEC,QAFD;EAEW,EAFX;EAEe,QAFf;CAAA,MAAA;;AAIA,OAAA;EACC,YADD;EACe,IADf;EACqB,OADrB;EAC8B,OAD9B;EACuC,MADvC;CAAA,MAAA,uBARqB;;;AAcrB,OAAA,IAAO,QAAA,GAAW,CAAC,IAAD,EAAO,YAAU,CAAA,CAAjB,CAAA,GAAA;AAElB,MAAA,IAAA,EAAA;EAAC,IAAA,GAAO,SAAS,CAAC;EACjB,IAAG,QAAA,CAAS,IAAT,EAAe,UAAf,CAAH;IACC,mBAAA,CAAoB,IAApB;IACA,SAAS,CAAC,aAAV,GAA0B;IAC1B,GAAA,GAAM,CAAA,8BAAA,CAAA,CAAiC,EAAA,CAAG,IAAH,CAAjC,CAAA,EAAA;IACN,IAAA,GAAO,GAAA,GAAM,IAAN,GAAa,KAJrB;;AAKA,SAAO,OAAA,CAAQ,IAAR,EAAc,SAAd;AARU,EAdG;;;AA0BrB,OAAA,IAAO,YAAA,GAAe,CAAC,QAAD,EAAW,WAAS,CAAA,CAApB,CAAA,GAAA;AAEtB,MAAA,QAAA,EAAA,SAAA,EAAA;EAAC,QAAA,GAAW,UAAA,CAAW,QAAX;EAEX,MAAA,CAAQ,OAAA,CAAQ,QAAR,CAAA,KAAqB,SAA7B,EAAyC,mBAAzC;EACA,CAAA,CAAC,SAAD,EAAY,QAAZ,CAAA,GAAwB,YAAA,CAAa,QAAb,EAAuB,OAAvB,CAAxB;EACA,SAAS,CAAC,QAAV,GAAqB,SAAS,CAAC;EAC/B,OAAO,SAAS,CAAC;EACjB,MAAM,CAAC,MAAP,CAAc,SAAd,EAAyB,QAAzB;EACA,CAAA,CAAC,EAAD,CAAA,GAAO,QAAA,CAAS,QAAT,EAAmB,SAAnB,CAAP;SACA,IAAA,CAAK,EAAE,CAAC,IAAR,EAAc,OAAA,CAAQ,QAAR,EAAkB,KAAlB,CAAd;AAVqB,EA1BD;;;AAwCrB,mBAAA,GAAsB,CAAC,IAAD,CAAA,GAAA;EAErB,MAAA,CAAQ,IAAI,CAAC,MAAL,GAAc,CAAtB,EAA0B,CAAA,YAAA,CAAA,CAAe,EAAA,CAAG,IAAH,CAAf,CAAA,CAA1B;EACA,MAAA,CAAQ,IAAI,CAAC,OAAL,CAAa,GAAb,CAAA,GAAoB,CAA5B,EAAgC,CAAA,sBAAA,CAAA,CAAyB,EAAA,CAAG,IAAH,CAAzB,CAAA,CAAhC;AACA,SAAO;AAJc",
  "sourcesContent": [
    "# svelte-utils.coffee\r\n\r\nimport {compile} from 'svelte/compiler'\r\n\r\nimport {\r\n\tundef, defined, notdefined, getOptions, assert,\r\n\tnonEmpty, OL, isString,\r\n\t} from '@jdeighan/llutils'\r\nimport {\r\n\treadTextFile, barf, fileExt, withExt, isFile,\r\n\t} from '@jdeighan/llutils/fs'\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport sveltify = (code, hMetaData={}) =>\r\n\r\n\telem = hMetaData.customElement\r\n\tif isString(elem, 'nonempty')\r\n\t\tcheckCustomElemName(elem)\r\n\t\thMetaData.customElement = true\r\n\t\tstr = \"<svelte:options customElement=#{OL(elem)}/>\"\r\n\t\tcode = str + \"\\n\" + code\r\n\treturn compile code, hMetaData\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport sveltifyFile = (filePath, hOptions={}) =>\r\n\r\n\thOptions = getOptions hOptions\r\n\r\n\tassert (fileExt(filePath) == '.svelte'), \"Not a svelte file\"\r\n\t{hMetaData, contents} = readTextFile filePath, 'eager'\r\n\thMetaData.filename = hMetaData.filePath\r\n\tdelete hMetaData.filePath\r\n\tObject.assign hMetaData, hOptions\r\n\t{js} = sveltify contents, hMetaData\r\n\tbarf js.code, withExt(filePath, '.js')\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\ncheckCustomElemName = (name) =>\r\n\r\n\tassert (name.length > 0), \"empty name: #{OL(name)}\"\r\n\tassert (name.indexOf('-') > 0), \"Bad custom elem name: #{OL(name)}\"\r\n\treturn true\r\n"
  ]
}