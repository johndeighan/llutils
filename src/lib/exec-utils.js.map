{
  "version": 3,
  "file": "exec-utils.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\lib\\exec-utils.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# exec-utils.coffee\r\n\r\nimport {exec, execSync} from 'node:child_process'\r\nimport vm from 'node:vm'\r\nimport {promisify} from 'node:util'\r\nexecAsync = promisify(exec)\r\n\r\nimport {\r\n\tundef, defined, notdefined, getOptions, chomp,\r\n\tassert, croak, OL, LOG, stripCR, isEmpty,\r\n\t} from '@jdeighan/llutils'\r\nimport {slurp} from '@jdeighan/llutils/fs'\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport execCmd = (cmdLine, hOptions={}) =>\r\n\t# --- may throw an exception\r\n\r\n\thOptions.encoding = 'utf8'\r\n\thOptions.windowsHide = true\r\n\thOptions.timeout = 100000\r\n\r\n\tresult = execSync(cmdLine, hOptions)\r\n\tassert defined(result), \"undef return from execSync()\"\r\n\tresult = result.toString()\r\n\tassert defined(result), \"undef return from toString()\"\r\n\treturn stripCR(result)\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport execCmdY = (cmdLine, hOptions={}) =>\r\n\r\n\thOptions.input = \"y\\r\\n\"\r\n\treturn execCmd cmdLine, hOptions\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport execAndLogCmd = (cmdLine, hOptions={}) =>\r\n\t# --- may throw an exception\r\n\r\n\thOptions = getOptions hOptions, {\r\n\t\tencoding: 'utf8'\r\n\t\twindowsHide: true\r\n\t\t}\r\n\tresult = execSync(cmdLine, hOptions).toString()\r\n\tconsole.log result\r\n\treturn result\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport execCmdAsync = (cmdLine, hOptions={}) =>\r\n\t# --- may throw an exception\r\n\r\n\thOptions = getOptions hOptions, {\r\n\t\tencoding: 'utf8'\r\n\t\twindowsHide: true\r\n\t\t}\r\n\treturn execAsync(cmdLine, hOptions)\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport npmLogLevel = () =>\r\n\r\n\tresult = execCmd('npm config get loglevel')\r\n\treturn chomp(result)\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport getScriptObj = (jsCode, hOptions={}) =>\r\n\r\n\treturn new vm.Script(jsCode, hOptions)\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport checkJS = (jsCode, hOptions={}) =>\r\n\r\n\ttry\r\n\t\tscript = getScriptObj(jsCode, hOptions)\r\n\t\treturn true\r\n\tcatch err\r\n\t\treturn false\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport checkJSFile = (filePath, hOptions={}) =>\r\n\r\n\tassert isFile(filePath), \"No such file: #{OL(filePath)}\"\r\n\treturn checkJS(slurp(filePath), hOptions)\r\n\r\n# ---------------------------------------------------------------------------\r\n# --- hContext is the global object\r\n#     JS code can set keys via, e.g. \"globalThis.key = <value>;\"\r\n#     these values will appear in hContext\r\n\r\nexport execJS = (jsCode, hContext={}, filename=undef) =>\r\n\r\n\thOptions = {filename}\r\n\tscript = getScriptObj(\"'use strict';\\n#{jsCode}\", hOptions)\r\n\tscript.runInNewContext(hContext, {\r\n\t\tdisplayErrors: true\r\n\t\t})\r\n\treturn hContext\r\n"
  ]
}