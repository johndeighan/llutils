{
  "version": 3,
  "file": "context.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\lib\\context.coffee"
  ],
  "names": [],
  "mappings": "AAAgB;AAEhB,OAAA;EACC,KADD;EACQ,OADR;EACiB,UADjB;EAC6B,EAD7B;EACiC,OADjC;EAC0C,MAD1C;EAEC,MAFD;EAES,KAFT;CAAA,MAAA,oBAFgB;;;AAShB,OAAA,IAAa,UAAN,MAAA,QAAA;EAEN,WAAa,CAAC,GAAD,CAAA;IAEZ,IAAC,CAAA,MAAD,GAAU,CAAC,GAAD;EAFE,CAAd;;;EAMC,OAAS,CAAA,CAAA;AAER,WAAO,IAAC,CAAA,MAAM,CAAC,EAAR,CAAW,CAAC,CAAZ;EAFC,CANV;;;EAYC,OAAS,CAAA,CAAA;AAER,WAAO,OAAA,CAAQ,IAAC,CAAA,OAAD,CAAA,CAAR;EAFC,CAZV;;;EAkBC,MAAQ,CAAA,CAAA;AAEP,WAAO,MAAA,CAAO,IAAC,CAAA,OAAD,CAAA,CAAP;EAFA,CAlBT;;;EAwBC,OAAS,CAAA,CAAA;AAER,WAAO,UAAA,CAAW,IAAC,CAAA,OAAD,CAAA,CAAX;EAFC,CAxBV;;;EA8BC,GAAK,CAAC,GAAD,CAAA;IAEJ,IAAC,CAAA,MAAM,CAAC,IAAR,CAAa,GAAb;EAFI,CA9BN;;;EAqCC,GAAK,CAAA,CAAA;AAEN,QAAA;IAAE,MAAA,GAAS,IAAC,CAAA,MAAM,CAAC,GAAR,CAAA;IACT,MAAA,CAAQ,IAAC,CAAA,MAAM,CAAC,MAAR,IAAkB,CAA1B,EAA8B,qBAA9B;AACA,WAAO;EAJH;;AAvCC",
  "sourcesContent": [
    "# context.coffee\r\n\r\nimport {\r\n\tundef, defined, notdefined, OL, isArray, isHash,\r\n\tassert, croak,\r\n\t} from '@jdeighan/llutils'\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class Context\r\n\r\n\tconstructor: (obj) ->\r\n\r\n\t\t@lStack = [obj]\r\n\r\n\t# ..........................................................\r\n\r\n\tcurrent: () ->\r\n\r\n\t\treturn @lStack.at(-1)\r\n\r\n\t# ..........................................................\r\n\r\n\tisArray: () ->\r\n\r\n\t\treturn isArray(@current())\r\n\r\n\t# ..........................................................\r\n\r\n\tisHash: () ->\r\n\r\n\t\treturn isHash(@current())\r\n\r\n\t# ..........................................................\r\n\r\n\tisUndef: () ->\r\n\r\n\t\treturn notdefined(@current())\r\n\r\n\t# ..........................................................\r\n\r\n\tadd: (obj) ->\r\n\r\n\t\t@lStack.push obj\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\tpop: () ->\r\n\r\n\t\tresult = @lStack.pop()\r\n\t\tassert (@lStack.length >= 1), \"Empty context stack\"\r\n\t\treturn result\r\n"
  ]
}