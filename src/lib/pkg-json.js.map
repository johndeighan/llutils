{
  "version": 3,
  "file": "pkg-json.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\lib\\pkg-json.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# pkg-json.coffee\r\n\r\nimport {\r\n\tundef, defined, notdefined, isEmpty, nonEmpty, getOptions, hasKey,\r\n\tassert, croak,\r\n\t} from '@jdeighan/llutils'\r\nimport {\r\n\tslurpJSON, barfJSON, createFile, touch,\r\n\t} from '@jdeighan/llutils/fs'\r\n\r\n# ---------------------------------------------------------------------------\r\n# --- 1. Read in current package.json\r\n#     2. get keys from env var PROJECT_PACKAGE_JSON\r\n#     3. overwrite keys in package.json with #2 keys\r\n#     4. adjust name if env var PROJECT_NAME_PREFIX is set\r\n\r\nexport class PkgJson\r\n\r\n\tconstructor: (hOptions={}) ->\r\n\r\n\t\t{llutils} = getOptions hOptions, {\r\n\t\t\tllutils: true\r\n\t\t\t}\r\n\r\n\t\t@hJson = slurpJSON('./package.json')\r\n\t\t@mergeKeysFromEnv()\r\n\t\tprefix = process.env.PROJECT_NAME_PREFIX\r\n\t\tif nonEmpty(prefix)\r\n\t\t\t@setField 'name', \"#{prefix}#{@hJson.name}\"\r\n\t\tif llutils && !isInstalled('@jdeighan/llutils')\r\n\t\t\taddDep '@jdeighan/llutils', 'latest'\r\n\r\n\t# ..........................................................\r\n\r\n\tmergeKeysFromEnv: () ->\r\n\r\n\t\tpkgJson = process.env.PROJECT_PACKAGE_JSON\r\n\t\tif nonEmpty(pkgJson)\r\n\t\t\t# --- Can be either a JSON string or a file path\r\n\t\t\tif (pkgJson.indexOf('{') == 0)\r\n\t\t\t\thSetKeys = JSON.parse(pkgJson)\r\n\t\t\telse\r\n\t\t\t\thSetKeys = slurpJSON(pkgJson)\r\n\t\t\tObject.assign @hJson, hSetKeys\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\tsetField: (name, value) =>\r\n\r\n\t\t@hJson[name] = value\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\taddScript: (name, str) =>\r\n\r\n\t\tif ! hasKey(hJson, 'scripts')\r\n\t\t\t@hJson.scripts = {}\r\n\t\t@hJson.scripts[name] = str\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\taddExport: (name, str) =>\r\n\r\n\t\tif ! hasKey(hJson, 'exports')\r\n\t\t\t@hJson.exports = {}\r\n\t\t@hJson.exports[name] = str\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\taddBin: (name, str) =>\r\n\r\n\t\tif ! hasKey(hJson, 'bin')\r\n\t\t\t@hJson.bin = {}\r\n\t\t@hJson.bin[name] = str\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\taddDep: (pkg, version) =>\r\n\r\n\t\tif ! hasKey(hJson, 'dependencies')\r\n\t\t\t@hJson.dependencies = {}\r\n\t\tif @hJson?.devDependencies.pkg\r\n\t\t\tdelete @hJson.devDependencies.pkg\r\n\t\t@hJson.dependencies[pkg] = version\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\taddDevDep: (pkg, version) =>\r\n\r\n\t\tif ! hasKey(hJson, 'devDependencies')\r\n\t\t\t@hJson.devDependencies = {}\r\n\t\tif @hJson?.dependencies.pkg\r\n\t\t\tdelete @hJson.dependencies.pkg\r\n\t\t@hJson.devDependencies[pkg] = version\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\tisInstalled: (hJson, pkg) =>\r\n\r\n\t\treturn hasKey(hJson.dependencies, pkg) \\\r\n\t\t\t\t|| hasKey(hJson.devDependencies, pkg)\r\n\r\n# ---------------------------------------------------------------------------\r\n"
  ]
}