{
  "version": 3,
  "file": "pkg-json.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\lib\\pkg-json.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# pkg-json.coffee\r\n\r\nimport {\r\n\tundef, defined, notdefined, isEmpty, nonEmpty, getOptions, hasKey,\r\n\tassert, croak, OL,\r\n\t} from '@jdeighan/llutils'\r\nimport {\r\n\tslurpPkgJSON, slurpJSON, barfJSON, barfPkgJSON,\r\n\tcreateFile, touch,\r\n\t} from '@jdeighan/llutils/fs'\r\n\r\nhVersions = {\r\n\tcoffeescript: \"^2.7.0\"\r\n\tava: \"^6.1.3\"\r\n\tsvelte: \"^5.0.0-next.200\"\r\n\tgulp: \"^5.0.0\"\r\n\tparcel: \"^2.12.0\"\r\n\t'@jdeighan/llutils': \"^1.0.8\"\r\n\t}\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\ngetVersion = (pkg) =>\r\n\r\n\tif hasKey(hVersions, pkg)\r\n\t\treturn hVersions[pkg]\r\n\telse\r\n\t\treturn 'latest'\r\n\r\n# ---------------------------------------------------------------------------\r\n# --- 1. Read in current package.json\r\n#     2. get keys from env var PROJECT_PACKAGE_JSON\r\n#     3. overwrite keys in package.json with #2 keys\r\n#     4. adjust name if env var PROJECT_NAME_PREFIX is set\r\n\r\nexport class PkgJson\r\n\r\n\tconstructor: () ->\r\n\r\n\t\t@hJson = slurpPkgJSON()\r\n\t\t@mergeKeysFromEnv()\r\n\t\tprefix = process.env.PROJECT_NAME_PREFIX\r\n\t\tif nonEmpty(prefix)\r\n\t\t\t@setField 'name', \"#{prefix}#{@hJson.name}\"\r\n\t\t@setField 'license', 'MIT'\r\n\t\t@addDep '@jdeighan/llutils'\r\n\r\n\t# ..........................................................\r\n\r\n\tmergeKeysFromEnv: () ->\r\n\r\n\t\tpkgJson = process.env.PROJECT_PACKAGE_JSON\r\n\t\tif nonEmpty(pkgJson)\r\n\t\t\t# --- Can be either a JSON string or a file path\r\n\t\t\tif (pkgJson.indexOf('{') == 0)\r\n\t\t\t\thSetKeys = JSON.parse(pkgJson)\r\n\t\t\telse\r\n\t\t\t\thSetKeys = slurpJSON(pkgJson)\r\n\t\t\tObject.assign @hJson, hSetKeys\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\tname: () ->\r\n\r\n\t\treturn @hJson.name\r\n\r\n\t# ..........................................................\r\n\r\n\tsetField: (name, value) ->\r\n\r\n\t\t@hJson[name] = value\r\n\t\tconsole.log \"   #{name} = #{OL(value)}\"\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\taddScript: (name, str) ->\r\n\r\n\t\tif ! hasKey(@hJson, 'scripts')\r\n\t\t\t@hJson.scripts = {}\r\n\t\t@hJson.scripts[name] = str\r\n\t\tconsole.log \"   SCRIPT #{name} = #{OL(str)}\"\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\taddExport: (name, str) ->\r\n\r\n\t\tif ! hasKey(@hJson, 'exports')\r\n\t\t\t@hJson.exports = {}\r\n\t\t@hJson.exports[name] = str\r\n\t\tconsole.log \"   EXPORT #{name} = #{OL(str)}\"\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\taddBin: (name, str) ->\r\n\r\n\t\tif ! hasKey(@hJson, 'bin')\r\n\t\t\t@hJson.bin = {}\r\n\t\t@hJson.bin[name] = str\r\n\t\tconsole.log \"   BIN #{name} = #{OL(str)}\"\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\taddDep: (pkg) ->\r\n\r\n\t\tif ! hasKey(@hJson, 'dependencies')\r\n\t\t\t@hJson.dependencies = {}\r\n\t\tif @hJson?.devDependencies?.pkg\r\n\t\t\tdelete @hJson.devDependencies.pkg\r\n\t\tversion = getVersion(pkg)\r\n\t\t@hJson.dependencies[pkg] = version\r\n\t\tconsole.log \"   DEP #{pkg} = #{OL(version)}\"\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\taddDevDep: (pkg) ->\r\n\r\n\t\tif ! hasKey(@hJson, 'devDependencies')\r\n\t\t\t@hJson.devDependencies = {}\r\n\t\tif @hJson?.dependencies.pkg\r\n\t\t\tdelete @hJson.dependencies.pkg\r\n\t\tversion = getVersion(pkg)\r\n\t\t@hJson.devDependencies[pkg] = version\r\n\t\tconsole.log \"   DEV DEP #{pkg} = #{OL(version)}\"\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\tisInstalled: (pkg) ->\r\n\r\n\t\treturn hasKey(@hJson.dependencies, pkg) \\\r\n\t\t\t\t|| hasKey(@hJson.devDependencies, pkg)\r\n\r\n\t# ..........................................................\r\n\r\n\twrite: () ->\r\n\r\n\t\tbarfPkgJSON @hJson\r\n\t\treturn\r\n"
  ]
}