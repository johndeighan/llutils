{
  "version": 3,
  "file": "dom.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\lib\\dom.coffee"
  ],
  "names": [],
  "mappings": "AAAY;AAEZ,OAAA;EACC,KADD;EACQ,OADR;EACiB,UADjB;EAC6B,GAD7B;EACkC,EADlC;EACsC,KADtC;CAAA,MAAA;;AAGA,OAAA;EAAQ,SAAR;EAAmB,aAAnB;CAAA,MAAA,SALY;;;AASZ,OAAA,IAAa,aAAN,MAAA,WAAA;EAEN,WAAa,CAAA,CAAA;IAEZ,IAAC,CAAA,IAAD,CAAA;EAFY;;EAIb,IAAM,CAAA,CAAA;IAEL,IAAC,CAAA,WAAD,GAAe,IAAI,SAAJ,CAAA,CAAe,CAAC,eAAhB,CAAgC,CAAA;MAAA,CAAhC,EAGT,UAHS;WAIf,IAAC,CAAA,OAAD,GAAW,IAAC,CAAA,WAAW,CAAC;EANnB;;EAQN,UAAY,CAAC,GAAD,EAAM,QAAM,CAAA,CAAZ,CAAA;AAEb,QAAA;IAAE,IAAA,GAAO,IAAC,CAAA,WAAW,CAAC,aAAb,CAA2B,GAA3B;IACP,IAAC,CAAA,OAAO,CAAC,WAAT,CAAqB,IAArB;EAHW;;EAMZ,QAAU,CAAA,CAAA;AAEX,QAAA;IAAE,UAAA,GAAa,IAAI,aAAJ,CAAA;AACb,WAAO,SAAA,CAAU,UAAU,CAAC,iBAAX,CAA6B,IAAC,CAAA,WAA9B,CAAV;EAHE;;AApBJ,EATK;;;;AAqCZ,OAAA,IAAO,SAAA,GAAY,CAAC,MAAD,EAAS,MAAM,IAAf,EAAqB,KAAK,IAA1B,CAAA,GAAA;AAEnB,MAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,MAAA,EAAA,GAAA,EAAA;EAAC,SAAA,GAAY;EACZ,MAAA,GAAS;EACT,MAAA,GAAS,MAAM,CAAC,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAjB,CAAmB,CAAC,KAApB,CAA0B,OAA1B;EACT,IAAI,MAAM,CAAC,CAAD,CAAG,CAAC,CAAD,CAAT,KAAgB,GAApB;IACC,SAAA,IAAa,GAAA,GAAM,MAAM,CAAC,KAAP,CAAA,CAAN,GAAuB,GAAvB,GAA6B,GAD3C;;EAEA,KAAA,wCAAA;;IACC,IAAI,IAAI,CAAC,CAAD,CAAJ,KAAW,GAAf;;MAEC,MAAA,GAAS,MAAM,CAAC,KAAP,CAAa,GAAG,CAAC,MAAjB,EAFV;;IAGA,SAAA,IAAa,MAAA,GAAS,GAAT,GAAe,IAAf,GAAsB,GAAtB,GAA4B;IACzC,IAAI,CAAC,IAAI,CAAC,CAAD,CAAJ,KAAW,GAAZ,CAAA,IACC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAL,GAAc,CAAf,CAAJ,KAAyB,GAA1B,CADD,IAEC,CAAC,IAAI,CAAC,OAAL,CAAa,IAAb,CAAA,KAAsB,CAAC,CAAxB,CAFL;;MAIC,MAAA,IAAU,IAJX;;EALD;AAUA,SAAO,SAAS,CAAC,IAAV,CAAA;AAjBW,EArCP;;;AA0DZ,OAAA,IAAO,IAAA,GAAO,IAAI,UAAJ,CAAA",
  "sourcesContent": [
    "# dom.coffee\r\n\r\nimport {\r\n\tundef, defined, notdefined, LOG, OL, range,\r\n\t} from '@jdeighan/llutils'\r\nimport {DOMParser, XMLSerializer} from 'xmldom'\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class VirtualDOM\r\n\r\n\tconstructor: () ->\r\n\r\n\t\t@init()\r\n\r\n\tinit: () ->\r\n\r\n\t\t@xmlDocument = new DOMParser().parseFromString(\"\"\"\r\n\t\t\t<xml>\r\n\t\t\t</xml>\r\n\t\t\t\"\"\", 'text/xml')\r\n\t\t@docElem = @xmlDocument.documentElement\r\n\r\n\taddElement: (tag, hAttr={}) ->\r\n\r\n\t\telem = @xmlDocument.createElement(tag)\r\n\t\t@docElem.appendChild(elem)\r\n\t\treturn\r\n\r\n\tasString: () ->\r\n\r\n\t\tserializer = new XMLSerializer()\r\n\t\treturn formatXML(serializer.serializeToString(@xmlDocument))\r\n\r\n# ---------------------------------------------------------------------------\r\n# tab = optional indent value, default is tab (\\t)\r\n\r\nexport formatXML = (xmlStr, tab = '\\t', nl = '\\n') =>\r\n\r\n\tformatted = ''\r\n\tindent = ''\r\n\tlNodes = xmlStr.slice(1, -1).split(/>\\s*</)\r\n\tif (lNodes[0][0] == '?')\r\n\t\tformatted += '<' + lNodes.shift() + '>' + nl\r\n\tfor node in lNodes\r\n\t\tif (node[0] == '/')\r\n\t\t\t# --- decrease indent\r\n\t\t\tindent = indent.slice(tab.length)\r\n\t\tformatted += indent + '<' + node + '>' + nl\r\n\t\tif ((node[0] != '/') \\\r\n\t\t\t\t&& (node[node.length - 1] != '/') \\\r\n\t\t\t\t&& (node.indexOf('</') == -1))\r\n\t\t\t# --- increase indent\r\n\t\t\tindent += tab\r\n\treturn formatted.trim()\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport VDOM = new VirtualDOM()\r\n"
  ]
}