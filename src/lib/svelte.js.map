{
  "version": 3,
  "file": "svelte.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\lib\\svelte.coffee"
  ],
  "names": [],
  "mappings": "AAAe;AAEf,OAAA;EAAQ,OAAA,iBAAR;CAAA,MAAA;;AAEA,OAAA;EACC,KADD;EACQ,OADR;EACiB,UADjB;EAC6B,EAD7B;EAEC,QAFD;EAEW,UAFX;EAEuB,OAFvB;EAEgC,MAFhC;EAGC,MAHD;EAGS,KAHT;EAGgB,IAHhB;EAGsB,MAHtB;EAG8B,QAH9B;EAGwC,SAHxC;CAAA,MAAA,oBAJe;;;AAYf,OAAA,IAAO,UAAA,GAAa,CAAC,IAAD,EAAO,YAAU,CAAA,CAAjB,EAAqB,WAAS,KAA9B,CAAA,GAAA;AAEpB,MAAA,IAAA,EAAA,OAAA,EAAA;EAAC,SAAS,CAAC,QAAV,GAAqB;EACrB,IAAA,GAAO,SAAS,CAAC;EACjB,IAAG,QAAA,CAAS,IAAT,EAAe,UAAf,CAAH;IACC,mBAAA,CAAoB,IAApB;IACA,SAAS,CAAC,aAAV,GAA0B;IAC1B,GAAA,GAAM,CAAA,8BAAA,CAAA,CAAiC,EAAA,CAAG,IAAH,CAAjC,CAAA,EAAA;IACN,IAAA,GAAO,GAAA,GAAM,IAAN,GAAa,KAJrB;;EAKA,OAAA,GAAU,aAAA,CAAc,IAAd,EAAoB,SAApB;AACV,SAAO;IACN,IAAA,EAAM,OAAO,CAAC,EAAE,CAAC,IADX;IAEN,SAAA,EAAW,KAFL;IAGN,KAAA,EAAO,EAHD;IAIN,WAAA,EAAa,CAAA;EAJP;AAVY,EAZL;;;AA+Bf,OAAA,IAAO,mBAAA,GAAsB,CAAC,IAAD,CAAA,GAAA;EAE5B,MAAA,CAAQ,IAAI,CAAC,MAAL,GAAc,CAAtB,EAA0B,CAAA,YAAA,CAAA,CAAe,EAAA,CAAG,IAAH,CAAf,CAAA,CAA1B;EACA,MAAA,CAAQ,IAAI,CAAC,OAAL,CAAa,GAAb,CAAA,GAAoB,CAA5B,EAAgC,CAAA,sBAAA,CAAA,CAAyB,EAAA,CAAG,IAAH,CAAzB,CAAA,CAAhC;AACA,SAAO;AAJqB;;AA/Bd",
  "sourcesContent": [
    "# svelte.coffee\r\n\r\nimport {compile as compileSvelte} from 'svelte/compiler'\r\n\r\nimport {\r\n\tundef, defined, notdefined, OL,\r\n\tisString, isFunction, isArray, isHash,\r\n\tassert, croak, keys, hasKey, nonEmpty, gen2block,\r\n\t} from '@jdeighan/llutils'\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport procSvelte = (code, hMetaData={}, filePath=undef) =>\r\n\r\n\thMetaData.filename = filePath\r\n\telem = hMetaData.customElement\r\n\tif isString(elem, 'nonempty')\r\n\t\tcheckCustomElemName(elem)\r\n\t\thMetaData.customElement = true\r\n\t\tstr = \"<svelte:options customElement=#{OL(elem)}/>\"\r\n\t\tcode = str + \"\\n\" + code\r\n\thResult = compileSvelte code, hMetaData\r\n\treturn {\r\n\t\tcode: hResult.js.code\r\n\t\tsourceMap: undef\r\n\t\tlUses: []\r\n\t\thOtherFiles: {}\r\n\t\t}\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport checkCustomElemName = (name) =>\r\n\r\n\tassert (name.length > 0), \"empty name: #{OL(name)}\"\r\n\tassert (name.indexOf('-') > 0), \"Bad custom elem name: #{OL(name)}\"\r\n\treturn true\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\n"
  ]
}