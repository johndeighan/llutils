{
  "version": 3,
  "file": "dump.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\lib\\dump.coffee"
  ],
  "names": [],
  "mappings": "AAAa;AAEb,OAAA;EACC,KADD;EACQ,OADR;EACiB,UADjB;EAC6B,UAD7B;EACyC,EADzC;EAC6C,GAD7C;EAEC,QAFD;EAEW,MAFX;EAEmB,QAFnB;EAE6B,WAF7B;EAE0C,OAF1C;EAGC,MAHD;EAGS,KAHT;CAAA,MAAA;;AAKA,OAAA;EAAQ,MAAR;CAAA,MAAA,4BAPa;;;AAWb,OAAA,IAAO,IAAA,GAAO,CAAC,IAAD,EAAO,QAAM,QAAb,EAAuB,WAAS,CAAA,CAAhC,CAAA,GAAA;AAEd,MAAA,IAAA,EAAA,GAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,MAAA,EAAA,QAAA,EAAA,GAAA,EAAA;EAAC,CAAA,CAAC,GAAD,EAAM,KAAN,EAAa,OAAb,EAAsB,MAAtB,EAA8B,QAA9B,EAAwC,IAAxC,CAAA,GACK,UAAA,CAAW,QAAX,EAAqB;IACzB,GAAA,EAAK,KADoB;IAEzB,KAAA,EAAO,EAFkB;IAGzB,OAAA,EAAS,IAHgB;IAIzB,MAAA,EAAQ,KAJiB;IAKzB,QAAA,EAAU,KALe;IAMzB,IAAA,EAAM;EANmB,CAArB,CADL;EASA,KAAA,GAAQ,KAAK,CAAC,OAAN,CAAc,GAAd,EAAkB,GAAlB,EATT;;EAYC,MAAA,GAAS;EACT,MAAA,GAAS,CAAC,GAAD,CAAA,GAAA;IACR,MAAM,CAAC,IAAP,CAAY,GAAZ;IACA,IAAG,IAAH;aACC,GAAA,CAAI,GAAJ,EADD;;EAFQ;EAKT,IAAG,OAAH;IACC,GAAA,GAAM,EAAA,CAAG,IAAH,EAAS,CAAC,GAAD,CAAT;IACN,IAAI,GAAG,CAAC,MAAJ,IAAc,KAAlB;MACC,MAAA,CAAO,CAAA,CAAA,CAAG,KAAH,CAAA,GAAA,CAAA,CAAc,GAAd,CAAA,CAAP;AACA,aAAO,OAAA,CAAQ,MAAR,EAFR;KAFD;;EAMA,IAAG,OAAA,CAAQ,MAAR,CAAH;IACC,MAAA,CAAO,QAAA,CAAS,CAAA,CAAA,CAAG,KAAH,CAAA,KAAA,CAAA,CAAgB,MAAhB,CAAA,CAAA,CAAT,EAAoC,KAApC,EAA2C,QAA3C,CAAP,EADD;GAAA,MAAA;IAGC,MAAA,CAAO,QAAA,CAAS,KAAT,EAAgB,KAAhB,EAAuB,QAAvB,CAAP,EAHD;;EAKA,IAAG,OAAA,CAAQ,MAAR,CAAH;AACC,YAAO,MAAP;AAAA,WACM,MADN;QAEE,MAAA,CAAO,IAAI,CAAC,SAAL,CAAe,IAAf,EAAqB,KAArB,EAA4B,CAA5B,CAAP;AADI;AADN,WAGM,MAHN;QAIE,MAAA,CAAO,MAAA,CAAO,IAAP,CAAP;AADI;AAHN,WAKM,MALN;QAME,MAAA,CAAO,MAAA,CAAO,IAAP,EAAa,CAAC,QAAD,CAAb,CAAP;AADI;AALN;QAQE,KAAA,CAAM,CAAA,YAAA,CAAA,CAAe,EAAA,CAAG,MAAH,CAAf,CAAA,CAAN;AARF,KADD;GAAA,MAUK,IAAG,QAAA,CAAS,IAAT,CAAH;IACJ,IAAG,GAAH;MACC,MAAA,CAAO,WAAA,CAAY,IAAZ,CAAP,EADD;KAAA,MAAA;MAGC,MAAA,CAAO,IAAP,EAHD;KADI;GAAA,MAAA;IAMJ,MAAA,CAAO,MAAA,CAAO,IAAP,CAAP,EANI;;EAQL,MAAA,CAAO,GAAG,CAAC,MAAJ,CAAW,KAAX,CAAP;AACA,SAAO,OAAA,CAAQ,MAAR;AAlDM",
  "sourcesContent": [
    "# dump.coffee\r\n\r\nimport {\r\n\tundef, defined, notdefined, getOptions, OL, log,\r\n\tcentered, toTAML, isString, escapeBlock, toBlock,\r\n\tassert, croak,\r\n\t} from '@jdeighan/llutils'\r\nimport {toNICE} from '@jdeighan/llutils/to-nice'\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport DUMP = (item, label='RESULT', hOptions={}) =>\r\n\r\n\t{esc, width, oneLine, format, sortKeys, echo\r\n\t\t} = getOptions hOptions, {\r\n\t\tesc: false\r\n\t\twidth: 50\r\n\t\toneLine: true\r\n\t\tformat: undef    # --- can be 'JSON', 'TAML', 'NICE'\r\n\t\tsortKeys: undef\r\n\t\techo: true\r\n\t\t}\r\n\tlabel = label.replace('_',' ')\r\n\r\n\t# --- define an output() function\r\n\tlLines = []\r\n\toutput = (str) =>\r\n\t\tlLines.push str\r\n\t\tif echo\r\n\t\t\tlog str\r\n\r\n\tif oneLine\r\n\t\tstr = OL(item, {esc})\r\n\t\tif (str.length <= width)\r\n\t\t\toutput \"#{label} = #{str}\"\r\n\t\t\treturn toBlock(lLines)\r\n\r\n\tif defined(format)\r\n\t\toutput centered(\"#{label} (as #{format})\", width, 'char=-')\r\n\telse\r\n\t\toutput centered(label, width, 'char=-')\r\n\r\n\tif defined(format)\r\n\t\tswitch format\r\n\t\t\twhen 'JSON'\r\n\t\t\t\toutput JSON.stringify(item, undef, 3)\r\n\t\t\twhen 'TAML'\r\n\t\t\t\toutput toTAML(item)\r\n\t\t\twhen 'NICE'\r\n\t\t\t\toutput toNICE(item, {sortKeys})\r\n\t\t\telse\r\n\t\t\t\tcroak \"Bad format: #{OL(format)}\"\r\n\telse if isString(item)\r\n\t\tif esc\r\n\t\t\toutput escapeBlock(item)\r\n\t\telse\r\n\t\t\toutput item\r\n\telse\r\n\t\toutput toNICE(item)\r\n\r\n\toutput '-'.repeat(width)\r\n\treturn toBlock(lLines)\r\n"
  ]
}