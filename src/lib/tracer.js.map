{
  "version": 3,
  "file": "tracer.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\lib\\tracer.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# tracer.coffee\r\n\r\nimport {\r\n\tundef, defined, notdefined, pass, OL, escapeStr,\r\n\tassert, croak, isString, isArray, isHash, isEmpty,\r\n\tlpad, rpad, zpad, words, keys, hasKey, getOptions,\r\n\t} from '@jdeighan/llutils'\r\nimport {TextTable} from '@jdeighan/llutils/text-table'\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class BaseTracer\r\n\r\n\tconstructor: (hOptions={}) ->\r\n\r\n\t\th = getOptions hOptions, {\r\n\t\t\tposType: 'linecol'\r\n\t\t\tlIgnore: ['_']\r\n\t\t\tlIgnoreSubs: []\r\n\t\t\t}\r\n\t\t@hOptions = h\r\n\t\t@posType = h.posType\r\n\t\t@lIgnoreSubs = h.lIgnoreSubs\r\n\t\t@lIgnore = h.lIgnore\r\n\t\tfor rule in @lIgnore\r\n\t\t\tif !@lIgnoreSubs.includes(rule)\r\n\t\t\t\t@lIgnoreSubs.push rule\r\n\t\t@lStack = []     # stack of rule names\r\n\r\n\t# ..........................................................\r\n\r\n\ttraceIt: (hInfo) ->\r\n\r\n\t\t{type, rule} = hInfo\r\n\t\t[category, action] = type.split('.')\r\n\r\n\t\t# --- NOTE: Any rule name in @lIgnore\r\n\t\t#           will also be in @lIgnoreSubs\r\n\r\n\t\tif @lIgnore.includes(rule)\r\n\t\t\tif (category == 'rule')\r\n\t\t\t\treturn false\r\n\r\n\t\tif (category == 'rule') && \\\r\n\t\t\t\t((action == 'match') || (action == 'fail'))\r\n\t\t\tfor rule,i in @lStack\r\n\t\t\t\tif @lIgnoreSubs.includes(rule) && (i != @lStack.length - 1)\r\n\t\t\t\t\treturn false\r\n\t\telse\r\n\t\t\tfor rule in @lStack\r\n\t\t\t\tif @lIgnoreSubs.includes(rule)\r\n\t\t\t\t\treturn false\r\n\t\treturn true\r\n\r\n\t# ..........................................................\r\n\r\n\tdestroy: () ->\r\n\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\tadjustStack: (hInfo) ->\r\n\r\n\t\t{type, rule} = hInfo\r\n\t\tswitch type\r\n\t\t\twhen 'rule.enter'\r\n\t\t\t\t@lStack.push rule\r\n\t\t\twhen 'rule.fail', 'rule.match'\r\n\t\t\t\t@lStack.pop()\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\ttrace: (hInfo) ->\r\n\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\tposStr: (location, posType=undef) ->\r\n\r\n\t\tif notdefined(posType)\r\n\t\t\tposType = @posType\r\n\t\tif notdefined(location) || !isHash(location)\r\n\t\t\treturn rpad('unknown', 12)\r\n\t\t{start: s, end: e} = location\r\n\t\tsl = zpad(s.line)\r\n\t\tsc = zpad(s.column)\r\n\t\tso = zpad(s.offset)\r\n\t\tel = zpad(e.line)\r\n\t\tec = zpad(e.column)\r\n\t\teo = zpad(e.offset)\r\n\t\tif (sl == 1) && (el == 1)\r\n\t\t\treturn posStr(location, 'offset')\r\n\r\n\t\tswitch @posType\r\n\t\t\twhen 'linecol'\r\n\t\t\t\tif (so == eo)\r\n\t\t\t\t\treturn \"#{sl}:#{sc}\"\r\n\t\t\t\telse\r\n\t\t\t\t\treturn \"#{sl}:#{sc}-#{el}:#{ec}\"\r\n\t\t\twhen 'offset'\r\n\t\t\t\tif (so == eo)\r\n\t\t\t\t\treturn \"#{so}\"\r\n\t\t\t\telse\r\n\t\t\t\t\treturn \"#{so}-#{eo}\"\r\n\t\t\telse\r\n\t\t\t\tif (so == eo)\r\n\t\t\t\t\treturn \"#{sl}:#{sc}:#{so}\"\r\n\t\t\t\telse\r\n\t\t\t\t\treturn \"#{sl}:#{sc}:#{so}-#{el}:#{ec}:#{eo}\"\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class RawTracer extends BaseTracer\r\n\r\n\ttrace: (hInfo) ->\r\n\r\n\t\t@adjustStack(hInfo)\r\n\t\tconsole.log JSON.stringify(hInfo, null, 3)\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class DebugTracer extends BaseTracer\r\n\r\n\tconstructor: (hOptions={}) ->\r\n\r\n\t\tsuper(hOptions)\r\n\t\t@tt = new TextTable('l l l l l')\r\n\t\t@tt.fullsep()\r\n\t\t@tt.labels words('type rule result details position')\r\n\t\t@tt.sep()\r\n\r\n\ttrace: (hInfo) ->\r\n\r\n\t\t@adjustStack(hInfo)\r\n\t\t{type, rule, result, details, location} = hInfo\r\n\t\t@tt.data [\r\n\t\t\ttype,\r\n\t\t\trule,\r\n\t\t\tJSON.stringify(result),\r\n\t\t\tdetails,\r\n\t\t\t@posStr(location)\r\n\t\t\t]\r\n\t\treturn\r\n\r\n\tdestroy: () ->\r\n\r\n\t\tconsole.log @tt.asString()\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class AdvancedTracer extends BaseTracer\r\n\r\n\ttraceStr: (hInfo, level=0) ->\r\n\r\n\t\t{type, rule, location, result, details} = hInfo\r\n\r\n\t\tlocStr = @posStr(location)\r\n\t\tstartPos = location?.start?.offset\r\n\t\tendPos = location?.end?.offset\r\n\t\t[obj, action] = type.split('.')\r\n\r\n\t\tswitch action\r\n\r\n\t\t\twhen 'enter'\r\n\r\n\t\t\t\tassert (obj == 'rule'), \"obj=#{obj}, act=#{action}\"\r\n\t\t\t\tpre = \"│  \".repeat(level)\r\n\t\t\t\treturn \"#{pre}? #{rule}\"\r\n\r\n\t\t\twhen 'match'\r\n\r\n\t\t\t\tif (obj == 'rule')\r\n\t\t\t\t\tpre = \"│  \".repeat(level-1) + \"└─>\"\r\n\t\t\t\telse\r\n\t\t\t\t\tpre = \"│  \".repeat(level)\r\n\r\n\t\t\t\tif defined(result)\r\n\t\t\t\t\tif defined(endPos)\r\n\t\t\t\t\t\treturn \"#{pre} #{OL(result)} (pos -> #{endPos})\"\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn \"#{pre} #{OL(result)}\"\r\n\t\t\t\telse\r\n\t\t\t\t\tif defined(endPos)\r\n\t\t\t\t\t\treturn \"#{pre} YES (pos=#{endPos})\"\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn \"#{pre} YES\"\r\n\r\n\t\t\twhen 'fail'\r\n\r\n\t\t\t\tif (obj == 'rule')\r\n\t\t\t\t\tpre = \"│  \".repeat(level-1) + \"└─> FAIL\"\r\n\t\t\t\t\tif defined(location)\r\n\t\t\t\t\t\treturn \" #{pre} (at #{locStr})\"\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn \" #{pre}\".trim()\r\n\t\t\t\telse\r\n\t\t\t\t\tpre = \"│  \".repeat(level-1) + \"x  \"\r\n\t\t\t\t\tif defined(location)\r\n\t\t\t\t\t\treturn \"#{pre} #{obj} #{OL(details)} (at #{locStr})\"\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn \"#{pre} #{obj}\"\r\n\r\n\r\n\t\t\telse\r\n\t\t\t\treturn \"UNKNOWN type: #{type}\"\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\ttrace: (hInfo) ->\r\n\r\n\t\tdebugger\r\n\t\tif @traceIt(hInfo)\r\n\t\t\tresult = @traceStr(hInfo, @lStack.length)\r\n\t\t\tif isString(result)\r\n\t\t\t\tconsole.log result\r\n\t\t\telse if isArray(result)\r\n\t\t\t\tfor str in result\r\n\t\t\t\t\tconsole.log str\r\n\r\n\t\t@adjustStack(hInfo)\r\n\t\treturn\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class DetailedTracer extends AdvancedTracer\r\n\r\n\tconstructor: (@input, hOptions={}) ->\r\n\r\n\t\tsuper(hOptions)\r\n\t\t@input = @hOptions.input\r\n\t\t@hVars = @hOptions.hVars\r\n\r\n\t# ..........................................................\r\n\r\n\tvarStr: () ->\r\n\r\n\t\tif isEmpty(@hVars)\r\n\t\t\treturn ''\r\n\r\n\t\tlParts = []\r\n\t\tfor varname in keys(@hVars)\r\n\t\t\tvalue = @hVars[varname]()\r\n\t\t\tlParts.push \"#{varname} = #{OL(value)}\"\r\n\t\tif (lParts.length == 0)\r\n\t\t\treturn ''\r\n\t\telse\r\n\t\t\treturn ' (' + lParts.join(',') + ')'\r\n\r\n\t# ..........................................................\r\n\r\n\ttraceStr: (hInfo, level) ->\r\n\r\n\t\tstr = super hInfo\r\n\t\tif (hInfo.type != 'rule.fail') || isEmpty(@input)\r\n\t\t\treturn str\r\n\r\n\t\t{type, rule, location, result} = hInfo\r\n\t\tif defined(location)\r\n\t\t\t{offset} = location.start\r\n\t\t\treturn [\r\n\t\t\t\tstr\r\n\t\t\t\t\"#{escapeStr(@input, 'esc', {offset})}#{@varStr()}\"\r\n\t\t\t\t]\r\n\t\telse\r\n\t\t\treturn [\r\n\t\t\t\tstr\r\n\t\t\t\t\"#{escapeStr(@input, 'esc')}#{@varStr()}\"\r\n\t\t\t\t]\r\n\r\n# ---------------------------------------------------------------------------\r\n# --- tracer can be:\r\n#        - undef\r\n#        - a string: 'none', 'debug', 'peggy','advanced','detailed'\r\n#        - an object with a function property named 'trace'\r\n#        - a function\r\n\r\nexport getTracer = (tracer='advanced', hOptions={}) =>\r\n\r\n\thOptions = getOptions hOptions, {\r\n\t\tinput: undef\r\n\t\tlIgnore: ['_']\r\n\t\tlIgnoreSubs: []\r\n\t\thVars: {}\r\n\t\t}\r\n\r\n\tswitch (typeof tracer)\r\n\t\twhen 'undefined'\r\n\t\t\treturn new BaseTracer(hOptions)\r\n\t\twhen 'object'\r\n\t\t\tif defined(tracer)\r\n\t\t\t\treturn tracer\r\n\t\t\telse\r\n\t\t\t\treturn new BaseTracer(hOptions)\r\n\t\twhen 'function'\r\n\t\t\treturn {trace: tracer}\r\n\t\twhen 'string'\r\n\t\t\t[tracer, option] = tracer.split('/')\r\n\t\t\tif option\r\n\t\t\t\thOptions.posType = option\r\n\t\t\tswitch tracer\r\n\t\t\t\twhen 'raw'\r\n\t\t\t\t\treturn new RawTracer(hOptions)\r\n\t\t\t\twhen 'debug'\r\n\t\t\t\t\treturn new DebugTracer(hOptions)\r\n\t\t\t\twhen 'advanced'\r\n\t\t\t\t\treturn new AdvancedTracer(hOptions)\r\n\t\t\t\twhen 'detailed'\r\n\t\t\t\t\treturn new DetailedTracer(hOptions)\r\n\t\t\t\twhen 'peggy'\r\n\t\t\t\t\treturn undef\r\n\t\t\t\telse\r\n\t\t\t\t\treturn new BaseTracer(hOptions)\r\n"
  ]
}