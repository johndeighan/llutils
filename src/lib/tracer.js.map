{
  "version": 3,
  "file": "tracer.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\lib\\tracer.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# tracer.coffee\r\n\r\nimport {\r\n\tundef, defined, notdefined, pass, OL, escapeStr, keys,\r\n\tassert, isString, isArray, isHash, isEmpty, getOptions,\r\n\tlpad, rpad, zpad, words,\r\n\t} from '@jdeighan/llutils'\r\nimport {TextTable} from '@jdeighan/llutils/text-table'\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class NullTracer\r\n\r\n\tconstructor: (@posType='offset') ->\r\n\r\n\t# ..........................................................\r\n\r\n\tdestroy: () ->\r\n\r\n\t# ..........................................................\r\n\r\n\ttrace: (hInfo) ->\r\n\r\n\t# ..........................................................\r\n\r\n\tposStr: (location) ->\r\n\r\n\t\tif notdefined(location) || !isHash(location)\r\n\t\t\treturn rpad('unknown', 12)\r\n\t\t{start: s, end: e} = location\r\n\t\tsl = zpad(s.line)\r\n\t\tsc = zpad(s.column)\r\n\t\tso = zpad(s.offset)\r\n\t\tel = zpad(e.line)\r\n\t\tec = zpad(e.column)\r\n\t\teo = zpad(e.offset)\r\n\r\n\t\tswitch @posType\r\n\t\t\twhen 'linecol'\r\n\t\t\t\tif (so == eo)\r\n\t\t\t\t\treturn \"#{sl}:#{sc}\"\r\n\t\t\t\telse\r\n\t\t\t\t\treturn \"#{sl}:#{sc}-#{el}:#{ec}\"\r\n\t\t\twhen 'offset'\r\n\t\t\t\tif (so == eo)\r\n\t\t\t\t\treturn \"#{so}\"\r\n\t\t\t\telse\r\n\t\t\t\t\treturn \"#{so}-#{eo}\"\r\n\t\t\telse\r\n\t\t\t\tif (so == eo)\r\n\t\t\t\t\treturn \"#{sl}:#{sc}:#{so}\"\r\n\t\t\t\telse\r\n\t\t\t\t\treturn \"#{sl}:#{sc}:#{so}-#{el}:#{ec}:#{eo}\"\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class RawTracer extends NullTracer\r\n\r\n\ttrace: (hInfo) ->\r\n\r\n\t\tconsole.log JSON.stringify(hInfo, null, 3)\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class DebugTracer extends NullTracer\r\n\r\n\tconstructor: () ->\r\n\r\n\t\tsuper()\r\n\t\t@tt = new TextTable('l l l l l')\r\n\t\t@tt.fullsep()\r\n\t\t@tt.labels words('type rule result details position')\r\n\t\t@tt.sep()\r\n\r\n\ttrace: (hInfo) ->\r\n\r\n\t\t{type, rule, result, details, location} = hInfo\r\n\t\t@tt.data [\r\n\t\t\ttype,\r\n\t\t\trule,\r\n\t\t\tJSON.stringify(result),\r\n\t\t\tdetails,\r\n\t\t\t@posStr(location)\r\n\t\t\t]\r\n\t\treturn\r\n\r\n\tdestroy: () ->\r\n\r\n\t\tconsole.log @tt.asString()\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class AdvancedTracer extends NullTracer\r\n\r\n\tconstructor: (hOptions={}) ->\r\n\r\n\t\tsuper()\r\n\t\t{ignore, posType} = getOptions hOptions, {\r\n\t\t\tignore: ['_']\r\n\t\t\tposType: 'offset'\r\n\t\t\t}\r\n\t\t@lIgnore = ignore\r\n\t\t@posType = posType\r\n\t\t@level = 0\r\n\r\n\t# ..........................................................\r\n\r\n\ttraceStr: (hInfo) ->\r\n\r\n\t\t{type, rule, location, result, details} = hInfo\r\n\t\tlocStr = @posStr(location)\r\n\t\tstartPos = location?.start?.offset\r\n\t\tendPos = location?.end?.offset\r\n\t\t[obj, action] = type.split('.')\r\n\r\n\t\tswitch action\r\n\r\n\t\t\twhen 'enter'\r\n\r\n\t\t\t\tassert (obj == 'rule'), \"obj=#{obj}, act=#{action}\"\r\n\t\t\t\tpre = \"│  \".repeat(@level)\r\n\t\t\t\treturn \"#{pre}? #{rule}\"\r\n\r\n\t\t\twhen 'match'\r\n\r\n\t\t\t\tif (obj == 'rule')\r\n\t\t\t\t\tcount = if (@level==0) then 0 else @level-1\r\n\t\t\t\t\tpre = \"│  \".repeat(count) + \"└─>\"\r\n\t\t\t\telse\r\n\t\t\t\t\tpre = \"│  \".repeat(@level)\r\n\r\n\t\t\t\tif defined(result)\r\n\t\t\t\t\tif defined(endPos)\r\n\t\t\t\t\t\treturn \"#{pre} #{OL(result)} (pos -> #{endPos})\"\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn \"#{pre} #{OL(result)}\"\r\n\t\t\t\telse\r\n\t\t\t\t\tif defined(endPos)\r\n\t\t\t\t\t\treturn \"#{pre} YES (pos=#{endPos})\"\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn \"#{pre} YES\"\r\n\r\n\t\t\twhen 'fail'\r\n\r\n\t\t\t\tpre = \"│  \".repeat(@level-1) + \"x  \"\r\n\t\t\t\tif (obj == 'rule')\r\n\t\t\t\t\tif defined(location)\r\n\t\t\t\t\t\treturn \"#{pre} (at #{locStr})\"\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn \"#{pre}\".trim()\r\n\t\t\t\telse\r\n\t\t\t\t\tif defined(location)\r\n\t\t\t\t\t\treturn \"#{pre} #{obj} #{OL(details)} (at #{locStr})\"\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn \"#{pre} #{obj}\"\r\n\r\n\r\n\t\t\telse\r\n\t\t\t\treturn \"UNKNOWN type: #{type}\"\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\ttrace: (hInfo) ->\r\n\r\n\t\t# --- DEBUG console.dir hInfo\r\n\r\n\t\t# --- ignore some rules\r\n\t\tif @lIgnore.includes(hInfo.rule)\r\n\t\t\treturn\r\n\r\n\t\tresult = @traceStr(hInfo)\r\n\t\tif isString(result)\r\n\t\t\tconsole.log result\r\n\t\telse if isArray(result)\r\n\t\t\tfor str in result\r\n\t\t\t\tconsole.log str\r\n\r\n\t\tswitch hInfo.type\r\n\t\t\twhen 'rule.enter'\r\n\t\t\t\t@level += 1\r\n\t\t\twhen 'rule.fail','rule.match'\r\n\t\t\t\t@level -= 1;\r\n\t\treturn\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class DetailedTracer extends AdvancedTracer\r\n\r\n\tconstructor: (@input, hOptions={}) ->\r\n\r\n\t\tsuper(hOptions)\r\n\t\t{hVars} = getOptions hOptions, {\r\n\t\t\thVars: {}\r\n\t\t\t}\r\n\t\t@hVars = hOptions.hVars\r\n\r\n\t# ..........................................................\r\n\r\n\tvarStr: () ->\r\n\r\n\t\tif isEmpty(@hVars)\r\n\t\t\treturn ''\r\n\r\n\t\tlParts = []\r\n\t\tfor varname in keys(@hVars)\r\n\t\t\tvalue = @hVars[varname]()\r\n\t\t\tlParts.push \"#{varname} = #{OL(value)}\"\r\n\t\tif (lParts.length == 0)\r\n\t\t\treturn ''\r\n\t\telse\r\n\t\t\treturn ' (' + lParts.join(',') + ')'\r\n\r\n\t# ..........................................................\r\n\r\n\ttraceStr: (hInfo) ->\r\n\r\n\t\tstr = super hInfo\r\n\t\tif (hInfo.type != 'rule.fail') || isEmpty(@input)\r\n\t\t\treturn str\r\n\r\n\t\t{type, rule, location, result} = hInfo\r\n\t\tif defined(location)\r\n\t\t\t{offset} = location.start\r\n\t\t\treturn [\r\n\t\t\t\tstr\r\n\t\t\t\t\"#{escapeStr(@input, 'esc', {offset})}#{@varStr()}\"\r\n\t\t\t\t]\r\n\t\telse\r\n\t\t\treturn [\r\n\t\t\t\tstr\r\n\t\t\t\t\"#{escapeStr(@input, 'esc')}#{@varStr()}\"\r\n\t\t\t\t]\r\n\r\n# ---------------------------------------------------------------------------\r\n# --- tracer can be:\r\n#        - undef\r\n#        - a string: 'none', 'debug', 'peggy','advanced','detailed'\r\n#        - an object with a function property named 'trace'\r\n#        - a function\r\n\r\nexport getTracer = (tracer='advanced', input, hVars={}) =>\r\n\r\n\tswitch (typeof tracer)\r\n\t\twhen 'undefined'\r\n\t\t\treturn new NullTracer()\r\n\t\twhen 'object'\r\n\t\t\tif hasKey(tracer, trace)\r\n\t\t\t\treturn tracer\r\n\t\t\telse if (tracer == null)\r\n\t\t\t\treturn new NullTracer()\r\n\t\t\telse\r\n\t\t\t\tcroak \"Invalid tracer object, no 'trace' method\"\r\n\t\twhen 'function'\r\n\t\t\treturn {trace: tracer}\r\n\t\twhen 'string'\r\n\t\t\t[tracer, option] = tracer.split('/')\r\n\t\t\thOptions = {hVars}\r\n\t\t\tif option\r\n\t\t\t\thOptions.posType = option\r\n\t\t\tswitch tracer\r\n\t\t\t\twhen 'raw'\r\n\t\t\t\t\treturn new RawTracer(hOptions)\r\n\t\t\t\twhen 'debug'\r\n\t\t\t\t\treturn new DebugTracer(hOptions)\r\n\t\t\t\twhen 'advanced'\r\n\t\t\t\t\treturn new AdvancedTracer(hOptions)\r\n\t\t\t\twhen 'detailed'\r\n\t\t\t\t\treturn new DetailedTracer(input, hOptions)\r\n\t\t\t\twhen 'peggy'\r\n\t\t\t\t\treturn undef\r\n\t\t\t\telse\r\n\t\t\t\t\treturn new NullTracer()\r\n"
  ]
}