{
  "version": 3,
  "file": "tracer.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\lib\\tracer.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# tracer.coffee\r\n\r\nimport {\r\n\tundef, defined, pass, OL, escapeStr, keys,\r\n\tassert, isString, isArray, isEmpty, getOptions,\r\n\t} from '@jdeighan/llutils'\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class NullTracer\r\n\r\n\ttrace: () ->\r\n\t\treturn\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class DefaultTracer extends NullTracer\r\n\r\n\tconstructor: (hOptions={}) ->\r\n\r\n\t\tsuper()\r\n\t\thOptions = getOptions hOptions, {\r\n\t\t\tignore: ['_']\r\n\t\t\t}\r\n\t\t@lIgnore = hOptions.ignore\r\n\t\t@level = 0\r\n\r\n\t# ..........................................................\r\n\r\n\tprefix: (type) ->\r\n\t\tif (type == 'rule.enter') || (type == 'match.string')\r\n\t\t\treturn \"│  \".repeat(@level)\r\n\t\telse if (type == 'fail.string')\r\n\t\t\treturn \"│  \".repeat(@level-1) + \"x  \"\r\n\t\telse\r\n\t\t\tcount = if (@level==0) then 0 else @level-1\r\n\t\t\treturn \"│  \".repeat(count) + \"└─>\"\r\n\r\n\t# ..........................................................\r\n\r\n\ttraceStr: (hInfo) ->\r\n\r\n\t\t{type, rule, location, result} = hInfo\r\n\t\tif defined(location)\r\n\t\t\t{line: s_line, column: s_col, offset: s_offset} = location.start\r\n\t\t\t{line: e_line, column: e_col, offset: e_offset} = location.end\r\n\t\t\tlocStr = \"#{s_line}:#{s_col}:#{s_offset}\"\r\n\t\t\tendPos = e_offset\r\n\t\telse\r\n\t\t\tlocStr = '?'\r\n\t\t\tendPos = undef\r\n\t\tpre = @prefix(type)\r\n\r\n\t\tswitch type\r\n\r\n\t\t\twhen 'rule.enter'\r\n\t\t\t\treturn \"#{pre}? #{rule}\"\r\n\r\n\t\t\twhen 'rule.fail'\r\n\t\t\t\tif defined(location)\r\n\t\t\t\t\treturn \"#{pre} NO (at #{locStr})\"\r\n\t\t\t\telse\r\n\t\t\t\t\treturn \"#{pre} NO\"\r\n\r\n\t\t\twhen 'fail.string'\r\n\t\t\t\tif defined(location)\r\n\t\t\t\t\treturn \"#{pre} NO #{rule} (at #{locStr})\"\r\n\t\t\t\telse\r\n\t\t\t\t\treturn \"#{pre} NO #{rule}\"\r\n\r\n\t\t\twhen 'rule.match', 'match.string'\r\n\t\t\t\tif defined(result)\r\n\t\t\t\t\tif defined(endPos)\r\n\t\t\t\t\t\treturn \"#{pre} #{OL(result)} (pos -> #{endPos})\"\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn \"#{pre} #{OL(result)}\"\r\n\t\t\t\telse\r\n\t\t\t\t\tif defined(endPos)\r\n\t\t\t\t\t\treturn \"#{pre} YES (pos=#{endPos})\"\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn \"#{pre} YES\"\r\n\r\n\t\t\telse\r\n\t\t\t\treturn \"UNKNOWN type: #{type}\"\r\n\t\treturn\r\n\r\n\t# ..........................................................\r\n\r\n\ttrace: (hInfo) ->\r\n\r\n\t\t# --- DEBUG console.dir hInfo\r\n\r\n\t\t# --- ignore whitespace rule\r\n\t\tif @lIgnore.includes(hInfo.rule)\r\n\t\t\treturn\r\n\r\n\t\tresult = @traceStr(hInfo)\r\n\t\tif isString(result)\r\n\t\t\tconsole.log result\r\n\t\telse if isArray(result)\r\n\t\t\tfor str in result\r\n\t\t\t\tconsole.log str\r\n\r\n\t\tswitch hInfo.type\r\n\t\t\twhen 'rule.enter'\r\n\t\t\t\t@level += 1\r\n\t\t\twhen 'rule.fail','rule.match'\r\n\t\t\t\t@level -= 1;\r\n\t\treturn\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nexport class DetailedTracer extends DefaultTracer\r\n\r\n\tconstructor: (@input, @hVars={}) ->\r\n\r\n\t\tsuper()\r\n\r\n\t# ..........................................................\r\n\r\n\tvarStr: () ->\r\n\r\n\t\tif isEmpty(@hVars)\r\n\t\t\treturn ''\r\n\r\n\t\tlParts = []\r\n\t\tfor varname in keys(@hVars)\r\n\t\t\tvalue = @hVars[varname]()\r\n\t\t\tlParts.push \"#{varname} = #{OL(value)}\"\r\n\t\tif (lParts.length == 0)\r\n\t\t\treturn ''\r\n\t\telse\r\n\t\t\treturn ' (' + lParts.join(',') + ')'\r\n\r\n\t# ..........................................................\r\n\r\n\ttraceStr: (hInfo) ->\r\n\r\n\t\tstr = super hInfo\r\n\t\tif (hInfo.type != 'rule.fail') || isEmpty(@input)\r\n\t\t\treturn str\r\n\r\n\t\t{type, rule, location, result} = hInfo\r\n\t\tif defined(location)\r\n\t\t\t{offset} = location.start\r\n\t\t\treturn [\r\n\t\t\t\tstr\r\n\t\t\t\t\"#{escapeStr(@input, 'esc', {offset})}#{@varStr()}\"\r\n\t\t\t\t]\r\n\t\telse\r\n\t\t\treturn [\r\n\t\t\t\tstr\r\n\t\t\t\t\"#{escapeStr(@input, 'esc')}#{@varStr()}\"\r\n\t\t\t\t]\r\n\r\n# ---------------------------------------------------------------------------\r\n# --- tracer can be:\r\n#        - undef\r\n#        - a string: 'peggy','default','detailed'\r\n#        - an object with a function property named 'trace'\r\n#        - a function\r\n\r\nexport getTracer = (tracer='default', input, hVars={}) =>\r\n\r\n\tif isEmpty(tracer) || (tracer == 'none') || (tracer == 'null')\r\n\t\treturn new NullTracer()\r\n\tswitch (typeof tracer)\r\n\t\twhen 'undefined'\r\n\t\t\treturn new NullTracer()\r\n\t\twhen 'object'\r\n\t\t\tif hasKey(tracer, trace)\r\n\t\t\t\treturn tracer\r\n\t\t\telse\r\n\t\t\t\tcroak \"Invalid tracer object, no 'trace' method\"\r\n\t\twhen 'function'\r\n\t\t\treturn {trace: tracer}\r\n\t\twhen 'string'\r\n\t\t\tswitch tracer\r\n\t\t\t\twhen 'default'\r\n\t\t\t\t\treturn new DefaultTracer()\r\n\t\t\t\twhen 'detailed','advanced'\r\n\t\t\t\t\treturn new DetailedTracer(input, hVars)\r\n\t\t\t\twhen 'peggy'\r\n\t\t\t\t\treturn undef\r\n\t\t\t\telse\r\n\t\t\t\t\treturn new NullTracer()\r\n\r\n"
  ]
}