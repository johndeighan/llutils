{
  "version": 3,
  "file": "llpeggify.js",
  "sourceRoot": "..\\",
  "sources": [
    "src\\llpeggify.coffee"
  ],
  "names": [],
  "mappings": "AAEgD;;;AAAA,IAAA,GAAA,EAAA,UAAA,EAAA,QAAA,EAAA,GAAA,EAAA,OAAA,EAAA;;AAEhD,OAAA;EAAQ,QAAR;CAAA,MAAA;;AACA,OAAA;EAAQ,KAAR;EAAe,OAAf;EAAwB,EAAxB;EAA4B,OAA5B;CAAA,MAAA;;AACA,OAAA;EACC,gBADD;EACmB,OADnB;EAC4B,mBAD5B;CAAA,MAAA;;AAGA,OAAA;EAAQ,WAAR;CAAA,MAAA,0BAPgD;;;AAWhD;;AACA,QAAA,GAAW,OAAO,CAAC,IAAI,CAAC,CAAD;;AAEvB,UAAA,GAAa,CAAC,CAAC,QAAD,CAAD,CAAA,GAAA;AACb,MAAA,MAAA,EAAA;EAAC,IAAG,QAAQ,CAAC,KAAT,CAAe,eAAf,CAAH;AACC,WAAO,MADR;;EAEA,MAAA,GAAS,OAAA,CAAQ,QAAR,EAAkB,KAAlB;EACT,OAAA,GAAU,OAAA,CAAQ,QAAR,EAAkB,SAAlB;AACV,SAAO,CAAE,mBAAA,CAAoB,QAApB,EAA8B,MAA9B,EAAsC,OAAtC;AALG;;AAOb;AAAA,KAAA,QAAA;GAAI,CAAC,OAAD;EACH,IAAG,OAAA,CAAQ,QAAR,CAAA,IAAqB,CAAC,OAAO,CAAC,QAAR,CAAiB,QAAjB,CAAzB;AACC,aADD;;AAEA;IACC,OAAO,CAAC,GAAR,CAAY,CAAA,UAAA,CAAA,CAAa,OAAb,CAAA,CAAZ;IACA,WAAA,CAAY,OAAZ,EAFD;GAGA,aAAA;IAAM;IACL,OAAO,CAAC,GAAR,CAAY,CAAA,GAAA,CAAA,CAAM,OAAN,CAAA,EAAA,CAAA,CAAkB,GAAG,CAAC,OAAtB,CAAA,CAAZ,EADD;;AAND",
  "sourcesContent": [
    "# llpeggify.coffee\r\n#\r\n# --- Part of build process, can't use getArgs()\r\n\r\nimport {globSync} from 'glob'\r\nimport {undef, defined, OL, execCmd} from '@jdeighan/llutils'\r\nimport {\r\n\tallFilesMatching, withExt, newerDestFileExists,\r\n\t} from '@jdeighan/llutils/fs'\r\nimport {peggifyFile} from '@jdeighan/llutils/peggy'\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\ndebugger\r\nfileName = process.argv[2]     # --- normally not specified\r\n\r\nfileFilter = ({filePath}) =>\r\n\tif filePath.match(/node_modules/i)\r\n\t\treturn false\r\n\tjsFile = withExt(filePath, '.js')\r\n\tmapFile = withExt(filePath, '.js.map')\r\n\treturn ! newerDestFileExists(filePath, jsFile, mapFile)\r\n\r\nfor {relPath} from allFilesMatching('**/*.{pegjs,peggy}', {fileFilter})\r\n\tif defined(fileName) && !relPath.endsWith(fileName)\r\n\t\tcontinue\r\n\ttry\r\n\t\tconsole.log \"llpeggify #{relPath}\"\r\n\t\tpeggifyFile relPath\r\n\tcatch err\r\n\t\tconsole.log \"in #{relPath}: #{err.message}\"\r\n"
  ]
}