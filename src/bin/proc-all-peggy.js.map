{
  "version": 3,
  "file": "proc-all-peggy.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\bin\\proc-all-peggy.coffee"
  ],
  "names": [],
  "mappings": "AAMoD;;;;;;;AAAA,IAAA,IAAA,EAAA,QAAA,EAAA,KAAA,EAAA,GAAA,EAAA,GAAA,EAAA,UAAA,EAAA,MAAA,EAAA,SAAA,EAAA,QAAA,EAAA,WAAA,EAAA,OAAA,EAAA,CAAA,EAAA,OAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA,EAAA,SAAA,EAAA;;AAEpD,OAAA;EACC,KADD;EACQ,OADR;EACiB,UADjB;EAC6B,OAD7B;EACsC,IADtC;EAC4C,GAD5C;EACiD,EADjD;EAEC,QAFD;EAEW,MAFX;CAAA,MAAA;;AAIA,OAAA;EACC,OADD;EACU,gBADV;EAC4B,mBAD5B;EAEC,OAFD;EAEU,YAFV;EAEwB,IAFxB;CAAA,MAAA;;AAIA,OAAA;EAAQ,OAAR;CAAA,MAAA;;AACA,OAAA;EAAQ,SAAR;CAAA,MAAA;;AAEA,KAAA,GAAS,OAAO,CAAC,IAAI,CAAC,CAAD,CAAZ,KAAmB,QAbwB;;;AAiBpD,UAAA,GAAa,CAAC,CAAC,QAAD,CAAD,CAAA,GAAA;AAEb,MAAA;EAAC,QAAA,GAAW,OAAA,CAAQ,QAAR,EAAkB,KAAlB;AACX,SAAO,CAAE,mBAAA,CAAoB,QAApB,EAA8B,QAA9B;AAHG,EAjBuC;;;;;;;AA4BpD,MAAA,GAAS,CAAA,EA5B2C;;AA6BpD,GAAA,GAAM,IAAI,OAAJ,CAAA;;AACN;AAAA,KAAA,QAAA;GAAI,CAAC,OAAD;EACH,CAAA,CAAC,SAAD,CAAA,GAAc,YAAA,CAAa,OAAb,CAAd;EACA,IAAG,OAAA,CAAQ,SAAR,CAAA,IAAsB,OAAA,CAAQ,OAAA,GAAU,SAAS,CAAC,OAA5B,CAAzB;;IAEC,GAAG,CAAC,GAAJ,CAAQ,OAAR,EAAiB,OAAjB,EAFD;GAAA,MAAA;IAIC,GAAG,CAAC,GAAJ,CAAQ,OAAR,EAJD;;AAFD;;AAQA;AAAA,KAAA,sCAAA;;EACC,GAAA,CAAI,OAAJ;EACA,CAAA,CAAC,SAAD,EAAY,QAAZ,CAAA,GAAwB,YAAA,CAAa,OAAb,EAAsB,OAAtB,CAAxB;EACA,QAAA,GAAW;IACV,KADU;IAEV,QAAA,EAAU,IAFA;IAGV,cAAA,EAAgB,IAHN;IAIV,OAAA,EAAS;EAJC;EAMX,OAAA,GAAU,SAAA,CAAU,QAAV,EAAoB,SAApB,EAA+B,OAA/B,EAAwC,QAAxC;EACV,CAAA,CAAC,IAAD,EAAO,SAAP,EAAkB,WAAlB,CAAA,GAAiC,OAAjC;EACA,IAAA,CAAK,IAAL,EAAW,OAAA,CAAQ,OAAR,EAAiB,KAAjB,CAAX;EACA,IAAG,OAAA,CAAQ,SAAR,CAAH;IACC,IAAA,CAAK,SAAL,EAAgB,OAAA,CAAQ,OAAR,EAAiB,SAAjB,CAAhB,EADD;;EAEA,IAAG,OAAA,CAAQ,WAAR,CAAH;AACC;IAAA,KAAA,wCAAA;;MACC,IAAA,CAAK,WAAW,CAAC,GAAD,CAAhB,EAAuB,OAAA,CAAQ,OAAR,EAAiB,GAAjB,CAAvB;IADD,CADD;;AAdD",
  "sourcesContent": [
    "# proc-all-peggy.coffee\r\n#\r\n# --- Part of build process, can't use getArgs()\r\n#        Can't use any *.js files built from a *.peggy file\r\n#        Can't use any lib that depends on a file built from peggy\r\n#     Processes all *.peggy files where there\r\n#        isn't a corresponding more recent *.js file\r\n\r\nimport {\r\n\tundef, defined, notdefined, isEmpty, keys, LOG, OL,\r\n\tisString, isHash,\r\n\t} from '@jdeighan/llutils'\r\nimport {\r\n\twithExt, allFilesMatching, newerDestFileExists,\r\n\trelpath, readTextFile, barf,\r\n\t} from '@jdeighan/llutils/fs'\r\nimport {DiGraph} from '@jdeighan/llutils/digraph'\r\nimport {procPeggy} from '@jdeighan/llutils/peggy'\r\n\r\ndebug = (process.argv[2] == 'debug')\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nfileFilter = ({filePath}) =>\r\n\r\n\tdestFile = withExt(filePath, '.js')\r\n\treturn ! newerDestFileExists(filePath, destFile)\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\n# --- 1. hash of files to be rebuilt, where\r\n#        the associated value is a list of other files\r\n#        that the file depends on\r\n\r\nhFiles = {}      # --- { <file>: [<uses>, ... ], ... }\r\ndep = new DiGraph()\r\nfor {relPath} from allFilesMatching(\"**/*.peggy\", {fileFilter})\r\n\t{hMetaData} = readTextFile(relPath)\r\n\tif defined(hMetaData) && defined(include = hMetaData.include)\r\n\t\t# --- NOTE: include may be a string or an array\r\n\t\tdep.add relPath, include\r\n\telse\r\n\t\tdep.add relPath\r\n\r\nfor relPath in dep.getBuildOrder()\r\n\tLOG relPath\r\n\t{hMetaData, contents} = readTextFile(relPath, 'eager')\r\n\thOptions = {\r\n\t\tdebug\r\n\t\topDumper: true\r\n\t\tbyteCodeWriter: true\r\n\t\tdumpAST: true\r\n\t\t}\r\n\thResult = procPeggy contents, hMetaData, relPath, hOptions\r\n\t{code, sourceMap, hOtherFiles} = hResult\r\n\tbarf code, withExt(relPath, '.js')\r\n\tif defined(sourceMap)\r\n\t\tbarf sourceMap, withExt(relPath, \".js.map\")\r\n\tif defined(hOtherFiles)\r\n\t\tfor ext in keys(hOtherFiles)\r\n\t\t\tbarf hOtherFiles[ext], withExt(relPath, ext)\r\n\r\n"
  ]
}