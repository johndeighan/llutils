{
  "version": 3,
  "file": "low-level-build.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\bin\\low-level-build.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# low-level-build.coffee\r\n#\r\n# --- Designed to run in ANY project that installs @jdeighan/llutils\r\n\r\nimport {globSync} from 'glob'\r\n\r\nimport {\r\n\tassert, npmLogLevel, nonEmpty, add_s,\r\n\t} from '@jdeighan/llutils'\r\nimport {\r\n\tisProjRoot, fileExt, withExt,\r\n\tallFilesMatching, readTextFile, newerDestFilesExist,\r\n\t} from '@jdeighan/llutils/fs'\r\nimport {brewFile} from '@jdeighan/llutils/coffee'\r\nimport {peggifyFile} from '@jdeighan/llutils/peggy'\r\n\r\nhFilesProcessed = {\r\n\tcoffee: 0\r\n\tpeggy: 0\r\n\t}\r\n\r\necho = (npmLogLevel() != 'silent')\r\ndoLog = (str) =>\r\n\tif echo\r\n\t\tconsole.log str\r\n\treturn\r\n\r\ndoLog \"-- low-level-build --\"\r\n\r\n# ---------------------------------------------------------------------------\r\n# 1. Make sure we're in a project root directory\r\n\r\nassert isProjRoot('.', 'strict'), \"Not in package root dir\"\r\n\r\n# ---------------------------------------------------------------------------\r\n# --- A file (either *.coffee or *.peggy) is out of date unless both:\r\n#        - a *.js file exists that's newer than the original file\r\n#        - a *.js.map file exists that's newer than the original file\r\n# --- But ignore files inside node_modules\r\n\r\nfileFilter = ({filePath}) =>\r\n\tif filePath.match(/node_modules/i)\r\n\t\treturn false\r\n\tjsFile = withExt(filePath, '.js')\r\n\tmapFile = withExt(filePath, '.js.map')\r\n\treturn ! newerDestFilesExist(filePath, jsFile, mapFile)\r\n\r\n# ---------------------------------------------------------------------------\r\n# 2. Search project for *.coffee files and compile them\r\n#    unless newer *.js and *.js.map files exist\r\n\r\nfor {relPath} from allFilesMatching('**/*.coffee', {fileFilter})\r\n\tdoLog relPath\r\n\tbrewFile relPath\r\n\thFilesProcessed.coffee += 1\r\n\r\n# ---------------------------------------------------------------------------\r\n# 3. Search src folder for *.peggy files and compile them\r\n#    unless newer *.js and *.js.map files exist OR it needs rebuilding\r\n\r\nfor {relPath} from allFilesMatching('**/*.peggy', {fileFilter})\r\n\tdoLog relPath\r\n\tpeggifyFile relPath\r\n\thFilesProcessed.peggy += 1\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nhBin = {}    # --- keys to add in package.json / bin\r\n\r\n# ---------------------------------------------------------------------------\r\n# --- generate a 3 letter acronym if file stub is <str>-<str>-<str>\r\n\r\ntla = (stub) =>\r\n\r\n\tif lMatches = stub.match(///^\r\n\t\t\t([a-z])(?:[a-z]*)\r\n\t\t\t\\-\r\n\t\t\t([a-z])(?:[a-z]*)\r\n\t\t\t\\-\r\n\t\t\t([a-z])(?:[a-z]*)\r\n\t\t\t$///)\r\n\t\t[_, a, b, c] = lMatches\r\n\t\treturn a + b + c\r\n\telse\r\n\t\treturn undef\r\n\r\n# ---------------------------------------------------------------------------\r\n# 4. For every *.coffee file in the 'src/bin' directory that\r\n#       has key \"shebang\" set:\r\n#       - save <stub>: <jsPath> in hBin\r\n#       - if has a tla, save <tla>: <jsPath> in hBin\r\n\r\nfor {relPath, stub} from allFilesMatching('./src/bin/**/*.coffee')\r\n\t{hMetaData} = readTextFile relPath\r\n\tif hMetaData?.shebang\r\n\t\tjsPath = withExt(relPath, '.js')\r\n\t\thBin[stub] = jsPath\r\n\t\tshort_name = tla(stub)\r\n\t\tif defined(short_name)\r\n\t\t\thBin[short_name] = jsPath\r\n\r\n# ---------------------------------------------------------------------------\r\n# 5. Add sub-keys to key 'bin' in package.json\r\n#    (create if not exists)\r\n\r\nif nonEmpty(hBin)\r\n\thJson = slurpPkgJSON()\r\n\tif ! hasKey(hJson, 'bin')\r\n\t\tdoLog \"   - add key 'bin'\"\r\n\t\thJson.bin = {}\r\n\tfor key,value of hBin\r\n\t\tif (hJson.bin[key] != value)\r\n\t\t\tdoLog \"   - add bin/#{key} = #{value}\"\r\n\t\t\thJson.bin[key] = value\r\n\tbarfPkgJSON hJson\r\n\r\nnCoffee = hFilesProcessed.coffee\r\nif (nCoffee > 0)\r\n\tdoLog \"(#{nCoffee} coffee file#{add_s(nCoffee)} compiled)\"\r\n\r\nnPeggy = hFilesProcessed.peggy\r\nif (nPeggy > 0)\r\n\tdoLog \"(#{nPeggy} peggy file#{add_s(nPeggy)} compiled)\"\r\n"
  ]
}