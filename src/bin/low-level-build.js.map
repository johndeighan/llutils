{
  "version": 3,
  "file": "low-level-build.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\bin\\low-level-build.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# low-level-build.coffee\r\n#\r\n# --- Designed to run in ANY project that installs @jdeighan/llutils\r\n\r\nimport chokidar from 'chokidar'    # --- for file watching\r\n\r\nimport {\r\n\tundef, defined, notdefined, assert, hasKey, keys,\r\n\tisEmpty, nonEmpty, add_s, OL, gen2block, tla,\r\n\t} from '@jdeighan/llutils'\r\nimport {execCmd} from '@jdeighan/llutils/exec-utils'\r\nimport {getArgs} from '@jdeighan/llutils/cmd-args'\r\nimport {\r\n\tisProjRoot, barf, barfPkgJSON, slurpPkgJSON, mkpath,\r\n\tfileExt, withExt, allFilesMatching, readTextFile,\r\n\t} from '@jdeighan/llutils/fs'\r\nimport {\r\n\tprocFiles, procOneFile,\r\n\t} from '@jdeighan/llutils/file-processor'\r\n\r\necho = true\r\ndoLog = (str) =>\r\n\tif echo\r\n\t\tconsole.log str\r\n\treturn\r\n\r\nshebang = \"#!/usr/bin/env node\"\r\n\r\n# ---------------------------------------------------------------------------\r\n# Usage:   node src/bin/low-level-build.js\r\n\r\n# ---------------------------------------------------------------------------\r\n# 1. Make sure we're in a project root directory\r\n\r\ndebugger\r\nassert isProjRoot('.', 'strict'), \"Not in package root dir\"\r\n\r\n{\r\n\t_: lNonOptions\r\n\tq: quiet\r\n\tf: force\r\n\td: debug\r\n\tw: watch\r\n\troot\r\n\t} = getArgs {\r\n\t_: {\r\n\t\tmin: 0\r\n\t\tmax: 1\r\n\t\t}\r\n\tq: {type: 'boolean'}\r\n\tf: {type: 'boolean'}\r\n\td: {type: 'boolean'}\r\n\tw: {type: 'boolean'}\r\n\troot: {type: 'string'}\r\n\t}\r\n\r\nif defined(root)\r\n\tif root.endsWith('/')\r\n\t\troot = root.substring(0, root.length-1)\r\nelse\r\n\troot = '.'\r\nif quiet\r\n\techo = false\r\n\r\n# ---------------------------------------------------------------------------\r\n# Process all files\r\n\r\npattern = \"#{root}/{*.*,**/*.*}\"\r\n{lProcessed, hUses} = procFiles(pattern, {force, debug})\r\n\r\nfor filePath in keys(hUses)\r\n\tfor usedFile in hUses[filePath]\r\n\t\tif lProcessed.includes usedFile\r\n\t\t\tif ! lProcessed.includes filePath\r\n\t\t\t\tconsole.log \"ALSO PROCESS: #{OL(filePath)}\"\r\n\t\t\t\tprocOneFile filePath\r\n\t\t\t\tlProcessed.push filePath, hLLBConfig\r\n\r\n# --- log number of files processed\r\nhFiles = {}\r\nfor file in lProcessed\r\n\text = fileExt file\r\n\tif hasKey(hFiles, ext)\r\n\t\thFiles[ext].push file\r\n\telse\r\n\t\thFiles[ext] = [file]\r\nfor ext in keys(hFiles).sort()\r\n\tn = hFiles[ext].length\r\n\tconsole.log \"#{n} *#{ext} file#{add_s(n)} compiled\"\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nhBin = {}    # --- keys to add in package.json / bin\r\n\r\n# ---------------------------------------------------------------------------\r\n# 4. For every *.js file in the 'src/bin' directory\r\n#       - add a shebang line if not present\r\n#       - save <stub>: <jsPath> in hBin\r\n#       - if has a tla, save <tla>: <jsPath> in hBin\r\n\r\nfor {relPath, stub} from allFilesMatching('./src/bin/**/*.js')\r\n\t{reader} = readTextFile relPath\r\n\tfirstLine = reader().next().value\r\n\tif !firstLine.match(/^\\#\\!/)\r\n\t\tcontents = shebang + \"\\n\" + gen2block(reader)\r\n\t\tbarf contents, relPath\r\n\thBin[stub] = relPath\r\n\tif defined(short_name = tla(stub))\r\n\t\thBin[short_name] = relPath\r\n\r\nif nonEmpty(hBin)\r\n\thJson = slurpPkgJSON()\r\n\tif ! hasKey(hJson, 'bin')\r\n\t\tdoLog \"   - add key 'bin'\"\r\n\t\thJson.bin = {}\r\n\tfor key,value of hBin\r\n\t\tif (hJson.bin[key] != value)\r\n\t\t\tdoLog \"   - add bin/#{key} = #{value}\"\r\n\t\t\thJson.bin[key] = value\r\n\tbarfPkgJSON hJson\r\n\r\n# --- watch for file changes\r\n\r\nif watch\r\n\tconsole.log \"watching for file changes...\"\r\n\tglob = \"**/*.{coffee,peggy,cielo,svelte}\"\r\n\thOptions = {\r\n\t\tpersistent: true\r\n\t\tignoreInitial: true\r\n\t\tawaitWriteFinish: {\r\n\t\t\tstabilityThreshold: 1000,\r\n\t\t\tpollInterval: 100\r\n\t\t\t}\r\n\t\t}\r\n\tchokidar.watch(glob, hOptions).on 'all', (eventType, path) =>\r\n\t\tif path.match(/node_modules/)\r\n\t\t\treturn\r\n\t\tpath = mkpath(path)\r\n\t\text = fileExt(path)\r\n\t\t{func, outExt} = hLLBConfig[ext]\r\n\t\tswitch eventType\r\n\t\t\twhen 'add','change'\r\n\t\t\t\tprocOneFile path\r\n\t\t\twhen 'unlink'\r\n\t\t\t\texecCmd \"rm #{withExt(path, outExt)}\"\r\n"
  ]
}