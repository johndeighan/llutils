{
  "version": 3,
  "file": "low-level-build.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\bin\\low-level-build.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# low-level-build.coffee\r\n#\r\n# --- Designed to run in ANY project that installs @jdeighan/llutils\r\n\r\nimport chokidar from 'chokidar'\r\n\r\nimport {\r\n\tundef, defined, notdefined, assert, npmLogLevel, hasKey, keys,\r\n\tisEmpty, nonEmpty, add_s, OL, execCmd, gen2block,\r\n\t} from '@jdeighan/llutils'\r\nimport {getArgs} from '@jdeighan/llutils/cmd-args'\r\nimport {\r\n\tisProjRoot, barfJSON, barfPkgJSON, isFile, barf,\r\n\tslurpJSON, slurpPkgJSON, fileExt, withExt, mkpath,\r\n\tallFilesMatching, readTextFile, newerDestFileExists,\r\n\t} from '@jdeighan/llutils/fs'\r\nimport {peggify} from '@jdeighan/llutils/peggy'\r\nimport {\r\n\tprocFiles, brew, cieloPreProcess, sveltify,\r\n\t} from '@jdeighan/llutils/file-processor'\r\n\r\nhFileTypes = {\r\n\t'.coffee': {\r\n\t\tlFuncs: [brew]\r\n\t\toutExt: '.js'\r\n\t\t}\r\n\t'.cielo': {\r\n\t\tlFuncs: [cieloPreProcess, brew]\r\n\t\toutExt: '.js'\r\n\t\t}\r\n\t'.peggy': {\r\n\t\tlFuncs: [peggify]\r\n\t\toutExt: '.js'\r\n\t\t}\r\n\t'.svelte': {\r\n\t\tlFuncs: [sveltify]\r\n\t\toutExt: '.js'\r\n\t\t}\r\n\t}\r\n\r\necho = (npmLogLevel() != 'silent')\r\ndoLog = (str) =>\r\n\tif echo\r\n\t\tconsole.log str\r\n\treturn\r\n\r\nshebang = \"#!/usr/bin/env node\"\r\n\r\n# ---------------------------------------------------------------------------\r\n# Usage:   node src/bin/low-level-build.js\r\n\r\n# ---------------------------------------------------------------------------\r\n# 1. Make sure we're in a project root directory\r\n\r\nassert isProjRoot('.', 'strict'), \"Not in package root dir\"\r\n\r\n{\r\n\t_: lNonOptions\r\n\te: echo\r\n\tf: force\r\n\tw: watch\r\n\troot\r\n\t} = getArgs {\r\n\t_: {\r\n\t\tmin: 0\r\n\t\tmax: 1\r\n\t\t}\r\n\te: 'boolean'\r\n\tf: 'boolean'\r\n\tw: 'boolean'\r\n\troot: 'string'\r\n\t}\r\n\r\nif notdefined(root)\r\n\troot = '.'\r\n\r\n# ---------------------------------------------------------------------------\r\n# Process all files\r\n\r\nfor ext in keys(hFileTypes)\r\n\t{lFuncs, outExt} = hFileTypes[ext]\r\n\tfileFilter = ({filePath}) =>\r\n\t\tif filePath.match(/node_modules/i)\r\n\t\t\treturn false\r\n\t\tif force\r\n\t\t\treturn true\r\n\t\toutFile = withExt(filePath, outExt)\r\n\t\treturn ! newerDestFileExists(filePath, outFile)\r\n\tn = 0\r\n\r\n\t# --- possible options: force, debug, logOnly, echo\r\n\tn = procFiles \"#{root}/**/*#{ext}\", lFuncs, outExt\r\n\thFileTypes[ext].numProcessed = n\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nhBin = {}    # --- keys to add in package.json / bin\r\n\r\n# ---------------------------------------------------------------------------\r\n# --- generate a 3 letter acronym if file stub is <str>-<str>-<str>\r\n\r\ntla = (stub) =>\r\n\r\n\tif lMatches = stub.match(///^\r\n\t\t\t([a-z])(?:[a-z]*)\r\n\t\t\t\\-\r\n\t\t\t([a-z])(?:[a-z]*)\r\n\t\t\t\\-\r\n\t\t\t([a-z])(?:[a-z]*)\r\n\t\t\t$///)\r\n\t\t[_, a, b, c] = lMatches\r\n\t\treturn a + b + c\r\n\telse\r\n\t\treturn undef\r\n\r\n# ---------------------------------------------------------------------------\r\n# 4. For every *.js file in the 'src/bin' directory\r\n#       - add a shebang line if not present\r\n#       - save <stub>: <jsPath> in hBin\r\n#       - if has a tla, save <tla>: <jsPath> in hBin\r\n\r\nfor {relPath, stub} from allFilesMatching('./src/bin/**/*.js')\r\n\t{reader} = readTextFile relPath\r\n\tfirstLine = reader().next().value\r\n\tif !firstLine.match(/^\\#\\!/)\r\n\t\tcontents = shebang + \"\\n\" + gen2block(reader)\r\n\t\tbarf contents, relPath\r\n\thBin[stub] = relPath\r\n\tif defined(short_name = tla(stub))\r\n\t\thBin[short_name] = relPath\r\n\r\nif nonEmpty(hBin)\r\n\thJson = slurpPkgJSON()\r\n\tif ! hasKey(hJson, 'bin')\r\n\t\tdoLog \"   - add key 'bin'\"\r\n\t\thJson.bin = {}\r\n\tfor key,value of hBin\r\n\t\tif (hJson.bin[key] != value)\r\n\t\t\tdoLog \"   - add bin/#{key} = #{value}\"\r\n\t\t\thJson.bin[key] = value\r\n\tbarfPkgJSON hJson\r\n\r\n# --- log number of files processed\r\n\r\nfor ext in keys(hFileTypes)\r\n\tn = hFileTypes[ext].numProcessed\r\n\tif defined(n) && (n > 0)\r\n\t\tconsole.log \"#{n} *#{ext} file#{add_s(n)} compiled\"\r\n\r\n# --- watch for file changes\r\n\r\nif watch\r\n\tconsole.log \"watching for file changes...\"\r\n\tglob = \"**/*.{coffee,peggy,cielo,svelte}\"\r\n\thOptions = {\r\n\t\tpersistent: true\r\n\t\tignoreInitial: true\r\n\t\tawaitWriteFinish: {\r\n\t\t\tstabilityThreshold: 1000,\r\n\t\t\tpollInterval: 100\r\n\t\t\t}\r\n\t\t}\r\n\tchokidar.watch(glob, hOptions).on 'all', (eventType, path) =>\r\n\t\tif path.match(/node_modules/)\r\n\t\t\treturn\r\n\t\tpath = mkpath(path)\r\n\t\text = fileExt(path)\r\n\t\t{lFuncs, outExt} = hFileTypes[ext]\r\n\t\tswitch eventType\r\n\t\t\twhen 'add','change'\r\n\t\t\t\tprocFiles path, lFuncs, outExt\r\n\t\t\twhen 'unlink'\r\n\t\t\t\texecCmd \"rm #{withExt(path, outExt)}\"\r\n"
  ]
}