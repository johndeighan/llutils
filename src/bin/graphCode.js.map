{
  "version": 3,
  "file": "graphCode.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\bin\\graphCode.coffee"
  ],
  "names": [],
  "mappings": "AAAkB;AAAA,IAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,CAAA,EAAA;;AAElB,OAAO,OAAP,MAAA;;AAEA,OAAA;EAAQ,KAAR;EAAe,OAAf;EAAwB,EAAxB;EAA4B,GAA5B;EAAiC,QAAjC;CAAA,MAAA;;AACA,OAAA;EACC,MADD;EACS,gBADT;EAEC,OAFD;EAEU,QAFV;EAEoB,OAFpB;CAAA,MAAA;;AAIA,OAAA;EAAQ,iBAAR;CAAA,MAAA;;AACA,OAAA;EAAQ,gBAAR;CAAA,MAAA;;AACA,OAAA;EAAQ,OAAR;CAAA,MAAA,4BAXkB;;;AAelB,KAAA,GAAQ,IAAI,OAAJ,CAAY;EACnB,SAAA,EAAW,CAAC,CAAC,OAAD,CAAA,GAAA;WAAa,QAAA,CAAS,OAAT;EAAb,CAAD,CADQ;EAEnB,SAAA,EAAW,CAAC,CAAC,GAAD,CAAA,GAAA;WACX,GAAG,CAAC,UAAJ,CAAe,mBAAf,CAAA,IAAuC,GAAG,CAAC,UAAJ,CAAe,UAAf;EAD5B,CAAD;AAFQ,CAAZ;;AAOR;AAAA,KAAA,QAAA;GAAI,CAAC,OAAD;EACH,IAAG,OAAO,CAAC,UAAR,CAAmB,OAAnB,CAAH;AACC,aADD;;EAEA,KAAA,GAAQ,iBAAA,CAAkB,OAAlB,CAA0B,CAAC;EACnC,KAAK,CAAC,GAAN,CAAU,OAAV,EAAmB,KAAnB,EAA0B;IAAC,QAAA,EAAU;EAAX,CAA1B;AAJD;;AAMA;AAAA,KAAA,SAAA;GAAI,CAAC,OAAD;EACH,IAAG,OAAO,CAAC,UAAR,CAAmB,OAAnB,CAAH;AACC,aADD;;EAEA,KAAA,GAAQ,iBAAA,CAAkB,OAAlB,CAA0B,CAAC;EACnC,KAAK,CAAC,GAAN,CAAU,OAAV,EAAmB,KAAnB,EAA0B;IAAC,QAAA,EAAU;EAAX,CAA1B;AAJD;;AAMA;AAAA,KAAA,SAAA;GAAI,CAAC,OAAD;EACH,IAAG,OAAO,CAAC,UAAR,CAAmB,OAAnB,CAAH;AACC,aADD;;EAEA,KAAA,GAAQ,gBAAA,CAAiB,OAAjB,CAAyB,CAAC;EAClC,IAAG,QAAA,CAAS,KAAT,CAAH;IACC,GAAA,CAAI,CAAA,SAAA,CAAA,CAAY,OAAZ,CAAA,CAAJ;IACA,GAAA,CAAI,CAAA,SAAA,CAAA,CAAY,EAAA,CAAG,KAAH,CAAZ,CAAA,CAAJ,EAFD;;EAGA,KAAK,CAAC,GAAN,CAAU,OAAV,EAAmB,KAAnB,EAA0B;IAAC,QAAA,EAAU;EAAX,CAA1B;AAPD;;AASA,KAAK,CAAC,IAAN,CAAW;EACV,QAAA,EAAU,IADA;EAEV,QAAA,EAAU;AAFA,CAAX;;AAMA,IAAG,KAAK,CAAC,QAAN,CAAA,CAAH;EACC,GAAA,CAAI,iBAAJ,EADD;CAAA,MAAA;EAGC,GAAA,CAAI,IAAJ;EACA,KAAK,CAAC,MAAN,CAAa,aAAb,EAA4B,KAA5B,EAJD",
  "sourcesContent": [
    "# graphCode.coffee\r\n\r\nimport pathLib from 'node:path'\r\n\r\nimport {undef, defined, OL, LOG, nonEmpty} from '@jdeighan/llutils'\r\nimport {\r\n\tisFile, allFilesMatching,\r\n\tfileExt, fileStub, relpath,\r\n\t} from '@jdeighan/llutils/fs'\r\nimport {analyzeCoffeeFile} from '@jdeighan/llutils/llcoffee'\r\nimport {analyzePeggyFile} from '@jdeighan/llutils/peggy'\r\nimport {DiGraph} from '@jdeighan/llutils/digraph'\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\ngraph = new DiGraph {\r\n\tnormalize: ((relPath) => fileStub(relPath))\r\n\tfilterDep: ((dep) =>\r\n\t\tdep.startsWith('@jdeighan/llutils') || dep.startsWith('src/lib/')\r\n\t\t)\r\n\t}\r\n\r\nfor {relPath} from allFilesMatching('src/lib/**/*.coffee')\r\n\tif relPath.startsWith('test/')\r\n\t\tcontinue\r\n\tlDeps = analyzeCoffeeFile(relPath).lDependencies\r\n\tgraph.add(relPath, lDeps, {nodeType: 'lib'})\r\n\r\nfor {relPath} from allFilesMatching('src/bin/**/*.coffee')\r\n\tif relPath.startsWith('test/')\r\n\t\tcontinue\r\n\tlDeps = analyzeCoffeeFile(relPath).lDependencies\r\n\tgraph.add(relPath, lDeps, {nodeType: 'bin'})\r\n\r\nfor {relPath} from allFilesMatching('**/*.peggy')\r\n\tif relPath.startsWith('test/')\r\n\t\tcontinue\r\n\tlDeps = analyzePeggyFile(relPath).lDependencies\r\n\tif nonEmpty(lDeps)\r\n\t\tLOG \"ANALYZE: #{relPath}\"\r\n\t\tLOG \"   DEPS: #{OL(lDeps)}\"\r\n\tgraph.add(relPath, lDeps, {nodeType: 'peggy'})\r\n\r\ngraph.dump({\r\n\tsortKeys: true\r\n\tmaxWidth: 1\r\n\t})\r\n\r\n\r\nif graph.hasCycle()\r\n\tLOG \"GRAPH HAS CYCLE\"\r\nelse\r\n\tLOG \"OK\"\r\n\tgraph.render('./graph.svg', 'dot')\r\n"
  ]
}