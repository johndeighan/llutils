{
  "version": 3,
  "file": "make-new-project.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\bin\\make-new-project.coffee"
  ],
  "names": [],
  "mappings": "AAYmD;;;;;;;;;;;;;AAAA,IAAA;;AAEnD,OAAA;EACC,KADD;EACQ,OADR;EACiB,UADjB;EAC6B,EAD7B;EACiC,QADjC;EAC2C,MAD3C;EACmD,KADnD;CAAA,MAAA;;AAGA,OAAA;EAAQ,OAAR;CAAA,MAAA;;AACA,OAAA;EACC,WADD;EACc,iBADd;EACiC,WADjC;EAEC,QAFD;EAEW,SAFX;EAEsB,QAFtB;EAGC,MAHD;EAGS,SAHT;EAGoB,SAHpB;EAG+B,YAH/B;EAG6C,QAH7C;EAIC,iBAJD;EAIoB,cAJpB;CAAA,MAAA;;AAOA,OAAO,CAAC,GAAR,CAAY,2BAAZ,EAbmD;;;AAiBnD,IAAA,GAAO,KAAA,CAAA,CAAA,GAAA;AACP,MAAA,KAAA,EAAA,OAAA,EAAA,gBAAA,EAAA,YAAA,EAAA,CAAA,EAAA,CAAA,EAAA,WAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA;EAAC,CAAA;IACC,CAAA,EAAG,WADJ;IAEC,CAAA,EAAG,KAFJ;IAGC;EAHD,CAAA,GAIK,OAAA,CAAQ;IACZ,CAAA,EAAG;MACF,OAAA,EAAS;IADP,CADS;IAIZ,CAAA,EAAG,SAJS;IAKZ,IAAA,EAAM;EALM,CAAR,CAJL;EAYA,IAAG,OAAA,CAAQ,IAAR,CAAH;IACC,WAAA,CAAY,IAAZ,EADD;GAAA,MAAA;IAGC,MAAM,iBAAA,CAAA,EAHP;;EAKA,OAAA,GAAU,WAAW,CAAC,CAAD;EACrB,WAAA,CAAY,OAAZ,EAAqB,CAAC,KAAD,CAArB,EAlBD;EAmBC,SAAA,CAAA;EACA,QAAA,CAAA;EACA,QAAA,CAAA;EACA,SAAA,CAAA;EACA,YAAA,CAAA;EACA,QAAA,CAAA,EAxBD;;EA4BC,YAAA,GAAe,OAAO,CAAC,GAAG,CAAC;EAC3B,IAAG,QAAA,CAAS,YAAT,CAAH;AACC;IAAA,KAAA,qCAAA;;MACC,MAAA,CAAO,GAAP;IADD,CADD;;EAIA,gBAAA,GAAmB,OAAO,CAAC,GAAG,CAAC;EAC/B,IAAG,QAAA,CAAS,gBAAT,CAAH;AACC;IAAA,KAAA,wCAAA;;MACC,SAAA,CAAU,GAAV;IADD,CADD;;EAIA,SAAA,CAAU,KAAV;EAEA,iBAAA,CAAA;EACA,cAAA,CAAA;SACA,OAAO,CAAC,GAAR,CAAY,MAAZ;AA3CM,EAjB4C;;;AAgEnD,IAAA,CAAA",
  "sourcesContent": [
    "# make-new-project.coffee\r\n\r\n# --- Before running, set these environment variables:\r\n#        PROJECT_ROOT_DIR - directory where you add projects\r\n#        PROJECT_PACKAGE_JSON - JSON string or file path\r\n#           - should have 'author' key\r\n#        PROJECT_INSTALLS - comma sep list of pkgs to install\r\n#        PROJECT_DEV_INSTALLS - comma sep list of dev pkgs to install\r\n#        PROJECT_NAME_PREFIX - e.g. '@jdeighan/' to prepend this to proj name\r\n#\r\n#     Usage: mnp <dirname>\r\n#        -c - clear out any existing directory\r\n#        -type=(website|electron|codemirror|parcel)\r\n\r\nimport {\r\n\tundef, defined, notdefined, OL, nonEmpty, assert, words,\r\n\t} from '@jdeighan/llutils'\r\nimport {getArgs} from '@jdeighan/llutils/cmd-args'\r\nimport {\r\n\tsetProjType, promptForProjType, makeProjDir,\r\n\tinit_git, make_dirs, init_npm,\r\n\taddDep, addDevDep, addReadMe, addGitIgnore, addNpmRc,\r\n\ttypeSpecificSetup, write_pkg_json,\r\n\t} from '@jdeighan/llutils/proj-utils'\r\n\r\nconsole.log \"Starting make-new-project\"\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nmain = () =>\r\n\t{\r\n\t\t_: lNonOptions,\r\n\t\tc: clear,\r\n\t\ttype\r\n\t\t} = getArgs {\r\n\t\t_: {\r\n\t\t\texactly: 1\r\n\t\t\t}\r\n\t\tc: 'boolean'\r\n\t\ttype: 'string'\r\n\t\t}\r\n\r\n\tif defined(type)\r\n\t\tsetProjType(type)\r\n\telse\r\n\t\tawait promptForProjType()\r\n\r\n\tdirname = lNonOptions[0]\r\n\tmakeProjDir dirname, {clear}   # also cd's to proj dir\r\n\tmake_dirs()\r\n\tinit_git()\r\n\tinit_npm()\r\n\taddReadMe()\r\n\taddGitIgnore()\r\n\taddNpmRc()\r\n\r\n\t# === Install libraries specified via env vars\r\n\r\n\tenv_installs = process.env.PROJECT_INSTALLS\r\n\tif nonEmpty(env_installs)\r\n\t\tfor pkg in words(env_installs)\r\n\t\t\taddDep pkg\r\n\r\n\tenv_dev_installs = process.env.PROJECT_DEV_INSTALLS\r\n\tif nonEmpty(env_dev_installs)\r\n\t\tfor pkg in words(env_dev_installs)\r\n\t\t\taddDevDep pkg\r\n\r\n\taddDevDep 'ava'\r\n\r\n\ttypeSpecificSetup()\r\n\twrite_pkg_json()\r\n\tconsole.log \"DONE\"\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nmain()\r\n"
  ]
}