{
  "version": 3,
  "file": "make-new-project.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\bin\\make-new-project.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# make-new-project.coffee\r\n\r\n# --- Before running, set these environment variables:\r\n#        PROJECT_ROOT_DIR - directory where you add projects\r\n#        PROJECT_PACKAGE_JSON - JSON string or file path\r\n#           - should have 'author' key\r\n#        PROJECT_INSTALLS - comma sep list of pkgs to install\r\n#        PROJECT_DEV_INSTALLS - comma sep list of dev pkgs to install\r\n#        PROJECT_NAME_PREFIX - e.g. '@jdeighan/' to prepend this to proj name\r\n#\r\n#     Usage: mnp <dirname>\r\n#        -c - clear out any existing directory\r\n#        -type=(website|electron|codemirror|parcel)\r\n#        -libs=<comma sep stubs>\r\n#        -bins=<comma sep stubs>\r\n#        -install=<comma sep pkgs>\r\n#        -installdev=<comma sep pkgs>\r\n\r\nimport {\r\n\tundef, defined, notdefined, execCmd, OL, nonEmpty, keys,\r\n\tassert, croak, words, hasKey, execAndLogCmd, getOptions,\r\n\t} from '@jdeighan/llutils'\r\nimport {getArgs} from '@jdeighan/llutils/cmd-args'\r\nimport {\r\n\tmkpath, isDir, mkDir, slurp, barf, clearDir,\r\n\tslurpJSON, barfJSON, touch, createFile,\r\n\t} from '@jdeighan/llutils/fs'\r\nimport {\r\n\tPkgJson,\r\n\t} from '@jdeighan/llutils/pkg-json'\r\n\r\nconsole.log \"Starting make-new-project\"\r\n\r\ntype = undef\r\nlValidTypes = ['electron', 'codemirror', 'website', 'parcel']\r\nauthor = 'unknown'\r\n\r\n# ---------------------------------------------------------------------------\r\n# --- For example, isType('electron') will return true\r\n#     when type is 'codemirror'\r\n\r\nisType = (t) =>\r\n\tswitch t\r\n\t\twhen 'parcel'\r\n\t\t\treturn (type == 'parcel')\r\n\t\twhen 'electron'\r\n\t\t\treturn (type == 'electron') || (type == 'codemirror')\r\n\t\twhen 'codemirror'\r\n\t\t\treturn (type == 'codemirror')\r\n\t\twhen 'website'\r\n\t\t\treturn (type == 'parcel') || (type == 'vite')\r\n\t\telse\r\n\t\t\treturn false\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nmain = () =>\r\n\t{_, c: clear, type, lib, bin, libs, bins, install, installdev\r\n\t\t} = getArgs(undef, {\r\n\t\t_: [1,1]\r\n\t\tc: 'boolean'\r\n\t\ttype: 'string'\r\n\t\tlib: 'string'     # comma separated stubs\r\n\t\tbin: 'string'     # comma separated stubs\r\n\t\tlibs: 'string'    # comma separated stubs\r\n\t\tbins: 'string'    # comma separated stubs\r\n\t\tinstall: 'string' # comma separated packages to install\r\n\t\tinstalldev: 'string' # comma separated packages to dev install\r\n\t\t})\r\n\r\n\t[dirname] = _\r\n\tif notdefined(libs) then libs = lib\r\n\tif notdefined(bins) then bins = bin\r\n\r\n\tif defined(type)\r\n\t\tconsole.log \"type = #{OL(type)}\"\r\n\t\tif (type == 'website')\r\n\t\t\ttype = 'parcel'   # --- default website type\r\n\t\tassert lValidTypes.includes(type), \"Bad type: #{OL(type)}\"\r\n\r\n\t# .............................................................\r\n\r\n\trootDir = process.env.PROJECT_ROOT_DIR\r\n\tif ! isDir(rootDir)\r\n\t\tconsole.log \"\"\"\r\n\t\t\tPlease set env var PROJECT_ROOT_DIR to a valid directory\r\n\t\t\t\"\"\"\r\n\t\tprocess.exit()\r\n\r\n\t# === Create the new directory and cd to it\r\n\r\n\tnewDir = mkpath(rootDir, dirname)\r\n\tif isDir(newDir)\r\n\t\tif clear\r\n\t\t\tconsole.log \"Directory #{OL(newDir)} exists, clearing it out\"\r\n\t\t\tclearDir newDir\r\n\t\telse\r\n\t\t\tconsole.log \"Directory #{OL(newDir)} already exists\"\r\n\t\t\tprocess.exit()\r\n\telse\r\n\t\tconsole.log \"Creating directory #{newDir}\"\r\n\t\tmkDir newDir\r\n\r\n\tprocess.chdir newDir\r\n\r\n\t# === Initialize npm, set up package.json file\r\n\r\n\tconsole.log \"Initializing npm\"\r\n\texecCmd \"npm init -y\"\r\n\r\n\t# === Create package.json file\r\n\r\n\tconsole.log \"Creating package.json\"\r\n\tpj = new PkgJson()\r\n\tpj.setField 'description', \"A #{type} app\"\r\n\r\n\tif (type == 'electron')\r\n\t\tpj.setField 'main', 'src/main.js'\r\n\t\tpj.addScript 'start', 'npm run build && electron .'\r\n\telse if (type == 'parcel')\r\n\t\tpj.addDevDep 'parcel'\r\n\r\n\t\tpj.setField 'main', 'src/index.html'\r\n\t\tpj.setField 'source', 'src/index.html'\r\n\r\n\t\tpj.addScript 'start', 'parcel'\r\n\t\tpj.addScript 'build', 'parcel build'\r\n\r\n\tif defined(libs)\r\n\t\tconsole.log \"Creating new libs\"\r\n\t\tfor name in libs.split(',').map((str) => str.trim())\r\n\t\t\tcreateFile \"./src/lib/#{name}.coffee\", \"\"\"\r\n\t\t\t\t# --- #{name}.coffee\r\n\t\t\t\t\"\"\"\r\n\t\t\tif pj.isInstalled('@jdeighan/llutils')\r\n\t\t\t\tcreateFile \"./test/#{name}.test.coffee\", \"\"\"\r\n\t\t\t\t\t# --- #{name}.test.offee\r\n\r\n\t\t\t\t\timport * as lib from '#{hJson.name}/#{name}'\r\n\t\t\t\t\tObject.assign(global, lib)\r\n\t\t\t\t\timport * as lib2 from '@jdeighan/llutils/utest'\r\n\t\t\t\t\tObject.assign(global, lib2)\r\n\r\n\t\t\t\t\tequal 2+2, 4\r\n\t\t\t\t\t\"\"\"\r\n\t\t\telse\r\n\t\t\t\tcreateFile \"./test/#{name}.test.coffee\", \"\"\"\r\n\t\t\t\t\t# --- #{name}.test.offee\r\n\r\n\t\t\t\t\timport * as lib from '#{hJson.name}/#{name}'\r\n\t\t\t\t\tObject.assign(global, lib)\r\n\t\t\t\t\timport test from 'ava'\r\n\r\n\t\t\t\t\ttest \"line 7\", (t) =>\r\n\t\t\t\t\t\tt.is 2+2, 4\r\n\r\n\t\t\t\t\t\"\"\"\r\n\t\t\tpj.addExport \"./#{name}\", \"./src/lib/#{name}.js\"\r\n\t\tpj.addExport \"./package.json\", \"./package.json\"\r\n\r\n\tif defined(bins)\r\n\t\tconsole.log \"Creating new bins\"\r\n\t\tfor name in bins.split(',').map((str) => str.trim())\r\n\t\t\ttouch \"./src/bin/#{name}.coffee\"\r\n\t\t\tpj.addBin name, \"./src/bin/#{name}.js\"\r\n\r\n\t# === Install libraries specified via env vars\r\n\r\n\tinstalls = process.env.PROJECT_INSTALLS\r\n\tif nonEmpty(installs)\r\n\t\tfor pkg in words(installs)\r\n\t\t\tpj.addDep pkg\r\n\r\n\tdev_installs = process.env.PROJECT_DEV_INSTALLS\r\n\tif nonEmpty(dev_installs)\r\n\t\tfor pkg in words(dev_installs)\r\n\t\t\tpj.addDevDep pkg\r\n\r\n\tpj.addDevDep 'ava'\r\n\r\n\t# === Add libraries specified on command line\r\n\r\n\tif defined(install)\r\n\t\tconsole.log \"Installing npm libs from cmd line\"\r\n\t\tlNames = install.split(',').map((str) => str.trim())\r\n\t\tassert (lNames.length > 0), \"No names in 'install'\"\r\n\t\tfor name in lNames\r\n\t\t\tpj.addDep name\r\n\r\n\tif defined(installdev)\r\n\t\tconsole.log \"Installing npm libs for dev from cmd line\"\r\n\t\tlNames = installdev.split(',').map((str) => str.trim())\r\n\t\tassert (lNames.length > 0), \"No names in 'installdev'\"\r\n\t\tfor name in lNames\r\n\t\t\tpj.addDevDep name\r\n\r\n\t# === Initialize git\r\n\r\n\tconsole.log \"Initializing git\"\r\n\texecCmd \"git init\"\r\n\texecCmd \"git branch -m main\"\r\n\r\n\t# === Create standard directories\r\n\r\n\tconsole.log \"Making directories\"\r\n\tmkDir './src'\r\n\tmkDir './src/lib'\r\n\tmkDir './src/bin'\r\n\tmkDir './src/elements'\r\n\tmkDir './test'\r\n\r\n\t# === Create file README.md\r\n\r\n\tconsole.log \"Creating README.md\"\r\n\tbarf \"\"\"\r\n\t\tREADME.md file\r\n\t\t==============\r\n\r\n\r\n\t\t\"\"\", \"./README.md\"\r\n\r\n\t# === Create file .gitignore\r\n\r\n\tconsole.log \"Creating .gitignore\"\r\n\tbarf \"\"\"\r\n\t\tlogs/\r\n\t\tnode_modules/\r\n\t\ttypings/\r\n\t\t*.tsbuildinfo\r\n\t\t.npmrc\r\n\t\t/build\r\n\t\t/public\r\n\t\t/dist\r\n\r\n\t\t# dotenv environment variables file\r\n\t\t.env\r\n\t\t.env.test\r\n\r\n\t\ttest/temp*.*\r\n\t\t/.svelte-kit\r\n\t\t\"\"\", \"./.gitignore\"\r\n\r\n\t# === Create file .npmrc\r\n\r\n\tconsole.log \"Creating .npmrc\"\r\n\tbarf \"\"\"\r\n\tengine-strict=true\r\n\t# --- loglevel can be silent or warn\r\n\tloglevel=silent\r\n\t\t\"\"\", \"./.npmrc\"\r\n\r\n\tif isType('electron')\r\n\r\n\t\tconsole.log \"Creating src/main.coffee\"\r\n\t\tbarf \"\"\"\r\n\t\timport pathLib from 'node:path'\r\n\t\timport {app, BrowserWindow} from 'electron'\r\n\r\n\t\tdir = import.meta.dirname\r\n\t\tapp.on 'ready', () =>\r\n\t\t\twin = new BrowserWindow({\r\n\t\t\t\twidth: 800,\r\n\t\t\t\theight: 600\r\n\t\t\t\twebPreferences: {\r\n\t\t\t\t\tnodeIntegration: true\r\n\t\t\t\t\tpreload: pathLib.join(import.meta.dirname, 'preload.js')\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t# --- win.loadFile('src/index.html')\r\n\t\t\twin.loadURL(\"file://#{dir}/index.html\")\r\n\t\t\t\"\"\", \"./src/main.coffee\"\r\n\r\n\t\t# ..........................................................\r\n\r\n\t\tconsole.log \"Creating src/index.html\"\r\n\t\tbarf \"\"\"\r\n\t\t\t<!DOCTYPE html>\r\n\t\t\t<html lang=\"en\">\r\n\t\t\t\t<head>\r\n\t\t\t\t\t<meta charset=\"UTF-8\">\r\n\t\t\t\t\t<!-- https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP -->\r\n\t\t\t\t\t<meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'self'; script-src 'self'\">\r\n\t\t\t\t\t<title>Electron App</title>\r\n\t\t\t\t</head>\r\n\t\t\t\t<body>\r\n\t\t\t\t\t<h1>Electron App, using:</h1>\r\n\t\t\t\t\t<p span id=\"node-version\">node-version</p>\r\n\t\t\t\t\t<p span id=\"chrome-version\">chrome-version</p>\r\n\t\t\t\t\t<p span id=\"electron-version\">electron-version</p>\r\n\t\t\t\t\tby <p id=\"myname\">My Name Here</p>\r\n\t\t\t\t\t<script src=\"./renderer.js\"></script>\r\n\t\t\t\t</body>\r\n\t\t\t</html>\r\n\t\t\t\"\"\", \"./src/index.html\"\r\n\r\n\t\t# ..........................................................\r\n\r\n\t\tconsole.log \"Creating src/preload.coffee\"\r\n\t\tbarf \"\"\"\r\n\t\t\t# --- preload.coffee has access to window,\r\n\t\t\t#     document and NodeJS globals\r\n\r\n\t\t\twindow.addEventListener 'DOMContentLoaded', () =>\r\n\t\t\t\treplaceText = (selector, text) =>\r\n\t\t\t\t\telem = document.getElementById(selector)\r\n\t\t\t\t\tif (elem)\r\n\t\t\t\t\t\telem.innerText = text\r\n\r\n\t\t\t\tfor dep in ['chrome','node','electron']\r\n\t\t\t\t\tstr = \"\\#{dep} version \\#{process.versions[dep]}\"\r\n\t\t\t\t\treplaceText \"\\#{dep}-version\", str\r\n\t\t\t\"\"\", \"./src/preload.coffee\"\r\n\r\n\t\t# ..........................................................\r\n\r\n\t\tconsole.log \"Creating src/renderer.coffee\"\r\n\t\tbarf \"\"\"\r\n\t\t\t# --- preload.coffee has access to window and document\r\n\r\n\t\t\telem = document.getElementById('myname')\r\n\t\t\tif elem\r\n\t\t\t\telem.innerText = '#{author}'\r\n\t\t\telse\r\n\t\t\t\tconsole.log \"No element with id 'myname'\"\r\n\t\t\t\"\"\", \"./src/renderer.coffee\"\r\n\r\n\t\t# ..........................................................\r\n\r\n\tif isType('electron')\r\n\t\tconsole.log \"Installing (dev) \\\"electron\\\"\"\r\n\t\tpj.addDevDep 'electron'\r\n\r\n\tif isType('website')\r\n\t\tconsole.log \"Creating src/index.html\"\r\n\t\tbarf \"\"\"\r\n\t\t\t<!DOCTYPE html>\r\n\t\t\t<html lang=\"en\">\r\n\t\t\t\t<head>\r\n\t\t\t\t\t<meta charset=\"utf-8\">\r\n\t\t\t\t\t<title>Parcel App</title>\r\n\t\t\t\t</head>\r\n\t\t\t\t<body>\r\n\t\t\t\t\t<h1>Hello, World!</h1>\r\n\t\t\t\t</body>\r\n\t\t\t</html>\r\n\t\t\t\"\"\", \"./src/index.html\"\r\n\r\n\r\n\tconsole.log \"DONE\"\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nmain()\r\n"
  ]
}