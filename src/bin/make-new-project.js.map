{
  "version": 3,
  "file": "make-new-project.js",
  "sourceRoot": "..\\..\\",
  "sources": [
    "src\\bin\\make-new-project.coffee"
  ],
  "names": [],
  "mappings": "AAYmD;;;;;;;;;;;;;AAAA,IAAA;;AAEnD,OAAA;EACC,KADD;EACQ,OADR;EACiB,UADjB;EAC6B,EAD7B;EACiC,QADjC;EAEC,MAFD;EAES,KAFT;CAAA,MAAA;;AAIA,OAAA;EAAQ,OAAR;CAAA,MAAA;;AACA,OAAA;EAAQ,OAAR;CAAA,MAAA;;AACA,OAAA;EACC,WADD;EACc,iBADd;EACiC,WADjC;EAEC,iBAFD;EAEoB,gBAFpB;EAEsC,OAFtC;EAE+C,UAF/C;CAAA,MAAA,+BARmD;;;AAenD,IAAA,GAAO,KAAA,CAAA,CAAA,GAAA;AACP,MAAA,KAAA,EAAA,OAAA,EAAA,KAAA,EAAA,WAAA,EAAA,OAAA,EAAA,OAAA,EAAA;EAAC,gBAAA,CAAiB,MAAjB,EAAyB,MAAzB;EACA,KAAA,GAAQ,OAAA,CAAQ;IACf,CAAA,EAAG;MACF,GAAA,EAAK,CADH;MAEF,GAAA,EAAK,CAFH;MAGF,IAAA,EAAM;IAHJ,CADY;IAMf,CAAA,EAAG;MACF,IAAA,EAAM,SADJ;MAEF,GAAA,EAAK;IAFH,CANY;IAUf,IAAA,EAAM;MACL,IAAA,EAAM,QADD;MAEL,IAAA,EAAM,iBAFD;MAGL,GAAA,EAAK,WAAW,CAAC,IAAZ,CAAiB,GAAjB;IAHA;EAVS,CAAR;EAgBR,CAAA;IAAC,CAAA,EAAG,WAAJ;IAAiB,CAAA,EAAG,KAApB;IAA2B;EAA3B,CAAA,GAAmC,KAAnC;EAEA,IAAG,UAAA,CAAW,IAAX,CAAH;IACC,IAAA,GAAO,CAAA,MAAM,iBAAA,CAAA,CAAN,EADR;;EAGA,CAAC,IAAD,EAAO,OAAP,CAAA,GAAkB,IAAI,CAAC,KAAL,CAAW,GAAX,EAAgB,CAAhB;EAClB,IAAG,OAAA,CAAQ,OAAR,CAAH;IACC,OAAO,CAAC,GAAR,CAAY,CAAA,OAAA,CAAA,CAAU,EAAA,CAAG,IAAA,GAAO,GAAP,GAAa,OAAhB,CAAV,CAAA,CAAZ,EADD;GAAA,MAAA;IAGC,OAAO,CAAC,GAAR,CAAY,CAAA,OAAA,CAAA,CAAU,EAAA,CAAG,IAAH,CAAV,CAAA,CAAZ,EAHD;;EAKA,OAAA,GAAU,WAAW,CAAC,CAAD,CAAX,IAAkB;EAC5B,OAAO,CAAC,GAAR,CAAY,CAAA,iBAAA,CAAA,CAAoB,EAAA,CAAG,IAAH,CAApB,CAAA,QAAA,CAAA,CAAuC,EAAA,CAAG,OAAH,CAAvC,CAAA,CAAZ;EAEA,OAAA,GAAU,UAAA,CAAW,OAAX,EAAoB,CAAC,KAAD,EAAQ,IAAR,EAAc,OAAd,CAApB;EACV,iBAAA,CAAkB,OAAlB,EAA2B,IAA3B,EAAiC,OAAjC;EACA,OAAO,CAAC,cAAR,CAAA;SAEA,OAAO,CAAC,GAAR,CAAY,CAAA;OAAA,CAAA,CAEF,OAFE,CAAA;;YAAA,CAAZ;AApCM,EAf4C;;;AA4DnD,IAAA,CAAA",
  "sourcesContent": [
    "# make-new-project.coffee\r\n\r\n# --- Before running, set these environment variables:\r\n#        PROJECT_ROOT_DIR - directory where you add projects\r\n#        PROJECT_PACKAGE_JSON - JSON string or file path\r\n#           - should have 'author' key\r\n#        PROJECT_INSTALLS - comma sep list of pkgs to install\r\n#        PROJECT_DEV_INSTALLS - comma sep list of dev pkgs to install\r\n#        PROJECT_NAME_PREFIX - e.g. '@jdeighan/' to prepend this to proj name\r\n#\r\n#     Usage: mnp <dirname>\r\n#        -c - clear out any existing directory\r\n#        -type=(website|electron|codemirror|parcel)\r\n\r\nimport {\r\n\tundef, defined, notdefined, OL, nonEmpty,\r\n\tassert, words,\r\n\t} from '@jdeighan/llutils'\r\nimport {execCmd} from '@jdeighan/llutils/exec-utils'\r\nimport {getArgs} from '@jdeighan/llutils/cmd-args'\r\nimport {\r\n\tlValidTypes, promptForProjType, makeProjDir,\r\n\ttypeSpecificSetup, checkIfInstalled, NodeEnv, basicSetUp,\r\n\t} from '@jdeighan/llutils/proj-utils'\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nmain = () =>\r\n\tcheckIfInstalled 'node', 'yarn'\r\n\thArgs = getArgs {\r\n\t\t_: {\r\n\t\t\tmin: 0\r\n\t\t\tmax: 1\r\n\t\t\tdesc: \"<dirname>\"\r\n\t\t\t}\r\n\t\tc: {\r\n\t\t\ttype: 'boolean'\r\n\t\t\tmsg: 'clear out directory if it exists'\r\n\t\t\t}\r\n\t\ttype: {\r\n\t\t\ttype: 'string'\r\n\t\t\tdesc: 'type of project'\r\n\t\t\tmsg: lValidTypes.join('|')\r\n\t\t\t}\r\n\t\t}\r\n\t{_: lNonOptions, c: clear, type} = hArgs\r\n\r\n\tif notdefined(type)\r\n\t\ttype = await promptForProjType()\r\n\r\n\t[type, subtype] = type.split('/', 2)\r\n\tif defined(subtype)\r\n\t\tconsole.log \"type = #{OL(type + '/' + subtype)}\"\r\n\telse\r\n\t\tconsole.log \"type = #{OL(type)}\"\r\n\r\n\tdirname = lNonOptions[0] || type\r\n\tconsole.log \"make-new-project #{OL(type)} in dir #{OL(dirname)}\"\r\n\r\n\tnodeEnv = basicSetUp dirname, {clear, type, subtype}\r\n\ttypeSpecificSetup(nodeEnv, type, subtype)\r\n\tnodeEnv.write_pkg_json()\r\n\r\n\tconsole.log \"\"\"\r\n\t\tPlease run:\r\n\t\t\tcd ../#{dirname}\r\n\t\t\tyarn\r\n\t\t\tnpm run dev\r\n\t\t\"\"\"\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nmain()\r\n"
  ]
}