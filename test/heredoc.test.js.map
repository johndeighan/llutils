{
  "version": 3,
  "file": "heredoc.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\heredoc.test.coffee"
  ],
  "names": [],
  "mappings": "AAAqB;AAAA,IAAA,eAAA,EAAA,aAAA,EAAA,aAAA,EAAA,SAAA,EAAA,UAAA,EAAA,QAAA,EAAA;;AAErB,OAAA;EACC,KADD;EACQ,OADR;EACiB,UADjB;EAC6B,QAD7B;EAEC,QAFD;EAEW,EAFX;EAEe,GAFf;EAEoB,MAFpB;EAE4B,YAF5B;EAGC,MAHD;EAGS,KAHT;CAAA,MAAA;;AAKA,OAAA;EAAQ,QAAR;CAAA,MAAA;;AACA,OAAO,CAAA,OAAP,MAAA;;AACA,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB,GAAtB;;AACA,OAAO,CAAA,QAAP,MAAA;;AACA,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB,IAAtB,EAXqB;;;;AAgBrB,KAAA,CAAM,WAAA,CAAY,uBAAZ,CAAN,EAA4C,CAC3C,uBAD2C,CAA5C;;AAIA,KAAA,CAAM,WAAA,CAAY,yBAAZ,CAAN,EAA8C,CAC7C,OAD6C,EAE7C,KAF6C,EAG7C,MAH6C,EAI7C,KAJ6C,EAK7C,UAL6C,CAA9C;;AAQA,KAAA,CAAM,WAAA,CAAY,oBAAZ,CAAN,EAAyC,CACxC,EADwC,EAExC,KAFwC,EAGxC,MAHwC,EAIxC,KAJwC,EAKxC,UALwC,CAAzC;;AAQA,KAAA,CAAM,WAAA,CAAY,iBAAZ,CAAN,EAAsC,CACrC,OADqC,EAErC,KAFqC,EAGrC,MAHqC,EAIrC,KAJqC,EAKrC,EALqC,CAAtC;;AAQA,KAAA,CAAM,WAAA,CAAY,YAAZ,CAAN,EAAiC,CAChC,EADgC,EAEhC,KAFgC,EAGhC,MAHgC,EAIhC,KAJgC,EAKhC,EALgC,CAAjC;;AAQA,KAAA,CAAM,WAAA,CAAY,KAAZ,CAAN,EAA0B,CACzB,EADyB,EAEzB,KAFyB,EAGzB,EAHyB,CAA1B;;AAMA,KAAA,CAAM,WAAA,CAAY,QAAZ,CAAN,EAA6B,CAC5B,EAD4B,EAE5B,KAF4B,EAG5B,EAH4B,EAI5B,KAJ4B,EAK5B,EAL4B,CAA7B,EA1DqB;;;;AAqErB,KAAA,CAAM,UAAA,CAAW,CAAA;GAAA,CAAX,CAAN,EAIE,aAJF,EArEqB;;;AA6ErB,KAAA,CAAM,UAAA,CAAW,CAAA;;GAAA,CAAX,CAAN,EAKE,aALF,EA7EqB;;;AAsFrB,KAAA,CAAM,UAAA,CAAW,CAAA;;GAAA,CAAX,CAAN,EAKE,WALF,EAtFqB;;;AA+FrB,KAAA,CAAM,UAAA,CAAW,CAAA;;IAAA,CAAX,CAAN,EAKE,eALF,EA/FqB;;;AAwGrB,KAAA,CAAM,UAAA,CAAW,CAAA;;GAAA,CAAX,CAAN,EAKE,WALF,EAxGqB;;;;AAkHf,gBAAN,MAAA,cAAA,QAA4B,WAA5B;EAEC,cAAgB,CAAC,KAAD,CAAA;AAEf,WAAO,UAAA,CAAW,KAAX;EAFQ;;AAFjB;;AAMA,MAAA,GAAS,IAAI,aAAJ,CAAA,EAxHY;;;;AA6HrB,MAAM,CAAC,KAAP,CAAa,CAAA;aAAA,CAAb,EAIE,6BAJF,EA7HqB;;;;AAsIrB,MAAM,CAAC,KAAP,CAAa,CAAA;;aAAA,CAAb,EAKE,6BALF,EAtIqB;;;;AAgJrB,MAAM,CAAC,KAAP,CAAa,CAAA;YAAA,CAAb,EAIE,0BAJF,EAhJqB;;;;AAyJrB,MAAM,CAAC,KAAP,CAAa,CAAA;;YAAA,CAAb,EAKE,0BALF,EAzJqB;;;;AAmKf,gBAAN,MAAA,cAAA,QAA4B,YAA5B;EAEC,GAAK,CAAC,KAAD,CAAA;AACN,QAAA,MAAA,EAAA,IAAA;;IACE,IAAG,UAAA,CAAW,KAAK,CAAC,KAAN,CAAY,SAAZ,CAAX,CAAH;AACC,aAAO,MADR;;IAEA,MAAA;;AAAS;AAAA;MAAA,KAAA,qCAAA;;qBACR,IAAI,CAAC,KAAL,CAAW,KAAX,CAAiB,CAAC,GAAlB,CAAsB,CAAC,GAAD,CAAA,GAAA;iBAAS,QAAA,CAAS,GAAT;QAAT,CAAtB;MADQ,CAAA;;;AAET,WAAO,IAAI,CAAC,SAAL,CAAe,MAAf;EANH;;AAFN;;AAUA,cAAA,CAAe,QAAf,EAAyB,IAAI,aAAJ,CAAA,CAAzB;;AAEA,MAAM,CAAC,KAAP,CAAa,CAAA;KAAA,CAAb,EAIE,mBAJF,EA/KqB;;;;AAwLf,YAAN,MAAA,UAAA,QAAwB,YAAxB;EAEC,GAAK,CAAC,KAAD,CAAA;IAEJ,IAAI,KAAK,CAAC,OAAN,CAAc,KAAd,CAAA,KAAwB,CAA5B;AACC,aAAO,MADR;;IAGA,KAAA,GAAQ,KAAK,CAAC,SAAN,CAAgB,CAAhB,CAAkB,CAAC,WAAnB,CAAA;AACR,WAAO,IAAI,CAAC,SAAL,CAAe,KAAf;EANH;;AAFN;;AAUA,cAAA,CAAe,YAAf,EAA6B,IAAI,SAAJ,CAAA,CAA7B;;AAEA,MAAM,CAAC,KAAP,CAAa,CAAA;;aAAA,CAAb,EAKE,6BALF,EApMqB;;;;;;;AAkNf,aAAN,MAAA,WAAA,QAAyB,YAAzB;EAEC,GAAK,CAAC,KAAD,CAAA;AAEN,QAAA,IAAA,EAAA,IAAA,EAAA;IAAE,CAAC,IAAD,EAAO,IAAP,CAAA,GAAe,MAAA,CAAO,KAAP;IACf,IAAI,IAAA,KAAQ,KAAZ;AACC,aAAO,MADR;;IAEA,KAAA,GAAQ,GAAA,CAAI,IAAI,CAAC,WAAL,CAAA,CAAJ;IACR,MAAA,GAAS,IAAI,CAAC,SAAL,CAAe,KAAf;AACT,WAAO;EAPH;;AAFN;;AAWA,cAAA,CAAe,cAAf,EAA+B,IAAI,UAAJ,CAAA,CAA/B,EA7NqB;;;AAiOrB,MAAM,CAAC,KAAP,CAAa,CAAA;;UAAA,CAAb,EAKE,6BALF,EAjOqB;;;;AA2OrB,MAAM,CAAC,KAAP,CAAa,CAAA;;KAAA,CAAb,EAKE,eALF,EA3OqB;;;;AAqPrB,MAAM,CAAC,KAAP,CAAa,CAAA;;;KAAA,CAAb,EAME,uBANF,EArPqB;;;;AAgQrB,MAAM,CAAC,KAAP,CAAa,CAAA;;;;;;YAAA,CAAb,EASE,mEATF,EAhQqB;;;;AA8Qf,kBAAN,MAAA,gBAAA,QAA8B,WAA9B;EAEC,cAAgB,CAAC,KAAD,CAAA;AAEjB,QAAA,IAAA,EAAA,SAAA,EAAA,IAAA,EAAA,IAAA,EAAA;IAAE,CAAC,IAAD,EAAO,IAAP,CAAA,GAAe,MAAA,CAAO,KAAP;IACf,SAAA;;AAAY;AAAA;MAAA,KAAA,qCAAA;;QACX,IAAG,IAAA,KAAQ,KAAX;uBACC,UAAA,CAAW,QAAA,CAAS,IAAT,CAAX,GADD;SAAA,MAAA;uBAGC,MAHD;;MADW,CAAA;;;IAMZ,MAAA,GAAS,SAAS,CAAC,IAAV,CAAe,EAAf;AACT,WAAO;EAVQ;;AAFjB;;AAcA,QAAA,GAAW,IAAI,eAAJ,CAAA,EA5RU;;;AAgSrB,QAAQ,CAAC,KAAT,CAAe,CAAA;;;;;;;aAAA,CAAf,EASO,CAAA,kFAAA,CATP,EAhSqB;;;AA+SrB,QAAQ,CAAC,KAAT,CAAe,CAAA;;;;;;;aAAA,CAAf,EASO,CAAA,oFAAA,CATP",
  "sourcesContent": [
    "# heredoc.test.coffee\n\nimport {\n\tundef, defined, notdefined, nonEmpty,\n\tisString, OL, CWS, behead, blockToArray,\n\tassert, croak,\n\t} from '@jdeighan/llutils'\nimport {undented} from '@jdeighan/llutils/indent'\nimport * as lib from '@jdeighan/llutils/heredoc'\nObject.assign(global, lib)\nimport * as lib2 from '@jdeighan/llutils/utest'\nObject.assign(global, lib2)\n\n# ---------------------------------------------------------------------------\n#symbol \"lineToParts(line)\"\n\nequal lineToParts('this is not a heredoc'), [\n\t'this is not a heredoc'\n\t]\n\nequal lineToParts('this <<< is <<< heredoc'), [\n\t'this '\n\t'<<<'\n\t' is '\n\t'<<<'\n\t' heredoc'\n\t]\n\nequal lineToParts('<<< is <<< heredoc'), [\n\t''\n\t'<<<'\n\t' is '\n\t'<<<'\n\t' heredoc'\n\t]\n\nequal lineToParts('this <<< is <<<'), [\n\t'this '\n\t'<<<'\n\t' is '\n\t'<<<'\n\t''\n\t]\n\nequal lineToParts('<<< is <<<'), [\n\t''\n\t'<<<'\n\t' is '\n\t'<<<'\n\t''\n\t]\n\nequal lineToParts('<<<'), [\n\t''\n\t'<<<'\n\t''\n\t]\n\nequal lineToParts('<<<<<<'), [\n\t''\n\t'<<<'\n\t''\n\t'<<<'\n\t''\n\t]\n\n# ---------------------------------------------------------------------------\n#symbol \"mapHereDoc()\"\n\nequal mapHereDoc(\"\"\"\n\t\tabc\n\t\tdef\n\t\t\"\"\"),\n\t\t'\"abc\\\\ndef\"'\n\n# ---------------------------------------------------------------------------\n\nequal mapHereDoc(\"\"\"\n\t\t===\n\t\tabc\n\t\tdef\n\t\t\"\"\"),\n\t\t'\"abc\\\\ndef\"'\n\n# ---------------------------------------------------------------------------\n\nequal mapHereDoc(\"\"\"\n\t\t...\n\t\tabc\n\t\tdef\n\t\t\"\"\"),\n\t\t'\"abc def\"'\n\n# ---------------------------------------------------------------------------\n\nequal mapHereDoc(\"\"\"\n\t\t---\n\t\ta: 1\n\t\tb: 2\n\t\t\"\"\"),\n\t\t'{\"a\":1,\"b\":2}'\n\n# ---------------------------------------------------------------------------\n\nequal mapHereDoc(\"\"\"\n\t\t---\n\t\t- a\n\t\t- b\n\t\t\"\"\"),\n\t\t'[\"a\",\"b\"]'\n\n# ---------------------------------------------------------------------------\n#symbol \"HereDocTester - a custom tester\"\n\nclass HereDocTester extends UnitTester\n\n\ttransformValue: (block) ->\n\n\t\treturn mapHereDoc(block)\n\ntester = new HereDocTester()\n\n# ------------------------------------------------------------------------\n# Default heredoc type is a block\n\ntester.equal \"\"\"\n\t\tthis is a\n\t\tblock of text\n\t\t\"\"\",\n\t\t'\"this is a\\\\nblock of text\"'\n\n# ------------------------------------------------------------------------\n# Make explicit that the heredoc type is a block\n\ntester.equal \"\"\"\n\t\t===\n\t\tthis is a\n\t\tblock of text\n\t\t\"\"\",\n\t\t'\"this is a\\\\nblock of text\"'\n\n# ------------------------------------------------------------------------\n# One Line block\n\ntester.equal \"\"\"\n\t\t...this is a\n\t\tline of text\n\t\t\"\"\",\n\t\t'\"this is a line of text\"'\n\n# ------------------------------------------------------------------------\n# One Line block\n\ntester.equal \"\"\"\n\t\t...\n\t\tthis is a\n\t\tline of text\n\t\t\"\"\",\n\t\t'\"this is a line of text\"'\n\n# ---------------------------------------------------------------------------\n#symbol \"MatrixHereDoc - custom heredoc\"\n\nclass MatrixHereDoc extends BaseHereDoc\n\n\tmap: (block) ->\n\t\t# --- if block starts with a digit\n\t\tif notdefined(block.match(/^\\s*\\d/s))\n\t\t\treturn undef\n\t\tlArray = for line in blockToArray(block)\n\t\t\tline.split(/\\s+/).map((str) => parseInt(str))\n\t\treturn JSON.stringify(lArray)\n\naddHereDocType 'matrix', new MatrixHereDoc()\n\ntester.equal \"\"\"\n\t\t1 2 3\n\t\t2 4 6\n\t\t\"\"\",\n\t\t'[[1,2,3],[2,4,6]]'\n\n# ------------------------------------------------------------------------\n#symbol \"UCHereDoc = custom heredoc\"\n\nclass UCHereDoc extends BaseHereDoc\n\n\tmap: (block) ->\n\n\t\tif (block.indexOf('^^^') != 0)\n\t\t\treturn undef\n\n\t\tblock = block.substring(4).toUpperCase()\n\t\treturn JSON.stringify(block)\n\naddHereDocType 'upper case', new UCHereDoc()\n\ntester.equal \"\"\"\n\t\t^^^\n\t\tThis is a\n\t\tblock of text\n\t\t\"\"\",\n\t\t'\"THIS IS A\\\\nBLOCK OF TEXT\"'\n\n# ---------------------------------------------------------------------------\n#symbol \"UCHereDoc1 - custom heredoc\"\n\n#\n#     e.g. with header line ***,\n#     we'll create an upper-cased single line string\n\nclass UCHereDoc2 extends BaseHereDoc\n\n\tmap: (block) ->\n\n\t\t[head, rest] = behead(block)\n\t\tif (head != '***')\n\t\t\treturn undef\n\t\tblock = CWS(rest.toUpperCase())\n\t\tresult = JSON.stringify(block)\n\t\treturn result\n\naddHereDocType 'upper case 2', new UCHereDoc2()\n\n# ---------------------------------------------------------------------------\n\ntester.equal \"\"\"\n\t\t***\n\t\tselect ID,Name\n\t\tfrom Users\n\t\t\"\"\",\n\t\t'\"SELECT ID,NAME FROM USERS\"'\n\n# ---------------------------------------------------------------------------\n#symbol \"TAML heredoc\"\n\ntester.equal \"\"\"\n\t\t---\n\t\t- abc\n\t\t- def\n\t\t\"\"\",\n\t\t'[\"abc\",\"def\"]'\n\n# ---------------------------------------------------------------------------\n# TAML-like block, but actually a block\n\ntester.equal \"\"\"\n\t\t===\n\t\t---\n\t\t- abc\n\t\t- def\n\t\t\"\"\",\n\t\t'\"---\\\\n- abc\\\\n- def\"'\n\n# ---------------------------------------------------------------------------\n# TAML block 2\n\ntester.equal \"\"\"\n\t\t---\n\t\t-\n\t\t\tlabel: Help\n\t\t\turl: /help\n\t\t-\n\t\t\tlabel: Books\n\t\t\turl: /books\n\t\t\"\"\",\n\t\t'[{\"label\":\"Help\",\"url\":\"/help\"},{\"label\":\"Books\",\"url\":\"/books\"}]'\n\n# ---------------------------------------------------------------------------\n#symbol \"HereDocReplacer - custom tester\"\n\nclass HereDocReplacer extends UnitTester\n\n\ttransformValue: (block) ->\n\n\t\t[head, rest] = behead(block)\n\t\tlNewParts = for part in lineToParts(head)\n\t\t\tif part == '<<<'\n\t\t\t\tmapHereDoc(undented(rest))\n\t\t\telse\n\t\t\t\tpart    # keep as is\n\n\t\tresult = lNewParts.join('')\n\t\treturn result\n\nreplacer = new HereDocReplacer()\n\n# ---------------------------------------------------------------------------\n\nreplacer.equal \"\"\"\n\t\tTopMenu lItems={<<<}\n\t\t\t---\n\t\t\t-\n\t\t\t\tlabel: Help\n\t\t\t\turl: /help\n\t\t\t-\n\t\t\t\tlabel: Books\n\t\t\t\turl: /books\n\t\t\"\"\", \"\"\"\n\t\tTopMenu lItems={[{\"label\":\"Help\",\"url\":\"/help\"},{\"label\":\"Books\",\"url\":\"/books\"}]}\n\t\t\"\"\"\n\n# ---------------------------------------------------------------------------\n\nreplacer.equal \"\"\"\n\t\t<TopMenu lItems={<<<}>\n\t\t\t---\n\t\t\t-\n\t\t\t\tlabel: Help\n\t\t\t\turl: /help\n\t\t\t-\n\t\t\t\tlabel: Books\n\t\t\t\turl: /books\n\t\t\"\"\", \"\"\"\n\t\t<TopMenu lItems={[{\"label\":\"Help\",\"url\":\"/help\"},{\"label\":\"Books\",\"url\":\"/books\"}]}>\n\t\t\"\"\"\n"
  ]
}