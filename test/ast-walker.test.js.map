{
  "version": 3,
  "file": "ast-walker.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\ast-walker.test.coffee"
  ],
  "names": [],
  "mappings": "AAAwB;AAExB,OAAA;EACC,KADD;EACQ,OADR;EACiB,UADjB;EAC6B,MAD7B;EACqC,MADrC;EAEC,MAFD;EAES,KAFT;CAAA,MAAA;;AAIA,OAAA;EAAQ,UAAR;CAAA,MAAA;;AACA,OAAO,CAAA,OAAP,MAAA;;AACA,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB,GAAtB;;AACA,OAAO,CAAA,QAAP,MAAA;;AACA,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB,IAAtB,EAVwB;;;AAaxB,MAAA,CAAO,uBAAP;;AAEA,CAAC,CAAA,CAAA,GAAA;AACD,MAAA;EAAC,IAAA,GAAO,CAAA;;iCAAA;SAKP,KAAA,CAAM,UAAA,CAAW,IAAX,CAAgB,CAAC,QAAvB,EAAiC,CAChC,GADgC,EAC3B,OAD2B,EAClB,OADkB,CAAjC;AANA,CAAD,CAAA,CAAA;;AAWA,CAAC,CAAA,CAAA,GAAA;AACD,MAAA;EAAC,IAAA,GAAO,CAAA;;2BAAA;SAKP,KAAA,CAAM,UAAA,CAAW,IAAX,CAAgB,CAAC,QAAvB,EAAiC;IAChC,mBAAA,EAAqB,KAAA,CAAM,0BAAN;EADW,CAAjC;AANA,CAAD,CAAA,CAAA,EA1BwB;;;AAuCxB,CAAC,CAAA,CAAA,GAAA;AACD,MAAA;EAAC,IAAA,GAAO,CAAA;;;4CAAA;SAMP,KAAA,CAAM,UAAA,CAAW,IAAX,CAAgB,CAAC,QAAvB,EAAiC;IAChC,mBAAA,EAAqB,KAAA,CAAM,0BAAN,CADW;IAEhC,sBAAA,EAAwB,CAAC,SAAD;EAFQ,CAAjC;AAPA,CAAD,CAAA,CAAA,EAvCwB;;;AAsDxB,CAAC,CAAA,CAAA,GAAA;AACD,MAAA;EAAC,IAAA,GAAO,CAAA,aAAA;SAGP,KAAA,CAAM,UAAA,CAAW,IAAX,CAAgB,CAAC,QAAvB,EAAiC,CAAC,GAAD,CAAjC;AAJA,CAAD,CAAA,CAAA,EAtDwB;;;AA+DxB,KAAA,CAAM,CAAA,CAAA,GAAA;SAAM,UAAA,CAAW,CAAA;aAAA,CAAX;AAAN,CAAN,EA/DwB;;;AAsExB,CAAC,CAAA,CAAA,GAAA;AACD,MAAA;EAAC,IAAA,GAAO,CAAA;mBAAA;SAIP,KAAA,CAAM,UAAA,CAAW,IAAX,CAAgB,CAAC,QAAvB,EAAiC,CAAC,GAAD,EAAK,GAAL,CAAjC;AALA,CAAD,CAAA,CAAA",
  "sourcesContent": [
    "# ast-walker.test.coffee\r\n\r\nimport {\r\n\tundef, defined, notdefined, hasKey, dclone,\r\n\tassert, words\r\n\t} from '@jdeighan/llutils'\r\nimport {coffeeInfo} from '@jdeighan/llutils/coffee'\r\nimport * as lib from '@jdeighan/llutils/ast-walker'\r\nObject.assign(global, lib)\r\nimport * as lib2 from '@jdeighan/llutils/utest'\r\nObject.assign(global, lib2)\r\n\r\n# ---------------------------------------------------------------------------\r\nsymbol \"coffeeInfo(codeOrAST)\"\r\n\r\n(() =>\r\n\tcode = \"\"\"\r\n\t\texport x = y\r\n\t\texport func1 = (arg) => return 13\r\n\t\texport func2 = (arg) -> return 13\r\n\t\t\"\"\"\r\n\tequal coffeeInfo(code).lExports, [\r\n\t\t'x', 'func1', 'func2'\r\n\t\t]\r\n\t)()\r\n\r\n(() =>\r\n\tcode = \"\"\"\r\n\t\timport {\r\n\t\t\tundef, defined, notdefined,\r\n\t\t\t} from '@jdeighan/llutils'\r\n\t\t\"\"\"\r\n\tequal coffeeInfo(code).hImports, {\r\n\t\t'@jdeighan/llutils': words('undef defined notdefined')\r\n\t\t}\r\n\t)()\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\n(() =>\r\n\tcode = \"\"\"\r\n\t\timport {\r\n\t\t\tundef, defined, notdefined,\r\n\t\t\t} from '@jdeighan/llutils'\r\n\t\timport {withExt} from '@jdeighan/llutils/fs'\r\n\t\t\"\"\"\r\n\tequal coffeeInfo(code).hImports, {\r\n\t\t'@jdeighan/llutils': words('undef defined notdefined')\r\n\t\t'@jdeighan/llutils/fs': ['withExt']\r\n\t\t}\r\n\t)()\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\n(() =>\r\n\tcode = \"\"\"\r\n\t\texport x = 42\r\n\t\t\"\"\"\r\n\tequal coffeeInfo(code).lExports, ['x']\r\n\t)()\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nfails () => coffeeInfo(\"\"\"\r\n\texport x = 33\r\n\texport x = 42\r\n\t\"\"\")\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\n(() =>\r\n\tcode = \"\"\"\r\n\t\texport x = 42\r\n\t\texport y = func(33)\r\n\t\t\"\"\"\r\n\tequal coffeeInfo(code).lExports, ['x','y']\r\n\t)()\r\n\r\n"
  ]
}