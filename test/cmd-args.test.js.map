{
  "version": 3,
  "file": "cmd-args.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\cmd-args.test.coffee"
  ],
  "names": [],
  "mappings": "AAAsB;AAAA,IAAA;;AAEtB,OAAA;EAAQ,KAAR;CAAA,MAAA;;AACA,OAAO,CAAA,OAAP,MAAA;;AACA,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB,GAAtB;;AACA,OAAO,CAAA,QAAP,MAAA;;AACA,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB,IAAtB,EANsB;;;AAUtB,KAAA,CAAM,OAAA,CAAQ,KAAR,EAAe;EAAC,IAAA,EAAM;AAAP,CAAf,CAAN,EAA6C;EAC5C,CAAA,EAAG,IADyC;EAE5C,CAAA,EAAG,IAFyC;EAG5C,EAAA,EAAI,KAHwC;EAI5C,CAAA,EAAG;AAJyC,CAA7C;;AAOA,KAAA,CAAM,OAAA,CAAQ,KAAR,EAAe;EAAC,IAAA,EAAM;AAAP,CAAf,CAAN,EAAwD;EACvD,CAAA,EAAG,IADoD;EAEvD,CAAA,EAAG,IAFoD;EAGvD,EAAA,EAAI,QAHmD;EAIvD,CAAA,EAAG,CAAC,SAAD;AAJoD,CAAxD;;AAOA,KAAA,CAAM,OAAA,CAAQ,KAAR,EAAe;EAAC,IAAA,EAAM;AAAP,CAAf,CAAN,EAAqD;EACpD,KAAA,EAAO,YAD6C;EAEpD,CAAA,EAAG;AAFiD,CAArD;;AAKA,KAAA,CAAM,OAAA,CAAQ,KAAR,EAAe;EAAC,IAAA,EAAM;AAAP,CAAf,CAAN,EAAqD;EACpD,KAAA,EAAO,YAD6C;EAEpD,CAAA,EAAG;AAFiD,CAArD;;AAKA,KAAA,GAAQ;EACP,CAAA,EAAG;IACF,GAAA,EAAK,CADH;IAEF,GAAA,EAAK;EAFH,CADI;EAKP,CAAA,EAAG,SALI;EAMP,CAAA,EAAG,SANI;EAOP,EAAA,EAAI;AAPG;;AAUR,KAAA,CAAM,OAAA,CAAQ,KAAR,EAAe;EAAC,IAAA,EAAM;AAAP,CAAf,CAAN,EAAqD;EACpD,CAAA,EAAG,CAAC,SAAD,CADiD;EAEpD,CAAA,EAAG,IAFiD;EAGpD,CAAA,EAAG,IAHiD;EAIpD,EAAA,EAAI;AAJgD,CAArD;;AAOA,KAAA,CAAM,OAAA,CAAQ,KAAR,EAAe;EAAC,IAAA,EAAM;AAAP,CAAf,CAAN,EAAoD;EACnD,CAAA,EAAG,CAAC,SAAD,CADgD;EAEnD,CAAA,EAAG,IAFgD;EAGnD,EAAA,EAAI;AAH+C,CAApD;;AAMA,KAAA,CAAM,CAAA,CAAA,GAAA;SAAM,OAAA,CAAQ,KAAR,EAAe;IAAC,IAAA,EAAM;EAAP,CAAf;AAAN,CAAN;;AAEA,KAAA,CAAM,CAAA,CAAA,GAAA;SAAM,OAAA,CAAQ,KAAR,EAAe;IAAC,IAAA,EAAM;EAAP,CAAf;AAAN,CAAN",
  "sourcesContent": [
    "# cmd-args.test.coffee\r\n\r\nimport {undef} from '@jdeighan/llutils'\r\nimport * as lib from '@jdeighan/llutils/cmd-args'\r\nObject.assign(global, lib)\r\nimport * as lib2 from '@jdeighan/llutils/utest'\r\nObject.assign(global, lib2)\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nequal getArgs(undef, {args: '-ab -cd=why'}), {\r\n\ta: true\r\n\tb: true\r\n\tcd: 'why'\r\n\t_: []\r\n\t}\r\n\r\nequal getArgs(undef, {args: '-ab -cd=whynot letmein'}), {\r\n\ta: true\r\n\tb: true\r\n\tcd: 'whynot'\r\n\t_: ['letmein']\r\n\t}\r\n\r\nequal getArgs(undef, {args: '-label=\"some label\"'}), {\r\n\tlabel: \"some label\"\r\n\t_: []\r\n\t}\r\n\r\nequal getArgs(undef, {args: \"-label='some label'\"}), {\r\n\tlabel: \"some label\"\r\n\t_: []\r\n\t}\r\n\r\nhDesc = {\r\n\t_: {\r\n\t\tmin: 1\r\n\t\tmax: 3\r\n\t\t}\r\n\ta: 'boolean'\r\n\tb: 'boolean'\r\n\tcd: 'string'\r\n\t}\r\n\r\nequal getArgs(hDesc, {args: '-ab -cd=why letmein'}), {\r\n\t_: ['letmein']\r\n\ta: true\r\n\tb: true\r\n\tcd: 'why'\r\n\t}\r\n\r\nequal getArgs(hDesc, {args: '-a -cd=why letmein'}), {\r\n\t_: ['letmein']\r\n\ta: true\r\n\tcd: 'why'\r\n\t}\r\n\r\nfails () => getArgs(hDesc, {args: '-ab -cd=why'})\r\n\r\nfails () => getArgs(hDesc, {args: '-ab -cd=why a b c d'})\r\n"
  ]
}