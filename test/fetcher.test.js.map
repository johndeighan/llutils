{
  "version": 3,
  "file": "fetcher.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\fetcher.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# fetcher.test.coffee\r\n\r\nimport {undef, nonEmpty} from '@jdeighan/llutils'\r\nimport * as lib from '@jdeighan/llutils/fetcher'\r\nObject.assign(global, lib)\r\nimport * as lib2 from '@jdeighan/llutils/utest'\r\nObject.assign(global, lib2)\r\n\r\n# ---------------------------------------------------------------------------\r\nsymbol \"LineFetcher\"\r\n\r\n(() =>\r\n\tsrc = new LineFetcher(\"\"\"\r\n\t\tabc\r\n\t\tdef\r\n\t\tghi\r\n\t\t\"\"\")\r\n\tequal src.peek(), 'abc'\r\n\ttruthy src.moreLines()\r\n\tequal src.peek(), 'abc'\r\n\tequal src.fetch(), 'abc'\r\n\ttruthy src.moreLines()\r\n\tequal src.fetch(), 'def'\r\n\tequal src.fetch(), 'ghi'\r\n\tfalsy src.moreLines()\r\n\tequal src.fetch(), undef\r\n\tequal src.fetch(), undef\r\n\t)()\r\n\r\n# ---------------------------------------------------------------------------\r\nsymbol \"LineFetcher - filter\"\r\n\r\n(() =>\r\n\tsrc = new LineFetcher(\"\"\"\r\n\t\tabc\r\n\t\tdef\r\n\t\tghi\r\n\t\t\"\"\")\r\n\tsrc.filter = (line) => return (line != 'def')\r\n\r\n\tequal src.peek(), 'abc'\r\n\ttruthy src.moreLines()\r\n\tequal src.peek(), 'abc'\r\n\tequal src.fetch(), 'abc'\r\n\ttruthy src.moreLines()\r\n\tequal src.fetch(), 'ghi'\r\n\tfalsy src.moreLines()\r\n\tequal src.fetch(), undef\r\n\tequal src.fetch(), undef\r\n\t)()\r\n\r\n(() =>\r\n\tsrc = new LineFetcher(\"\"\"\r\n\t\tabc\r\n\t\tdef\r\n\t\tghi\r\n\t\t\"\"\")\r\n\tsrc.filter = (line) =>\r\n\t\treturn nonEmpty(line) && ! (line.match(/^\\s*#\\s/))\r\n\r\n\tequal src.peek(), 'abc'\r\n\ttruthy src.moreLines()\r\n\tequal src.peek(), 'abc'\r\n\tequal src.fetch(), 'abc'\r\n\ttruthy src.moreLines()\r\n\tequal src.fetch(), 'def'\r\n\tequal src.fetch(), 'ghi'\r\n\tfalsy src.moreLines()\r\n\tequal src.fetch(), undef\r\n\tequal src.fetch(), undef\r\n\t)()\r\n\r\n# ---------------------------------------------------------------------------\r\nsymbol \"LineFetcher - filter & transform\"\r\n\r\n(() =>\r\n\tsrc = new LineFetcher(\"\"\"\r\n\t\tabc\r\n\t\tdef\r\n\t\tghi\r\n\t\t\"\"\")\r\n\tsrc.filter = (line) => return (line != 'DEF')\r\n\tsrc.transform = (line) => return line.toUpperCase()\r\n\r\n\tequal src.peek(), 'ABC'\r\n\ttruthy src.moreLines()\r\n\tequal src.peek(), 'ABC'\r\n\tequal src.fetch(), 'ABC'\r\n\ttruthy src.moreLines()\r\n\tequal src.fetch(), 'GHI'\r\n\tfalsy src.moreLines()\r\n\tequal src.fetch(), undef\r\n\tequal src.fetch(), undef\r\n\t)()\r\n\r\n# ---------------------------------------------------------------------------\r\nsymbol \"LineFetcher - internal empty line\"\r\n\r\n(() =>\r\n\tsrc = new LineFetcher(\"\"\"\r\n\t\tabc\r\n\r\n\t\tdef\r\n\t\t\"\"\")\r\n\tequal src.peek(), 'abc'\r\n\ttruthy src.moreLines()\r\n\tequal src.peek(), 'abc'\r\n\tequal src.fetch(), 'abc'\r\n\ttruthy src.moreLines()\r\n\tequal src.fetch(), ''\r\n\tequal src.fetch(), 'def'\r\n\tfalsy src.moreLines()\r\n\tequal src.fetch(), undef\r\n\tequal src.fetch(), undef\r\n\t)()\r\n\r\n# ---------------------------------------------------------------------------\r\nsymbol \"LineFetcher - trailing empty line\"\r\n\r\n(() =>\r\n\tsrc = new LineFetcher(\"\"\"\r\n\t\tabc\r\n\r\n\t\tdef\r\n\r\n\t\t\"\"\")\r\n\tequal src.peek(), 'abc'\r\n\ttruthy src.moreLines()\r\n\tequal src.peek(), 'abc'\r\n\tequal src.fetch(), 'abc'\r\n\ttruthy src.moreLines()\r\n\tequal src.fetch(), ''\r\n\tequal src.fetch(), 'def'\r\n\tequal src.fetch(), ''\r\n\tfalsy src.moreLines()\r\n\tequal src.fetch(), undef\r\n\tequal src.fetch(), undef\r\n\t)()\r\n\r\n# ---------------------------------------------------------------------------\r\nsymbol \"PLLFetcher\"\r\n\r\n(() =>\r\n\tsrc = new PLLFetcher(\"\"\"\r\n\t\tGLOBAL\r\n\t\t\timport undef\r\n\t\t\tmeaning = 42\r\n\t\tcmdArgs\r\n\t\t\targ (ws arg)*\r\n\t\t\t\treturn hOptions\r\n\t\t\"\"\")\r\n\r\n\tequal src.peek(), [0, 'GLOBAL']\r\n\ttruthy src.moreLines()\r\n\tequal src.peek(), [0, 'GLOBAL']\r\n\tequal src.fetch(), [0, 'GLOBAL']\r\n\ttruthy src.moreLines()\r\n\tequal src.fetch(), [1, 'import undef']\r\n\tequal src.fetch(), [1, 'meaning = 42']\r\n\ttruthy src.moreLines()\r\n\tequal src.fetch(), [0, 'cmdArgs']\r\n\tequal src.fetch(), [1, 'arg (ws arg)*']\r\n\tequal src.fetch(), [2, 'return hOptions']\r\n\tequal src.fetch(), undef\r\n\tequal src.fetch(), undef\r\n\tfalsy src.moreLines()\r\n\t)()\r\n\r\n\r\n# ---------------------------------------------------------------------------\r\nsymbol \"PLLFetcher- test getBlock()\"\r\n\r\n(() =>\r\n\tsrc = new PLLFetcher(\"\"\"\r\n\t\tGLOBAL\r\n\t\t\timport undef\r\n\t\t\tmeaning = 42\r\n\t\tcmdArgs\r\n\t\t\targ (ws arg)*\r\n\t\t\t\treturn hOptions\r\n\t\textra\r\n\t\t\"\"\")\r\n\r\n\tequal src.fetch(), [0, 'GLOBAL']\r\n\tequal src.getBlock(1), \"\"\"\r\n\t\timport undef\r\n\t\tmeaning = 42\r\n\t\t\"\"\"\r\n\tequal src.fetch(), [0, 'cmdArgs']\r\n\tequal src.fetch(), [1, 'arg (ws arg)*']\r\n\tequal src.getBlock(2), \"\"\"\r\n\t\treturn hOptions\r\n\t\t\"\"\"\r\n\tequal src.fetch(), [0, 'extra']\r\n\tequal src.fetch(), undef\r\n\tequal src.fetch(), undef\r\n\tfalsy src.moreLines()\r\n\t)()\r\n\r\n# ---------------------------------------------------------------------------\r\nsymbol \"PLLFetcher - getBlock(), src has blank lines\"\r\n\r\n(() =>\r\n\tsrc = new PLLFetcher(\"\"\"\r\n\r\n\t\tGLOBAL\r\n\r\n\t\t\timport undef\r\n\t\t\tmeaning = 42\r\n\r\n\t\tcmdArgs\r\n\r\n\t\t\targ (ws arg)*\r\n\r\n\t\t\t\treturn hOptions\r\n\r\n\t\textra\r\n\t\t\"\"\")\r\n\r\n\tequal src.fetch(), [0, 'GLOBAL']\r\n\tequal src.getBlock(1), \"\"\"\r\n\t\timport undef\r\n\t\tmeaning = 42\r\n\t\t\"\"\"\r\n\tequal src.fetch(), [0, 'cmdArgs']\r\n\tequal src.fetch(), [1, 'arg (ws arg)*']\r\n\tequal src.getBlock(2), \"\"\"\r\n\t\treturn hOptions\r\n\t\t\"\"\"\r\n\tequal src.fetch(), [0, 'extra']\r\n\tequal src.fetch(), undef\r\n\tequal src.fetch(), undef\r\n\tfalsy src.moreLines()\r\n\t)()\r\n"
  ]
}