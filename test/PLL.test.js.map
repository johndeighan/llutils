{
  "version": 3,
  "file": "PLL.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\PLL.test.coffee"
  ],
  "names": [],
  "mappings": "AAAiB;AAAA,IAAA;;AAEjB,OAAA;EAAQ,KAAR;EAAe,QAAf;CAAA,MAAA;;AACA,OAAA;EAAQ,UAAR;CAAA,MAAA;;AACA,OAAA;EAAQ,KAAR;CAAA,MAAA;;AACA,OAAO,CAAA,QAAP,MAAA;;AACA,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB,IAAtB;;AAEA,CAAA,GAAI,IAAI,UAAJ,CAAA;;AACJ,CAAC,CAAC,cAAF,GAAmB,CAAC,KAAD,CAAA,GAAA;AAClB,SAAO,KAAA,CAAM,KAAN,EAAa;IAAC,MAAA,EAAQ,IAAI,UAAJ,CAAA;EAAT,CAAb;AADW;;AAGnB,CAAC,CAAC,iBAAF,GAAsB,CAAC,KAAD,CAAA,GAAA;AACrB,SAAO,QAAA,CAAS,KAAT;AADc,EAZL;;;AAiBjB,QAAA,CAAS,CAAA,CAAA,GAAA;SAAM,CAAA,GAAA;AAAN,CAAT;;AAIA,QAAA,CAAS,CAAA,CAAA,GAAA;SAAM,CAAA;GAAA;AAAN,CAAT;;AAKA,QAAA,CAAS,CAAA,CAAA,GAAA;SAAM,CAAA;IAAA;AAAN,CAAT;;AAKA,QAAA,CAAS,CAAA,CAAA,GAAA;SAAM,CAAA;KAAA;AAAN,CAAT,EA/BiB;;;AAsCjB,CAAC,CAAC,KAAF,CAAQ,CAAA,GAAA,CAAR,EAEM,CAAA;;;;;YAAA,CAFN;;AAWA,CAAC,CAAC,KAAF,CAAQ,CAAA;GAAA,CAAR,EAGM,CAAA;;;;;;;;YAAA,CAHN;;AAeA,CAAC,CAAC,KAAF,CAAQ,CAAA;IAAA,CAAR,EAGM,CAAA;;;;;;;;;cAAA,CAHN;;AAgBA,CAAC,CAAC,KAAF,CAAQ,CAAA;;KAAA,CAAR,EAIM,CAAA;;;;;;;;;;;;;gBAAA,CAJN;;AAqBA,CAAC,CAAC,KAAF,CAAQ,CAAA;KAAA,CAAR,EAGM,CAAA;;;;;gBAAA,CAHN;;AAYA,CAAC,CAAC,KAAF,CAAQ,CAAA;;GAAA,CAAR,EAIM,CAAA;;;;;;;;YAAA,CAJN;;AAgBA,CAAC,CAAC,KAAF,CAAQ,CAAA;;IAAA,CAAR,EAIM,CAAA;;;;;;;;;cAAA,CAJN,EAjIiB;;;;AAqJjB,CAAC,CAAC,KAAF,CAAQ,OAAR,EAAiB,CAAA;;;;;YAAA,CAAjB;;AASA,CAAC,CAAC,KAAF,CAAQ,OAAR,EAAiB,CAAA;;;;;YAAA,CAAjB;;AASA,CAAC,CAAC,KAAF,CAAQ,SAAR,EAAmB,CAAA;;;;;YAAA,CAAnB;;AASA,CAAC,CAAC,KAAF,CAAQ,CAAA;;GAAA,CAAR,EAIM,CAAA;;;;;;;;YAAA,CAJN;;AAgBA,CAAC,CAAC,KAAF,CAAQ,CAAA;;;;AAAA,CAAR,EAMM,CAAA;;;;;;;;YAAA,CANN;;AAkBA,CAAC,CAAC,KAAF,CAAQ,CAAA;;;;AAAA,CAAR,EAMM,CAAA;;;;;;;;;cAAA,CANN;;AAmBA,CAAC,CAAC,KAAF,CAAQ,CAAA;;;;;;;;;;AAAA,CAAR,EAYM,CAAA;;;;;;;;;;;;;gBAAA,CAZN;;AA6BA,CAAC,CAAC,KAAF,CAAQ,CAAA;;;;;AAAA,CAAR,EAOM,CAAA;;;;;gBAAA,CAPN;;AAgBA,CAAC,CAAC,KAAF,CAAQ,CAAA;;;;;GAAA,CAAR,EAOM,CAAA;;;;;;;;YAAA,CAPN;;AAmBA,CAAC,CAAC,KAAF,CAAQ,CAAA;;;;;;AAAA,CAAR,EAQM,CAAA;;;;;;;;;cAAA,CARN",
  "sourcesContent": [
    "# PLL.test.coffee\r\n\r\nimport {undef, fromTAML} from '@jdeighan/llutils'\r\nimport {BaseTracer} from '@jdeighan/llutils/peggy-utils'\r\nimport {parse} from './PLL/tree.js'\r\nimport * as lib2 from '@jdeighan/llutils/utest'\r\nObject.assign(global, lib2)\r\n\r\nu = new UnitTester()\r\nu.transformValue = (block) =>\r\n\treturn parse block, {tracer: new BaseTracer()}\r\n\r\nu.transformExpected = (block) =>\r\n\treturn fromTAML block\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nsucceeds () => \"\"\"\r\n\tabc\r\n\t\"\"\"\r\n\r\nsucceeds () => \"\"\"\r\n\tabc\r\n\tdef\r\n\t\"\"\"\r\n\r\nsucceeds () => \"\"\"\r\n\tabc\r\n\t\tdef\r\n\t\"\"\"\r\n\r\nsucceeds () => \"\"\"\r\n\tabc\r\n\t\t\tdef\r\n\t\"\"\"\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nu.equal \"\"\"\r\n\tabc\r\n\t\"\"\", \"\"\"\r\n\t---\r\n\ttype: tree\r\n\tbody:\r\n\t\t-\r\n\t\t\ttype: stmt\r\n\t\t\tident: abc\r\n\t\"\"\"\r\n\r\nu.equal \"\"\"\r\n\tabc\r\n\tdef\r\n\t\"\"\", \"\"\"\r\n\t---\r\n\ttype: tree\r\n\tbody:\r\n\t\t-\r\n\t\t\ttype: stmt\r\n\t\t\tident: abc\r\n\t\t-\r\n\t\t\ttype: stmt\r\n\t\t\tident: def\r\n\t\"\"\"\r\n\r\nu.equal \"\"\"\r\n\tabc\r\n\t\tdef\r\n\t\"\"\", \"\"\"\r\n\t---\r\n\ttype: tree\r\n\tbody:\r\n\t\t-\r\n\t\t\ttype: stmt\r\n\t\t\tident: abc\r\n\t\t\tchildren:\r\n\t\t\t\t-\r\n\t\t\t\t\ttype: stmt\r\n\t\t\t\t\tident: def\r\n\t\"\"\"\r\n\r\nu.equal \"\"\"\r\n\tabc\r\n\t\tdef\r\n\t\t\tghi\r\n\t\"\"\", \"\"\"\r\n\t---\r\n\ttype: tree\r\n\tbody:\r\n\t\t-\r\n\t\t\ttype: stmt\r\n\t\t\tident: abc\r\n\t\t\tchildren:\r\n\t\t\t\t-\r\n\t\t\t\t\ttype: stmt\r\n\t\t\t\t\tident: def\r\n\t\t\t\t\tchildren:\r\n\t\t\t\t\t\t-\r\n\t\t\t\t\t\t\ttype: stmt\r\n\t\t\t\t\t\t\tident: ghi\r\n\t\"\"\"\r\n\r\nu.equal \"\"\"\r\n\tabc\r\n\t\t\tdef\r\n\t\"\"\", \"\"\"\r\n\t---\r\n\ttype: tree\r\n\tbody:\r\n\t\t-\r\n\t\t\ttype: stmt\r\n\t\t\tident: abc def\r\n\t\"\"\"\r\n\r\nu.equal \"\"\"\r\n\tabc\r\n\t\t\tdef\r\n\tghi\r\n\t\"\"\", \"\"\"\r\n\t---\r\n\ttype: tree\r\n\tbody:\r\n\t\t-\r\n\t\t\ttype: stmt\r\n\t\t\tident: abc def\r\n\t\t-\r\n\t\t\ttype: stmt\r\n\t\t\tident: ghi\r\n\t\"\"\"\r\n\r\nu.equal \"\"\"\r\n\tabc\r\n\t\t\tdef\r\n\t\tghi\r\n\t\"\"\", \"\"\"\r\n\t---\r\n\ttype: tree\r\n\tbody:\r\n\t\t-\r\n\t\t\ttype: stmt\r\n\t\t\tident: abc def\r\n\t\t\tchildren:\r\n\t\t\t\t-\r\n\t\t\t\t\ttype: stmt\r\n\t\t\t\t\tident: ghi\r\n\t\"\"\"\r\n\r\n# ---------------------------------------------------------------------------\r\n# --- blank lines should be ignored\r\n\r\nu.equal \"\\nabc\", \"\"\"\r\n\t---\r\n\ttype: tree\r\n\tbody:\r\n\t\t-\r\n\t\t\ttype: stmt\r\n\t\t\tident: abc\r\n\t\"\"\"\r\n\r\nu.equal \"abc\\n\", \"\"\"\r\n\t---\r\n\ttype: tree\r\n\tbody:\r\n\t\t-\r\n\t\t\ttype: stmt\r\n\t\t\tident: abc\r\n\t\"\"\"\r\n\r\nu.equal \"\\nabc\\n\", \"\"\"\r\n\t---\r\n\ttype: tree\r\n\tbody:\r\n\t\t-\r\n\t\t\ttype: stmt\r\n\t\t\tident: abc\r\n\t\"\"\"\r\n\r\nu.equal \"\"\"\r\n\tabc\r\n\r\n\tdef\r\n\t\"\"\", \"\"\"\r\n\t---\r\n\ttype: tree\r\n\tbody:\r\n\t\t-\r\n\t\t\ttype: stmt\r\n\t\t\tident: abc\r\n\t\t-\r\n\t\t\ttype: stmt\r\n\t\t\tident: def\r\n\t\"\"\"\r\n\r\nu.equal \"\"\"\r\n\r\n\tabc\r\n\r\n\tdef\r\n\r\n\t\"\"\", \"\"\"\r\n\t---\r\n\ttype: tree\r\n\tbody:\r\n\t\t-\r\n\t\t\ttype: stmt\r\n\t\t\tident: abc\r\n\t\t-\r\n\t\t\ttype: stmt\r\n\t\t\tident: def\r\n\t\"\"\"\r\n\r\nu.equal \"\"\"\r\n\r\n\tabc\r\n\r\n\t\tdef\r\n\r\n\t\"\"\", \"\"\"\r\n\t---\r\n\ttype: tree\r\n\tbody:\r\n\t\t-\r\n\t\t\ttype: stmt\r\n\t\t\tident: abc\r\n\t\t\tchildren:\r\n\t\t\t\t-\r\n\t\t\t\t\ttype: stmt\r\n\t\t\t\t\tident: def\r\n\t\"\"\"\r\n\r\nu.equal \"\"\"\r\n\r\n\r\n\tabc\r\n\r\n\r\n\t\tdef\r\n\r\n\r\n\t\t\tghi\r\n\r\n\r\n\t\"\"\", \"\"\"\r\n\t---\r\n\ttype: tree\r\n\tbody:\r\n\t\t-\r\n\t\t\ttype: stmt\r\n\t\t\tident: abc\r\n\t\t\tchildren:\r\n\t\t\t\t-\r\n\t\t\t\t\ttype: stmt\r\n\t\t\t\t\tident: def\r\n\t\t\t\t\tchildren:\r\n\t\t\t\t\t\t-\r\n\t\t\t\t\t\t\ttype: stmt\r\n\t\t\t\t\t\t\tident: ghi\r\n\t\"\"\"\r\n\r\nu.equal \"\"\"\r\n\r\n\tabc\r\n\r\n\r\n\t\t\tdef\r\n\r\n\t\"\"\", \"\"\"\r\n\t---\r\n\ttype: tree\r\n\tbody:\r\n\t\t-\r\n\t\t\ttype: stmt\r\n\t\t\tident: abc def\r\n\t\"\"\"\r\n\r\nu.equal \"\"\"\r\n\r\n\tabc\r\n\r\n\t\t\tdef\r\n\r\n\tghi\r\n\t\"\"\", \"\"\"\r\n\t---\r\n\ttype: tree\r\n\tbody:\r\n\t\t-\r\n\t\t\ttype: stmt\r\n\t\t\tident: abc def\r\n\t\t-\r\n\t\t\ttype: stmt\r\n\t\t\tident: ghi\r\n\t\"\"\"\r\n\r\nu.equal \"\"\"\r\n\r\n\tabc\r\n\r\n\t\t\tdef\r\n\r\n\t\tghi\r\n\r\n\t\"\"\", \"\"\"\r\n\t---\r\n\ttype: tree\r\n\tbody:\r\n\t\t-\r\n\t\t\ttype: stmt\r\n\t\t\tident: abc def\r\n\t\t\tchildren:\r\n\t\t\t\t-\r\n\t\t\t\t\ttype: stmt\r\n\t\t\t\t\tident: ghi\r\n\t\"\"\"\r\n\r\n"
  ]
}