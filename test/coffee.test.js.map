{
  "version": 3,
  "file": "coffee.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\coffee.test.coffee"
  ],
  "names": [],
  "mappings": "AAAoB;AAEpB,OAAO,IAAP,MAAA;;AAEA,OAAA;EAAQ,KAAR;CAAA,MAAA;;AACA,OAAO,CAAA,OAAP,MAAA;;AACA,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB,GAAtB;;AACA,OAAO,CAAA,QAAP,MAAA;;AACA,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB,IAAtB,EARoB;;;;AAapB,QAAA,CAAS,CAAA,CAAA,GAAA;SAAM,IAAA,CAAK,OAAL;AAAN,CAAT;;AACA,KAAA,CAAM,CAAA,CAAA,GAAA;SAAM,IAAA,CAAK,WAAL;AAAN,CAAN;;AACA,KAAA,CAAM,IAAA,CAAK,OAAL,CAAa,CAAC,EAApB,EAAwB,CAAA;;MAAA,CAAxB;;AAMA,KAAA,CAAM,IAAA,CAAK,OAAL,EAAc;EAAC,OAAA,EAAS;AAAV,CAAd,CAA8B,CAAC,EAArC,EAAyC,CAAA;;;MAAA,CAAzC;;AAOA,KAAA,CAAM,IAAA,CAAK,OAAL,EAAc;EAAC,OAAA,EAAS;AAAV,CAAd,CAA+B,CAAC,EAAtC,EAA0C,CAAA;;;MAAA,CAA1C,EA5BoB;;;;AAsCpB,CAAC,CAAA,CAAA,GAAA;AACD,MAAA;EAAC,QAAA,GAAW;SACX,KAAA,CAAM,QAAA,CAAS,QAAT,CAAkB,CAAC,EAAzB,EAA6B,CAAA;;MAAA,CAA7B;AAFA,CAAD,CAAA,CAAA,EAtCoB;;;;AAkDpB,QAAA,CAAS,CAAA,CAAA,GAAA;SAAM,KAAA,CAAM,OAAN;AAAN,CAAT;;AACA,KAAA,CAAM,CAAA,CAAA,GAAA;SAAM,KAAA,CAAM,WAAN;AAAN,CAAN",
  "sourcesContent": [
    "# coffee.test.coffee\n\nimport test from 'ava'\n\nimport {undef} from '@jdeighan/llutils'\nimport * as lib from '@jdeighan/llutils/coffee'\nObject.assign(global, lib)\nimport * as lib2 from '@jdeighan/llutils/utest'\nObject.assign(global, lib2)\n\n# ---------------------------------------------------------------------------\n#symbol brew(code) - compile coffee code\n\nsucceeds () => brew('v = 5')\nfails () => brew('let v = 5')\nequal brew('v = 5').js, \"\"\"\n\tvar v;\n\n\tv = 5;\n\t\"\"\"\n\nequal brew('v = 5', {shebang: true}).js, \"\"\"\n\t#!/usr/bin/env node\n\tvar v;\n\n\tv = 5;\n\t\"\"\"\n\nequal brew('v = 5', {shebang: 'abc'}).js, \"\"\"\n\tabc\n\tvar v;\n\n\tv = 5;\n\t\"\"\"\n\n# ---------------------------------------------------------------------------\n#symbol brewFile(filePath) - compile coffee code\n\n(() =>\n\tfilePath = './test/coffee/test1.coffee'\n\tequal brewFile(filePath).js, \"\"\"\n\t\tvar v;\n\n\t\tv = 5;\n\t\t\"\"\"\n\t)()\n\n# ---------------------------------------------------------------------------\n#symbol toAST(code) - compile coffee code to an AST\n\nsucceeds () => toAST('v = 5')\nfails () => toAST('let v = 5')\n"
  ]
}