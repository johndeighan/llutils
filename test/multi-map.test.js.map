{
  "version": 3,
  "file": "multi-map.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\multi-map.test.coffee"
  ],
  "names": [],
  "mappings": "AAAuB;AAAA,IAAA,KAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,EAAA;;AAEvB,OAAA;EACC,KADD;EACQ,OADR;EACiB,UADjB;EAC6B,GAD7B;CAAA,MAAA;;AAGA,OAAO,CAAA,OAAP,MAAA;;AACA,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB,GAAtB;;AACA,OAAO,CAAA,QAAP,MAAA;;AACA,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB,IAAtB;;AACA,OAAA;EAAQ,QAAR;CAAA,MAAA,0BATuB;;;;;;;;;;;;AAsBvB,MAAA,GAAS,CACR,QAAQ,CAAC,MAAM,CAAC,CAAD,CADP,EAER,QAAQ,CAAC,MAAM,CAAC,CAAD,CAFP,EAGR,QAAQ,CAAC,MAAM,CAAC,CAAD,CAHP;;AAMT,EAAA,GAAK,IAAI,QAAJ,CAAa,CAAb;;AACL,KAAA,gDAAA;;EACC,EAAE,CAAC,GAAH,CAAO,CAAC,KAAD,EAAQ,CAAR,EAAW,CAAX,CAAP,EAAsB,CAAA,IAAA,CAAA,CAAO,CAAP,CAAA,CAAtB;AADD;;AAGA,KAAA,kDAAA;;EACC,KAAA,CAAM,EAAE,CAAC,GAAH,CAAO,CAAC,KAAD,EAAQ,CAAR,EAAW,CAAX,CAAP,CAAN,EAA6B,CAAA,IAAA,CAAA,CAAO,CAAP,CAAA,CAA7B;EACA,KAAA,CAAM,EAAE,CAAC,GAAH,CAAO,CAAC,KAAD,EAAQ,CAAR,EAAW,CAAX,CAAP,CAAN,EAA6B,KAA7B;EACA,KAAA,CAAM,EAAE,CAAC,GAAH,CAAO,CAAC,KAAD,EAAQ,CAAR,EAAW,CAAX,CAAP,CAAN,EAA6B,KAA7B;AAHD;;AAKA,KAAA,GAAQ,MAAM,CAAC,CAAD;;AACd,EAAE,CAAC,GAAH,CAAO,CAAC,KAAD,EAAQ,CAAR,EAAW,CAAX,CAAP,EAAsB,QAAtB;;AACA,KAAA,CAAM,EAAE,CAAC,GAAH,CAAO,CAAC,KAAD,EAAQ,CAAR,EAAW,CAAX,CAAP,CAAN,EAA6B,OAA7B;;AACA,KAAA,CAAM,EAAE,CAAC,GAAH,CAAO,CAAC,KAAD,EAAQ,CAAR,EAAW,CAAX,CAAP,CAAN,EAA6B,QAA7B;;AACA,KAAA,CAAM,EAAE,CAAC,GAAH,CAAO,CAAC,KAAD,EAAQ,CAAR,EAAW,CAAX,CAAP,CAAN,EAA6B,KAA7B;;AACA,KAAA,CAAM,EAAE,CAAC,GAAH,CAAO,CAAC,KAAD,EAAQ,CAAR,EAAW,CAAX,CAAP,CAAN,EAA6B,KAA7B;;AACA,KAAA,CAAM,EAAE,CAAC,GAAH,CAAO,CAAC,KAAD,EAAQ,CAAR,EAAW,CAAX,CAAP,CAAN,EAA6B,KAA7B;;AAEA,MAAA,CAAO,EAAE,CAAC,GAAH,CAAO,CAAC,KAAD,EAAQ,CAAR,EAAW,CAAX,CAAP,CAAP;;AACA,MAAA,CAAO,EAAE,CAAC,GAAH,CAAO,CAAC,KAAD,EAAQ,CAAR,EAAW,CAAX,CAAP,CAAP;;AACA,KAAA,CAAO,EAAE,CAAC,GAAH,CAAO,CAAC,KAAD,EAAQ,CAAR,EAAW,CAAX,CAAP,CAAP;;AACA,KAAA,CAAO,EAAE,CAAC,GAAH,CAAO,CAAC,KAAD,EAAQ,CAAR,EAAW,CAAX,CAAP,CAAP;;AACA,KAAA,CAAO,EAAE,CAAC,GAAH,CAAO,CAAC,KAAD,EAAQ,CAAR,EAAW,CAAX,CAAP,CAAP",
  "sourcesContent": [
    "# multi-map.test.coffee\r\n\r\nimport {\r\n\tundef, defined, notdefined, LOG,\r\n\t} from '@jdeighan/llutils'\r\nimport * as lib from '@jdeighan/llutils/multi-map'\r\nObject.assign(global, lib)\r\nimport * as lib2 from '@jdeighan/llutils/utest'\r\nObject.assign(global, lib2)\r\nimport {hExprAST} from './multi-map/grammars.js'\r\n\r\n# NOTE: a rule looks like:\r\n# \t{\r\n# \t\ttype: \"rule\"\r\n# \t\thead: \"E\"\r\n# \t\tlParts: [\r\n# \t\t\tnonterminal \"T\"\r\n# \t\t\t]\r\n# \t\t},\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nlRules = [\r\n\thExprAST.lRules[0],\r\n\thExprAST.lRules[1],\r\n\thExprAST.lRules[2],\r\n\t]\r\n\r\nmm = new MultiMap(3)\r\nfor hRule,i in lRules\r\n\tmm.set [hRule, 0, 0], \"rule#{i}\"\r\n\r\nfor hRule,i in lRules\r\n\tequal mm.get([hRule, 0, 0]), \"rule#{i}\"\r\n\tequal mm.get([hRule, 1, 0]), undef\r\n\tequal mm.get([hRule, 0, 1]), undef\r\n\r\nhRule = lRules[1]\r\nmm.set [hRule, 2, 3], \"rule-x\"\r\nequal mm.get([hRule, 0, 0]), \"rule1\"\r\nequal mm.get([hRule, 2, 3]), \"rule-x\"\r\nequal mm.get([hRule, 3, 2]), undef\r\nequal mm.get([hRule, 0, 2]), undef\r\nequal mm.get([hRule, 3, 0]), undef\r\n\r\ntruthy mm.has([hRule, 0, 0])\r\ntruthy mm.has([hRule, 2, 3])\r\nfalsy  mm.has([hRule, 3, 2])\r\nfalsy  mm.has([hRule, 0, 2])\r\nfalsy  mm.has([hRule, 3, 0])\r\n"
  ]
}