{
  "version": 3,
  "file": "peggy-utils.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\peggy-utils.test.coffee"
  ],
  "names": [],
  "mappings": "AAAyB;AAEzB,OAAA;EAAQ,KAAR;EAAe,QAAf;CAAA,MAAA;;AACA,OAAO,CAAA,OAAP,MAAA;;AACA,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB,GAAtB;;AACA,OAAO,CAAA,QAAP,MAAA;;AACA,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB,IAAtB,EANyB;;;;AAWzB,QAAA,CAAS,QAAA,CAAA,CAAA;AACT,MAAA;SAAC,MAAA,GAAS,IAAI,cAAJ,CAAA;AADD,CAAT,EAXyB;;;;AAiBzB,QAAA,CAAS,QAAA,CAAA,CAAA;AACT,MAAA;SAAC,MAAA,GAAS,IAAI,QAAJ,CAAA;AADD,CAAT,EAjByB;;;;AAuBzB,CAAC,CAAA,CAAA,GAAA;AACD,MAAA;EAAC,MAAA,GAAS,SAAA,CAAU,UAAV;EAET,KAAA,CAAM,MAAM,CAAC,QAAP,CAAgB;IACrB,IAAA,EAAM,YADe;IAErB,IAAA,EAAM;EAFe,CAAhB,CAAN,EAGK,CAAA,OAAA,CAHL;EAOA,KAAA,CAAM,MAAM,CAAC,QAAP,CAAgB;IACrB,IAAA,EAAM;EADe,CAAhB,EAEF,CAFE,CAAN,EAEQ,CAAA,QAAA,CAFR;EAMA,KAAA,CAAM,MAAM,CAAC,QAAP,CAAgB;IACrB,IAAA,EAAM;EADe,CAAhB,EAEF,CAFE,CAAN,EAEQ,CAAA,OAAA,CAFR;EAMA,KAAA,CAAM,MAAM,CAAC,QAAP,CAAgB;IACrB,IAAA,EAAM,YADe;IAErB,MAAA,EAAQ;EAFa,CAAhB,EAGF,CAHE,CAAN,EAGQ,CAAA,WAAA,CAHR;EAOA,KAAA,CAAM,MAAM,CAAC,QAAP,CAAgB;IACrB,IAAA,EAAM,YADe;IAErB,IAAA,EAAM;EAFe,CAAhB,EAGF,CAHE,CAAN,EAGQ,CAAA,UAAA,CAHR;EAOA,KAAA,CAAM,MAAM,CAAC,QAAP,CAAgB;IACrB,IAAA,EAAM;EADe,CAAhB,EAEF,CAFE,CAAN,EAEQ,CAAA,UAAA,CAFR;EAMA,KAAA,CAAM,MAAM,CAAC,QAAP,CAAgB;IACrB,IAAA,EAAM;EADe,CAAhB,EAEF,CAFE,CAAN,EAEQ,CAAA,OAAA,CAFR;SAMA,KAAA,CAAM,MAAM,CAAC,QAAP,CAAgB;IACrB,IAAA,EAAM,YADe;IAErB,MAAA,EAAQ;EAFa,CAAhB,EAGF,CAHE,CAAN,EAGQ,CAAA,WAAA,CAHR;AAhDA,CAAD,CAAA,CAAA",
  "sourcesContent": [
    "# peggy-utils.test.coffee\r\n\r\nimport {undef, splitStr} from '@jdeighan/llutils'\r\nimport * as lib from '@jdeighan/llutils/peggy-utils'\r\nObject.assign(global, lib)\r\nimport * as lib2 from '@jdeighan/llutils/utest'\r\nObject.assign(global, lib2)\r\n\r\n# ---------------------------------------------------------------------------\r\n#symbol ByteCodeWriter\r\n\r\nsucceeds () ->\r\n\twriter = new ByteCodeWriter()\r\n\r\n# ---------------------------------------------------------------------------\r\n#symbol OpDumper\r\n\r\nsucceeds () ->\r\n\tdumper = new OpDumper()\r\n\r\n# ---------------------------------------------------------------------------\r\n#symbol \"getTracer(type, inputStr, hVars={})\"\r\n\r\n(() =>\r\n\ttracer = getTracer('advanced')\r\n\r\n\tequal tracer.traceStr({\r\n\t\ttype: 'rule.enter'\r\n\t\trule: 'start'\r\n\t\t}), \"\"\"\r\n\t\t? start\r\n\t\t\"\"\"\r\n\r\n\tequal tracer.traceStr({\r\n\t\ttype: 'rule.fail'\r\n\t\t}, 1), \"\"\"\r\n\t\t└─> FAIL\r\n\t\t\"\"\"\r\n\r\n\tequal tracer.traceStr({\r\n\t\ttype: 'rule.match'\r\n\t\t}, 1), \"\"\"\r\n\t\t└─> YES\r\n\t\t\"\"\"\r\n\r\n\tequal tracer.traceStr({\r\n\t\ttype: 'rule.match'\r\n\t\tresult: 'IDENT'\r\n\t\t}, 1), \"\"\"\r\n\t\t└─> \"IDENT\"\r\n\t\t\"\"\"\r\n\r\n\tequal tracer.traceStr({\r\n\t\ttype: 'rule.enter'\r\n\t\trule: 'start'\r\n\t\t}, 1), \"\"\"\r\n\t\t│  ? start\r\n\t\t\"\"\"\r\n\r\n\tequal tracer.traceStr({\r\n\t\ttype: 'string.fail'\r\n\t\t}, 1), \"\"\"\r\n\t\tx   string\r\n\t\t\"\"\"\r\n\r\n\tequal tracer.traceStr({\r\n\t\ttype: 'rule.match'\r\n\t\t}, 1), \"\"\"\r\n\t\t└─> YES\r\n\t\t\"\"\"\r\n\r\n\tequal tracer.traceStr({\r\n\t\ttype: 'rule.match'\r\n\t\tresult: 'IDENT'\r\n\t\t}, 1), \"\"\"\r\n\t\t└─> \"IDENT\"\r\n\t\t\"\"\"\r\n\r\n\t)()\r\n"
  ]
}