{
  "version": 3,
  "file": "indent.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\indent.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# indent.test.coffee\n\nimport {undef, spaces, tabs} from '@jdeighan/llutils'\nimport * as lib from '@jdeighan/llutils/indent'\nObject.assign(global, lib)\nimport * as lib2 from '@jdeighan/llutils/utest'\nObject.assign(global, lib2)\n\n# ---------------------------------------------------------------------------\n#symbol \"indentLevel(str)\"\n\n(() =>\n\tequal indentLevel('abc'), 0\n\tequal indentLevel('\\tabc'), 1\n\tequal indentLevel('\\t\\tabc'), 2\n\tfails () => indentLevel('\\t abc')\n\tequal indentLevel('abc'), 0\n\tequal indentLevel('\\tabc'), 1\n\tequal indentLevel('\\t\\tabc'), 2\n\tresetOneIndent()\n\t)()\n\n(() =>\n\tequal indentLevel('      abc'), 1\n\tresetOneIndent()\n\t)()\n\n(() =>\n\tequal indentLevel('abc'), 0\n\tequal indentLevel('   abc'), 1\n\tequal indentLevel('      abc'), 2\n\tresetOneIndent()\n\t)()\n\n# ---------------------------------------------------------------------------\n#symbol \"splitLine(line, oneIndent)\"\n\n(() =>\n\tequal splitLine('abc'), [0, 'abc']\n\tequal splitLine('\\t\\tabc'), [2, 'abc']\n\tresetOneIndent()\n\t)()\n\n(() =>\n\tequal splitLine('   abc'), [1, 'abc']\n\tfails () =>  splitLine('\\t\\tabc')\n\tresetOneIndent()\n\t)()\n\n# ---------------------------------------------------------------------------\n#symbol \"indented(input, level, oneIndent)\"\n\n(() =>\n\tequal indented('abc'), '\\tabc'\n\tequal indented('abc', 2), '\\t\\tabc'\n\tresetOneIndent()\n\t)()\n\n(() =>\n\tequal indentLevel('   abc'), 1\n\tequal indented('abc', 2), spaces(6) + 'abc'\n\tresetOneIndent()\n\t)()\n\n(() =>\n\tequal indented('abc', 2), tabs(2) + 'abc'\n\tresetOneIndent()\n\t)()\n\n# --- Test with blocks\n\nequal indented(\"\"\"\n\tfirst line\n\t\\tsecond line\n\t\\t\\tthird line\n\t\"\"\"), \"\"\"\n\t\\tfirst line\n\t\\t\\tsecond line\n\t\\t\\t\\tthird line\n\t\"\"\"\n\nequal indented(\"\"\"\n\tfirst line\n\t\\tsecond line\n\t\\t\\tthird line\n\t\"\"\", 2), \"\"\"\n\t\\t\\tfirst line\n\t\\t\\t\\tsecond line\n\t\\t\\t\\t\\tthird line\n\t\"\"\"\n\n# --- Test with arrays\n\nequal indented([\n\t'first line'\n\t'\\tsecond line'\n\t'\\t\\tthird line'\n\t]), [\n\t'\\tfirst line'\n\t'\\t\\tsecond line'\n\t'\\t\\t\\tthird line'\n\t]\n\nequal indented([\n\t'first line'\n\t'\\tsecond line'\n\t'\\t\\tthird line'\n\t], 2), [\n\t'\\t\\tfirst line'\n\t'\\t\\t\\tsecond line'\n\t'\\t\\t\\t\\tthird line'\n\t]\n\n# ---------------------------------------------------------------------------\n#symbol \"undented(input)\"\n\nequal undented(\"\"\"\n\t\\t\\tabc\n\t\\t\\t\\tdef\n\t\\t\\t\\t\\tghi\n\t\"\"\"), \"\"\"\n\tabc\n\t\\tdef\n\t\\t\\tghi\n\t\"\"\"\n"
  ]
}