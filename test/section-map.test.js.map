{
  "version": 3,
  "file": "section-map.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\section-map.test.coffee"
  ],
  "names": [],
  "mappings": "AAAyB;AAAA,IAAA;;AAEzB,OAAA;EAAQ,KAAR;EAAe,OAAf;EAAwB,MAAxB;CAAA,MAAA;;AACA,OAAA;EAAQ,QAAR;CAAA,MAAA;;AACA,OAAO,CAAA,OAAP,MAAA;;AACA,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB,GAAtB;;AACA,OAAO,CAAA,QAAP,MAAA;;AACA,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB,IAAtB,EAPyB;;;AAWzB,IAAA,GAAO,CAAC,GAAD,EAAM,OAAN,CAAA,GAAA;AAEN,SAAO,CAAA,CAAA,CAAA,CAAI,GAAJ,CAAA,CAAA,CAAA,CAAW,OAAX,CAAA,EAAA,CAAA,CAAuB,GAAvB,CAAA,CAAA;AAFD,EAXkB;;;AAiBzB,CAAC,QAAA,CAAA,CAAA;AACD,MAAA;EAAC,GAAA,GAAM,IAAI,UAAJ,CAAe,CACpB,MADoB,EAEpB,QAFoB,CAAf;EAIN,MAAA,CAAO,GAAG,CAAC,OAAJ,CAAA,CAAP;EACA,KAAA,CAAO,GAAG,CAAC,QAAJ,CAAA,CAAP;EAEA,GAAG,CAAC,OAAJ,CAAY,QAAZ,CAAqB,CAAC,GAAtB,CAA0B,QAA1B;EACA,GAAG,CAAC,OAAJ,CAAY,MAAZ,CAAmB,CAAC,GAApB,CAA0B,aAA1B;EACA,KAAA,CAAO,GAAG,CAAC,OAAJ,CAAA,CAAP;EACA,MAAA,CAAO,GAAG,CAAC,QAAJ,CAAA,CAAP;SAEA,KAAA,CAAM,GAAG,CAAC,QAAJ,CAAA,CAAN,EAAsB,CAAA;MAAA,CAAtB;AAbA,CAAD,CAAA,CAAA,EAjByB;;;AAuCzB,CAAC,QAAA,CAAA,CAAA;AACD,MAAA;EAAC,GAAA,GAAM,IAAI,UAAJ,CAAe,CACpB,SADoB,EAEpB,UAFoB,EAGpB,MAHoB,CAAf;EAKN,MAAA,CAAO,GAAG,CAAC,OAAJ,CAAA,CAAP;EACA,KAAA,CAAO,GAAG,CAAC,QAAJ,CAAA,CAAP;EAEA,GAAG,CAAC,OAAJ,CAAY,MAAZ,CAAmB,CAAC,GAApB,CAA6B,QAA7B;EACA,GAAG,CAAC,OAAJ,CAAY,SAAZ,CAAsB,CAAC,GAAvB,CAA6B,OAA7B;EACA,KAAA,CAAO,GAAG,CAAC,OAAJ,CAAA,CAAP;EACA,MAAA,CAAO,GAAG,CAAC,QAAJ,CAAA,CAAP;SAEA,KAAA,CAAM,GAAG,CAAC,QAAJ,CAAA,CAAN,EAAsB,CAAA;;MAAA,CAAtB;AAdA,CAAD,CAAA,CAAA,EAvCyB;;;;AAgEzB,CAAC,QAAA,CAAA,CAAA;AACD,MAAA,GAAA,EAAA;EAAC,IAAA,GAAO,QAAA,CAAC,IAAD,CAAA;AAAU,WAAO,CAAA,CAAA,CAAG,IAAH,EAAA;EAAjB;EAEP,GAAA,GAAM,IAAI,UAAJ,CAAe,CACpB,MADoB,EAEpB,QAFoB,CAAf,EAGF;IAAC,MAAA,EAAQ;EAAT,CAHE;EAIN,GAAG,CAAC,OAAJ,CAAY,QAAZ,CAAqB,CAAC,GAAtB,CAA0B,QAA1B;EACA,GAAG,CAAC,OAAJ,CAAY,MAAZ,CAAmB,CAAC,GAApB,CAA0B,aAA1B;SAEA,KAAA,CAAM,GAAG,CAAC,QAAJ,CAAa,KAAb,CAAN,EAA2B,CAAA;OAAA,CAA3B;AAVA,CAAD,CAAA,CAAA,EAhEyB;;;AAmFzB,CAAC,QAAA,CAAA,CAAA;AACD,MAAA,SAAA,EAAA,KAAA,EAAA,GAAA,EAAA;EAAC,IAAA,GAAO,QAAA,CAAC,IAAD,CAAA;AAAU,WAAO,CAAA,CAAA,CAAG,IAAH,EAAA;EAAjB;EACP,SAAA,GAAY,QAAA,CAAC,IAAD,CAAA;AAAU,WAAO,IAC3B,CAAC,OAD0B,CAClB,KADkB,EACX,MADW,CAE3B,CAAC,OAF0B,CAElB,MAFkB,EAEV,OAFU;EAAjB;EAGZ,KAAA,GAAQ;IACP,MAAA,EAAQ,IADD;IAEP,IAAA,EAAM;EAFC;EAKR,GAAA,GAAM,IAAI,UAAJ,CAAe,CACpB,MADoB,EAEpB,QAFoB,CAAf,EAGF,KAHE;EAIN,GAAG,CAAC,OAAJ,CAAY,QAAZ,CAAqB,CAAC,GAAtB,CAA0B,QAA1B;EACA,GAAG,CAAC,OAAJ,CAAY,MAAZ,CAAmB,CAAC,GAApB,CAA0B,aAA1B;SAEA,KAAA,CAAM,GAAG,CAAC,QAAJ,CAAa,KAAb,CAAN,EAA2B,CAAA;OAAA,CAA3B;AAjBA,CAAD,CAAA,CAAA,EAnFyB;;;AA6GzB,CAAC,QAAA,CAAA,CAAA;AACD,MAAA,SAAA,EAAA,KAAA,EAAA,GAAA,EAAA;EAAC,IAAA,GAAO,QAAA,CAAC,IAAD,CAAA;AAAU,WAAO,CAAA,CAAA,CAAG,IAAH,EAAA;EAAjB;EACP,SAAA,GAAY,QAAA,CAAC,IAAD,CAAA;AAAU,WAAO,IAC3B,CAAC,OAD0B,CAClB,KADkB,EACX,MADW,CAE3B,CAAC,OAF0B,CAElB,MAFkB,EAEV,OAFU;EAAjB;EAGZ,KAAA,GAAQ;IACP,IAAA,EAAM,IADC;IAEP,IAAA,EAAM,SAFC;IAGP,MAAA,EAAQ,QAAA,CAAC,KAAD,CAAA;AAAW,aAAO,IAAA,CAAK,QAAL,EAAe,KAAf;IAAlB;EAHD;EAMR,GAAA,GAAM,IAAI,UAAJ,CAAe,CACpB,MADoB,EAEpB,CACC,QADD,EAEC,MAFD,CAFoB,CAAf,EAMF,KANE;EAON,GAAG,CAAC,OAAJ,CAAY,MAAZ,CAAmB,CAAC,GAApB,CAAyB,QAAzB;EACA,GAAG,CAAC,OAAJ,CAAY,MAAZ,CAAmB,CAAC,GAApB,CAAyB,aAAzB;SAEA,KAAA,CAAM,GAAG,CAAC,QAAJ,CAAa,KAAb,CAAN,EAA2B,CAAA;wBAAA,CAA3B;AArBA,CAAD,CAAA,CAAA,EA7GyB;;;AA2IzB,CAAC,QAAA,CAAA,CAAA;AACD,MAAA;EAAC,GAAA,GAAM,IAAI,UAAJ,CAAe,CACpB,MADoB,EAEpB,QAFoB,CAAf;EAKN,GAAG,CAAC,OAAJ,CAAY,QAAZ,CAAqB,CAAC,GAAtB,CAA0B,QAA1B;EACA,GAAG,CAAC,OAAJ,CAAY,MAAZ,CAAmB,CAAC,GAApB,CAA0B,gBAA1B;SAEA,KAAA,CAAM,GAAG,CAAC,QAAJ,CAAA,CAAN,EAAsB,CAAA;MAAA,CAAtB;AATA,CAAD,CAAA,CAAA,EA3IyB;;;AA6JzB,CAAC,QAAA,CAAA,CAAA;AAED,MAAA;EAAC,GAAA,GAAM,IAAI,UAAJ,CAAe,CACpB,MADoB,EAEpB,CACC,QADD,EAEC,SAFD,EAGC,MAHD,CAFoB,CAAf;EASN,GAAG,CAAC,OAAJ,CAAY,MAAZ,CAAmB,CAAC,GAApB,CAA6B,QAA7B;EACA,GAAG,CAAC,OAAJ,CAAY,SAAZ,CAAsB,CAAC,GAAvB,CAA6B,gBAA7B;EACA,GAAG,CAAC,OAAJ,CAAY,MAAZ,CAAmB,CAAC,GAApB,CAA6B,gBAA7B;EAEA,KAAA,CAAM,GAAG,CAAC,QAAJ,CAAA,CAAN,EAAsB,CAAA;;MAAA,CAAtB;SAMA,KAAA,CAAM,GAAG,CAAC,QAAJ,CAAa,QAAb,CAAN,EAA8B,CAAA;MAAA,CAA9B;AArBA,CAAD,CAAA,CAAA,EA7JyB;;;AA2LzB,CAAC,QAAA,CAAA,CAAA;AAED,MAAA;EAAC,GAAA,GAAM,IAAI,UAAJ,CAAe,CACpB,MADoB,EAEpB,CACC,QADD,EAEC,SAFD,EAGC,YAHD,EAIC,MAJD,CAFoB,CAAf;EAUN,GAAG,CAAC,OAAJ,CAAY,SAAZ,CAAsB,CAAC,GAAvB,CAA4B,UAA5B;EACA,GAAG,CAAC,OAAJ,CAAY,MAAZ,CAAmB,CAAC,GAApB,CAA4B,CAA5B,EAA+B,QAA/B;EACA,GAAG,CAAC,OAAJ,CAAY,SAAZ,CAAsB,CAAC,GAAvB,CAA4B,CAA5B,EAA+B,gBAA/B;EACA,GAAG,CAAC,OAAJ,CAAY,MAAZ,CAAmB,CAAC,GAApB,CAA4B,kBAA5B;EACA,GAAG,CAAC,OAAJ,CAAY,SAAZ,CAAsB,CAAC,GAAvB,CAA4B,CAA5B,EAA+B,SAA/B;EACA,GAAG,CAAC,OAAJ,CAAY,MAAZ,CAAmB,CAAC,GAApB,CAA4B,gBAA5B;EACA,GAAG,CAAC,OAAJ,CAAY,MAAZ,CAAmB,CAAC,GAApB,CAA4B,CAA5B,EAA+B,YAA/B;EACA,GAAG,CAAC,OAAJ,CAAY,MAAZ,CAAmB,CAAC,GAApB,CAA4B,WAA5B;EAEA,KAAA,CAAM,GAAG,CAAC,QAAJ,CAAA,CAAN,EAAsB,CAAA;;;;;;;;SAAA,CAAtB;SAYA,KAAA,CAAM,GAAG,CAAC,QAAJ,CAAa,QAAb,CAAN,EAA8B,CAAA;;;;;;SAAA,CAA9B;AAjCA,CAAD,CAAA,CAAA,EA3LyB;;;AA0OzB,CAAC,QAAA,CAAA,CAAA;AAED,MAAA,KAAA,EAAA,GAAA,EAAA;EAAC,KAAA,GAAQ;IACP,MAAA,EAAQ,QAAA,CAAC,KAAD,CAAA;AAAW,aAAO,CAAA;AAAA,CAAA,CAEvB,QAAA,CAAS,KAAT,CAFuB,CAAA;SAAA;IAAlB,CADD;IAMP,KAAA,EAAQ,QAAA,CAAC,KAAD,CAAA;AAAW,aAAO,CAAA;AAAA,CAAA,CAEvB,QAAA,CAAS,KAAT,CAFuB,CAAA;QAAA;IAAlB;EAND;EAaR,GAAA,GAAM,IAAI,UAAJ,CAAe,CACpB,MADoB,EAEpB,CACC,QADD,EAEC,SAFD,EAGC,UAHD,EAIC,CACC,YADD,EAEC,SAFD,EAGC,MAHD,CAJD,CAFoB,EAYpB,OAZoB,CAAf,EAaF,KAbE;EAeN,IAAA,GAAO,GAAG,CAAC;EACX,GAAG,CAAC,OAAJ,CAAY,OAAZ,CAAoB,CAAC,GAArB,CAA2B,KAA3B,EAAkC,eAAlC,EAAmD,MAAnD;EACA,GAAG,CAAC,OAAJ,CAAY,MAAZ,CAAmB,CAAC,GAApB,CAA2B,QAA3B;EACA,GAAG,CAAC,OAAJ,CAAY,SAAZ,CAAsB,CAAC,GAAvB,CAA2B,gBAA3B;EACA,GAAG,CAAC,OAAJ,CAAY,MAAZ,CAAmB,CAAC,GAApB,CAA2B,kBAA3B;EACA,GAAG,CAAC,OAAJ,CAAY,SAAZ,CAAsB,CAAC,GAAvB,CAA2B,SAA3B;EACA,GAAG,CAAC,OAAJ,CAAY,MAAZ,CAAmB,CAAC,GAApB,CAA2B,gBAA3B;EACA,GAAG,CAAC,OAAJ,CAAY,MAAZ,CAAmB,CAAC,GAApB,CAA2B,YAA3B;EAEA,KAAA,CAAM,GAAG,CAAC,QAAJ,CAAA,CAAN,EAAsB,CAAA;;;;;;;;;;;;;QAAA,CAAtB;EAiBA,KAAA,CAAM,GAAG,CAAC,QAAJ,CAAa,QAAb,CAAN,EAA8B,CAAA;;;;;;SAAA,CAA9B;EAUA,KAAA,CAAM,GAAG,CAAC,QAAJ,CAAa,YAAb,CAAN,EAAkC,CAAA;UAAA,CAAlC;SAKA,KAAA,CAAM,GAAG,CAAC,QAAJ,CAAa,OAAb,CAAN,EAA6B,CAAA;;;;QAAA,CAA7B;AAvEA,CAAD,CAAA,CAAA,EA1OyB;;;AA6TzB,CAAC,QAAA,CAAA,CAAA;AAED,MAAA,OAAA,EAAA;EAAC,OAAA,GAAU,IAAI,UAAJ,CAAe;IACxB,MADwB;IAExB;MACC,QADD;MAEC,SAFD;MAGC,UAHD;MAIC,QAJD;MAKC,QALD;MAMC,MAND;MAOC,SAPD;MAQC,WARD;MASC,MATD;KAFwB;IAaxB,OAbwB;GAAf;EAgBV,CAAA,GAAI,IAAI,UAAJ,CAAA;EACJ,CAAC,CAAC,cAAF,GAAmB,QAAA,CAAC,KAAD,CAAA;AACpB,QAAA,SAAA,EAAA,GAAA,EAAA;IAAE,SAAA,GAAY;AACZ;IAAA,KAAA,cAAA;MACC,SAAS,CAAC,IAAV,CAAe,OAAO,CAAC,IAAvB;IADD;AAEA,WAAO,OAAA,CAAQ,SAAR;EAJW,EAjBpB;;EAyBC,CAAC,CAAC,KAAF,CAAQ,CAAC,QAAD,EAAU,QAAV,CAAR,EAA6B,CAAA;MAAA,CAA7B,EAzBD;;SAgCC,CAAC,CAAC,KAAF,CAAQ,QAAR,EAAkB,CAAA;;;;;;IAAA,CAAlB;AAlCA,CAAD,CAAA,CAAA",
  "sourcesContent": [
    "# section-map.test.coffee\n\nimport {undef, toBlock, assert} from '@jdeighan/llutils'\nimport {indented} from '@jdeighan/llutils/indent'\nimport * as lib from '@jdeighan/llutils/section-map'\nObject.assign(global, lib)\nimport * as lib2 from '@jdeighan/llutils/utest'\nObject.assign(global, lib2)\n\n# ---------------------------------------------------------------------------\n\nelem = (tag, content) =>\n\n\treturn \"<#{tag}>#{content}</#{tag}>\"\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\tmap = new SectionMap([\n\t\t'html'\n\t\t'script'\n\t\t])\n\ttruthy map.isEmpty()\n\tfalsy  map.nonEmpty()\n\n\tmap.section('script').add \"x = 42\"\n\tmap.section('html').add   \"<p>para</p>\"\n\tfalsy  map.isEmpty()\n\ttruthy map.nonEmpty()\n\n\tequal map.getBlock(), \"\"\"\n\t\t<p>para</p>\n\t\tx = 42\n\t\t\"\"\"\n\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\tmap = new SectionMap([\n\t\t'startup'\n\t\t'# |||| ='\n\t\t'code'\n\t\t])\n\ttruthy map.isEmpty()\n\tfalsy  map.nonEmpty()\n\n\tmap.section('code').add      \"x = 42\"\n\tmap.section('startup').add   \"n = 3\"\n\tfalsy  map.isEmpty()\n\ttruthy map.nonEmpty()\n\n\tequal map.getBlock(), \"\"\"\n\t\tn = 3\n\t\t# |||| =\n\t\tx = 42\n\t\t\"\"\"\n\n\t)()\n\n# ---------------------------------------------------------------------------\n# --- Test processing\n\n(() ->\n\ttoJS = (line) -> return \"#{line};\"\n\n\tmap = new SectionMap([\n\t\t'html'\n\t\t'script'\n\t\t], {script: toJS})\n\tmap.section('script').add \"x = 42\"\n\tmap.section('html').add   \"<p>para</p>\"\n\n\tequal map.getBlock(undef), \"\"\"\n\t\t<p>para</p>\n\t\tx = 42;\n\t\t\"\"\"\n\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\ttoJS = (line) -> return \"#{line};\"\n\taddSpaces = (line) -> return line \\\n\t\t\t.replace('<p>', '<p> ') \\\n\t\t\t.replace('</p>', ' </p>')\n\thProc = {\n\t\tscript: toJS\n\t\thtml: addSpaces\n\t\t}\n\n\tmap = new SectionMap([\n\t\t'html'\n\t\t'script'\n\t\t], hProc)\n\tmap.section('script').add \"x = 42\"\n\tmap.section('html').add   \"<p>para</p>\"\n\n\tequal map.getBlock(undef), \"\"\"\n\t\t<p> para </p>\n\t\tx = 42;\n\t\t\"\"\"\n\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\ttoJS = (line) -> return \"#{line};\"\n\taddSpaces = (line) -> return line \\\n\t\t\t.replace('<p>', '<p> ') \\\n\t\t\t.replace('</p>', ' </p>')\n\thProc = {\n\t\tcode: toJS\n\t\thtml: addSpaces\n\t\tScript: (block) -> return elem('script', block)\n\t\t}\n\n\tmap = new SectionMap([\n\t\t'html'\n\t\t[\n\t\t\t'Script'\n\t\t\t'code'\n\t\t\t]\n\t\t], hProc)\n\tmap.section('code').add  \"x = 42\"\n\tmap.section('html').add  \"<p>para</p>\"\n\n\tequal map.getBlock(undef), \"\"\"\n\t\t<p> para </p>\n\t\t<script>x = 42;</script>\n\t\t\"\"\"\n\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\tmap = new SectionMap([\n\t\t'html'\n\t\t'script'\n\t\t])\n\n\tmap.section('script').add \"x = 42\"\n\tmap.section('html').add   \"<p> hello </p>\"\n\n\tequal map.getBlock(), \"\"\"\n\t\t<p> hello </p>\n\t\tx = 42\n\t\t\"\"\"\n\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\n\tmap = new SectionMap([\n\t\t'html'\n\t\t[\n\t\t\t'Script'\n\t\t\t'startup'\n\t\t\t'code'\n\t\t\t]\n\t\t])\n\n\tmap.section('code').add      \"x = 42\"\n\tmap.section('startup').add   \"LOG 'starting'\"\n\tmap.section('html').add      \"<p> hello </p>\"\n\n\tequal map.getBlock(), \"\"\"\n\t\t<p> hello </p>\n\t\tLOG 'starting'\n\t\tx = 42\n\t\t\"\"\"\n\n\tequal map.getBlock('Script'), \"\"\"\n\t\tLOG 'starting'\n\t\tx = 42\n\t\t\"\"\"\n\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\n\tmap = new SectionMap([\n\t\t'html'\n\t\t[\n\t\t\t'Script'\n\t\t\t'startup'\n\t\t\t'\\t# |||| ='\n\t\t\t'code'\n\t\t\t]\n\t\t])\n\n\tmap.section('startup').add  '<script>'\n\tmap.section('code').add     1, \"x = 42\"\n\tmap.section('startup').add  1, \"LOG 'starting'\"\n\tmap.section('html').add     \"<h1> title </h1>\"\n\tmap.section('startup').add  1, \"y = 4*x\"\n\tmap.section('html').add     \"<p> hello </p>\"\n\tmap.section('code').add     1, \"LOG 'Done'\"\n\tmap.section('code').add     \"</script>\"\n\n\tequal map.getBlock(), \"\"\"\n\t\t<h1> title </h1>\n\t\t<p> hello </p>\n\t\t<script>\n\t\t\tLOG 'starting'\n\t\t\ty = 4*x\n\t\t\t# |||| =\n\t\t\tx = 42\n\t\t\tLOG 'Done'\n\t\t</script>\n\t\t\"\"\"\n\n\tequal map.getBlock('Script'), \"\"\"\n\t\t<script>\n\t\t\tLOG 'starting'\n\t\t\ty = 4*x\n\t\t\t# |||| =\n\t\t\tx = 42\n\t\t\tLOG 'Done'\n\t\t</script>\n\t\t\"\"\"\n\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\n\thProc = {\n\t\tScript: (block) -> return \"\"\"\n\t\t\t<script>\n\t\t\t#{indented(block)}\n\t\t\t</script>\n\t\t\t\"\"\"\n\t\tstyle:  (block) -> return \"\"\"\n\t\t\t<style>\n\t\t\t#{indented(block)}\n\t\t\t</style>\n\t\t\t\"\"\"\n\t\t}\n\n\tmap = new SectionMap([\n\t\t'html'\n\t\t[\n\t\t\t'Script'\n\t\t\t'startup'\n\t\t\t'# |||| ='\n\t\t\t[\n\t\t\t\t'NonStartup'\n\t\t\t\t'imports'\n\t\t\t\t'code'\n\t\t\t\t]\n\t\t\t]\n\t\t'style'\n\t\t], hProc)\n\n\tsect = map.hSections\n\tmap.section('style').add   \"p {\", \"...color: red\", \"...}\"\n\tmap.section('code').add    \"x = 42\"\n\tmap.section('startup').add \"LOG 'starting'\"\n\tmap.section('html').add    \"<h1> title </h1>\"\n\tmap.section('startup').add \"y = 4*x\"\n\tmap.section('html').add    \"<p> hello </p>\"\n\tmap.section('code').add    \"LOG 'Done'\"\n\n\tequal map.getBlock(), \"\"\"\n\t\t<h1> title </h1>\n\t\t<p> hello </p>\n\t\t<script>\n\t\t\tLOG 'starting'\n\t\t\ty = 4*x\n\t\t\t# |||| =\n\t\t\tx = 42\n\t\t\tLOG 'Done'\n\t\t</script>\n\t\t<style>\n\t\t\tp {\n\t\t\t...color: red\n\t\t\t...}\n\t\t</style>\n\t\t\"\"\"\n\n\tequal map.getBlock('Script'), \"\"\"\n\t\t<script>\n\t\t\tLOG 'starting'\n\t\t\ty = 4*x\n\t\t\t# |||| =\n\t\t\tx = 42\n\t\t\tLOG 'Done'\n\t\t</script>\n\t\t\"\"\"\n\n\tequal map.getBlock('NonStartup'), \"\"\"\n\t\tx = 42\n\t\tLOG 'Done'\n\t\t\"\"\"\n\n\tequal map.getBlock('style'), \"\"\"\n\t\t<style>\n\t\t\tp {\n\t\t\t...color: red\n\t\t\t...}\n\t\t</style>\n\t\t\"\"\"\n\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\n\tsectMap = new SectionMap([\n\t\t'html'\n\t\t[\n\t\t\t'Script'    # all this gets processed by CoffeeScript\n\t\t\t'startup'\n\t\t\t'# |||| ='  # we can split up the script code here\n\t\t\t'export'\n\t\t\t'import'\n\t\t\t'vars'\n\t\t\t'onmount'\n\t\t\t'ondestroy'\n\t\t\t'code'\n\t\t\t]\n\t\t'style'\n\t\t])\n\n\tu = new UnitTester()\n\tu.transformValue = (query) ->\n\t\tlSections = []\n\t\tfor section from sectMap.allSections(query)\n\t\t\tlSections.push section.name\n\t\treturn toBlock(lSections)\n\n\t# ------------------------------------------------------------------------\n\n\tu.equal ['export','import'], \"\"\"\n\t\texport\n\t\timport\n\t\t\"\"\"\n\n\t# ------------------------------------------------------------------------\n\n\tu.equal 'Script', \"\"\"\n\t\tstartup\n\t\texport\n\t\timport\n\t\tvars\n\t\tonmount\n\t\tondestroy\n\t\tcode\n\t\t\"\"\"\n\n\t)()\n"
  ]
}