{
  "version": 3,
  "file": "fs.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\fs.test.coffee"
  ],
  "names": [],
  "mappings": "AAAgB;AAAA,IAAA;;AAEhB,OAAA;EACC,KADD;EACQ,SADR;EACmB,SADnB;EAC8B,KAD9B;CAAA,MAAA;;AAGA,OAAO,CAAA,OAAP,MAAA;;AACA,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB,GAAtB;;AACA,OAAO,CAAA,QAAP,MAAA;;AACA,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB,IAAtB,EARgB;;;;AAahB,KAAA,CAAM,OAAA,CAAQ,kBAAR,CAAN,EAAmC,MAAnC;;AACA,KAAA,CAAM,OAAA,CAAQ,sBAAR,CAAN,EAAuC,MAAvC;;AACA,KAAA,CAAM,OAAA,CAAQ,2BAAR,CAAN,EAA4C,MAA5C,EAfgB;;;;AAoBhB,KAAA,CAAM,QAAA,CAAS,kBAAT,CAAN,EAAoC,MAApC;;AACA,KAAA,CAAM,QAAA,CAAS,sBAAT,CAAN,EAAwC,MAAxC;;AACA,KAAA,CAAM,QAAA,CAAS,2BAAT,CAAN,EAA6C,WAA7C,EAtBgB;;;;AA2BhB,KAAA,CAAM,SAAA,CAAU,UAAV,CAAN,EAA6B,SAA7B;;AACA,KAAA,CAAM,SAAA,CAAU,sBAAV,CAAN,EAAyC,qBAAzC,EA5BgB;;;;AAiChB,KAAA,CAAM,MAAA,CAAO,GAAP,EAAY,MAAZ,CAAN,EAA2B,6BAA3B;;AACA,KAAA,CAAM,MAAA,CAAO,UAAP,EAAmB,MAAnB,CAAN,EAAkC,cAAlC,EAlCgB;;;;AAuChB,MAAA,CAAO,QAAA,CACN,uBADM,EAEN,4CAFM,CAAP,EAvCgB;;;;AA+ChB,KAAA,CAAM,OAAA,CAAQ,GAAR,EAAa,MAAb,CAAN,EAA4B,MAA5B,EA/CgB;;;;AAoDhB,CAAC,CAAA,CAAA,GAAA;AACD,MAAA;EAAC,GAAA,GAAM;EAEN,MAAA,CAAO,KAAA,CAAM,GAAN,CAAP;SACA,MAAA,CAAO,KAAA,CAAM,MAAA,CAAO,GAAP,EAAY,KAAZ,CAAN,CAAP;AAJA,CAAD,CAAA,CAAA,EApDgB;;;;AA8DhB,CAAC,CAAA,CAAA,GAAA;AACD,MAAA;EAAC,GAAA,GAAM;SAEN,MAAA,CAAO,MAAA,CAAO,MAAA,CAAO,GAAP,EAAY,UAAZ,CAAP,CAAP;AAHA,CAAD,CAAA,CAAA,EA9DgB;;;;AAuEhB,CAAC,CAAA,CAAA,GAAA;AACD,MAAA;EAAC,GAAA,GAAM;SAEN,IAAA,CAAK,YAAA,CAAa,oBAAb,CAAL,EAAyC;IACvC,IAAA,EAAM;EADiC,CAAzC;AAHA,CAAD,CAAA,CAAA,EAvEgB;;;;AAkFhB,CAAC,CAAA,CAAA,GAAA;AACD,MAAA;EAAC,GAAA,GAAM;EAEN,KAAA,CAAM,QAAA,CAAS,MAAA,CAAO,GAAP,EAAY,KAAZ,CAAT,CAAN,EAAoC,KAApC;EACA,KAAA,CAAM,QAAA,CAAS,MAAA,CAAO,GAAP,EAAY,UAAZ,CAAT,CAAN,EAAyC,MAAzC;SACA,KAAA,CAAM,QAAA,CAAS,MAAA,CAAO,GAAP,EAAY,aAAZ,CAAT,CAAN,EAA4C,SAA5C;AALA,CAAD,CAAA,CAAA,EAlFgB;;;;AA6FhB,IAAA,CAAK,SAAA,CAAU,oBAAV,CAAL,EAAsC;EACrC,QAAA,EAAU,yCAD2B;EAErC,IAAA,EAAM;AAF+B,CAAtC;;AAKA,IAAA,CAAK,SAAA,CAAU,yBAAV,CAAL,EAA2C;EAC1C,IAAA,EAAM,8CADoC;EAE1C,QAAA,EAAU,8CAFgC;EAG1C,IAAA,EAAM,eAHoC;EAI1C,QAAA,EAAU,eAJgC;EAK1C,IAAA,EAAM,MALoC;EAM1C,IAAA,EAAM,WANoC;EAO1C,GAAA,EAAK,MAPqC;EAQ1C,OAAA,EAAS,MARiC;EAS1C,IAAA,EAAM;AAToC,CAA3C,EAlGgB;;;;AAiHhB,CAAC,CAAA,CAAA,GAAA;AACD,MAAA,QAAA,EAAA,SAAA,EAAA,IAAA,EAAA,MAAA,EAAA;EAAC,QAAA,GAAW;EACX,CAAA,CAAC,SAAD,EAAY,MAAZ,EAAoB,MAApB,CAAA,GAA8B,YAAA,CAAa,QAAb,CAA9B;EACA,IAAA,GAAO,MAAA,CAAA;EAEP,KAAA,CAAM,SAAN,EAAiB;IAChB,KAAA,EAAO,MADS;IAEhB,KAAA,EAAO;EAFS,CAAjB;EAIA,KAAA,CAAM,OAAO,MAAb,EAAqB,UAArB;EACA,KAAA,CAAM,MAAN,EAAc,CAAd,EATD;;EAYC,KAAA,CAAM,IAAI,CAAC,IAAL,CAAA,CAAN,EAAmB;IAClB,IAAA,EAAM,KADY;IAElB,KAAA,EAAO;EAFW,CAAnB;EAIA,KAAA,CAAM,IAAI,CAAC,IAAL,CAAA,CAAN,EAAmB;IAClB,IAAA,EAAM,KADY;IAElB,KAAA,EAAO;EAFW,CAAnB;SAIA,KAAA,CAAM,IAAI,CAAC,IAAL,CAAA,CAAN,EAAmB;IAClB,IAAA,EAAM,IADY;IAElB,KAAA,EAAO;EAFW,CAAnB;AArBA,CAAD,CAAA,CAAA;;AA2BA,CAAC,CAAA,CAAA,GAAA;AACD,MAAA,QAAA,EAAA,SAAA,EAAA;EAAC,QAAA,GAAW;EACX,CAAA,CAAC,SAAD,EAAY,MAAZ,CAAA,GAAsB,YAAA,CAAa,QAAb,CAAtB;EACA,KAAA,CAAM,OAAO,MAAb,EAAqB,UAArB,EAFD;;SAKC,KAAA,CAAM,SAAA,CAAU,MAAV,CAAN,EAAyB,CACxB,KADwB,EAExB,KAFwB,CAAzB;AANA,CAAD,CAAA,CAAA;;AAYA,CAAC,CAAA,CAAA,GAAA;AACD,MAAA,QAAA,EAAA,SAAA,EAAA;EAAC,QAAA,GAAW;EACX,CAAA,CAAC,SAAD,EAAY,MAAZ,CAAA,GAAsB,YAAA,CAAa,QAAb,CAAtB;EACA,KAAA,CAAM,OAAO,MAAb,EAAqB,UAArB,EAFD;;SAKC,KAAA,CAAM,SAAA,CAAU,MAAV,CAAN,EAAyB,CAAA;GAAA,CAAzB;AANA,CAAD,CAAA,CAAA,EAxJgB;;;;AAuKhB,KAAA,CAAM,MAAA,CAAO,MAAA,CAAO,gBAAP,CAAP,CAAN,EAAwC,MAAA,CAAO,wBAAP,CAAxC,EAvKgB;;;;AA4KhB,MAAA,GAAS,KAAK,CAAC,IAAN,CAAW,UAAA,CAAW,UAAX,CAAX,EAAmC,CAAC,CAAD,CAAA,GAAA;SAAO,OAAA,CAAQ,CAAR;AAAP,CAAnC;;AACT,KAAA,CAAM,MAAN,EAAc,CAAC,UAAD,EAAa,aAAb,CAAd,EA7KgB;;;;AAkLhB,CAAC,KAAA,CAAA,CAAA,GAAA;AACD,MAAA;EAAC,MAAA,GAAS,IAAI,cAAJ,CAAA;EACT,MAAM,CAAC,OAAP,CAAe,KAAf;EACA,MAAM,CAAC,OAAP,CAAe,KAAf;EACA,MAAM,CAAC,OAAP,CAAe,KAAf;EACA,MAAM,CAAC,KAAP,CAAa,uBAAb;EAEA,MAAM,KAAA,CAAM,CAAN;SACN,MAAA,CAAO,MAAA,CAAO,uBAAP,CAAP;AARA,CAAD,CAAA,CAAA",
  "sourcesContent": [
    "# fs.test.coffee\n\nimport {\n\tundef, gen2array, gen2block, sleep,\n\t} from '@jdeighan/llutils'\nimport * as lib from '@jdeighan/llutils/fs'\nObject.assign(global, lib)\nimport * as lib2 from '@jdeighan/llutils/utest'\nObject.assign(global, lib2)\n\n# ---------------------------------------------------------------------------\n#symbol \"fileExt(path)\"\n\nequal fileExt(\"C:/temp/file.txt\"), \".txt\"\nequal fileExt(\"c:\\\\temp/to/file.txt\"), \".txt\"\nequal fileExt(\"c:\\\\temp/to/file.flag.txt\"), \".txt\"\n\n# ---------------------------------------------------------------------------\n#symbol \"fileStub(path)\"\n\nequal fileStub(\"C:/temp/file.txt\"), \"file\"\nequal fileStub(\"c:\\\\temp/to/file.txt\"), \"file\"\nequal fileStub(\"c:\\\\temp/to/file.flag.txt\"), \"file.flag\"\n\n# ---------------------------------------------------------------------------\n#symbol \"normalize(path)\"\n\nequal normalize(\"C:\\\\temp\"), \"c:/temp\"\nequal normalize(\"c:\\\\temp/to/file.txt\"), \"c:/temp/to/file.txt\"\n\n# ---------------------------------------------------------------------------\n#symbol \"mkpath(...lParts)\"\n\nequal mkpath('.', 'test'), \"c:/Users/johnd/llutils/test\"\nequal mkpath('C:\\\\temp', 'work'), \"c:/temp/work\"\n\n# ---------------------------------------------------------------------------\n#symbol \"samefile(file1, file2)\"\n\ntruthy samefile(\n\t\"./test/fs.test.coffee\",\n\t\"c:/Users/johnd/llutils/test/fs.test.coffee\"\n\t)\n\n# ---------------------------------------------------------------------------\n#symbol \"relpath(...lParts)\"\n\nequal relpath(\".\", \"temp\"), \"temp\"\n\n# ---------------------------------------------------------------------------\n#symbol \"isDir(dirPath)\"\n\n(() =>\n\tdir = \"c:/Users/johnd/llutils/test/fs\"\n\n\ttruthy isDir(dir)\n\ttruthy isDir(mkpath(dir, 'dir'))\n\t)()\n\n# ---------------------------------------------------------------------------\n#symbol \"isFile(filePath)\"\n\n(() =>\n\tdir = \"c:/Users/johnd/llutils/test/fs\"\n\n\ttruthy isFile(mkpath(dir, 'test.txt'))\n\t)()\n\n# ---------------------------------------------------------------------------\n#symbol \"getFileStats(filePath)\"\n\n(() =>\n\tdir = \"c:/Users/johnd/llutils/test/fs\"\n\n\tlike getFileStats(\"./test/fs/test.txt\"), {\n\t\t\tsize: 35\n\t\t\t}\n\t)()\n\n# ---------------------------------------------------------------------------\n#symbol \"pathType(path)\"\n\n(() =>\n\tdir = \"c:/Users/johnd/llutils/test/fs\"\n\n\tequal pathType(mkpath(dir, 'dir')), 'dir'\n\tequal pathType(mkpath(dir, 'test.txt')), 'file'\n\tequal pathType(mkpath(dir, 'nowhere.txt')), 'missing'\n\t)()\n\n# ---------------------------------------------------------------------------\n#symbol \"parsePath(filePath)\"\n\nlike parsePath(\"./test/fs/test.txt\"), {\n\tfilePath: \"c:/Users/johnd/llutils/test/fs/test.txt\"\n\tsize: 35\n\t}\n\nlike parsePath('./test/fs/file.test.txt'), {\n\tpath: 'c:/Users/johnd/llutils/test/fs/file.test.txt'\n\tfilePath: 'c:/Users/johnd/llutils/test/fs/file.test.txt'\n\tbase: 'file.test.txt'\n\tfileName: 'file.test.txt'\n\ttype: 'file'\n\tstub: 'file.test'\n\text: '.txt'\n\tpurpose: 'test'\n\tsize: 35\n\t}\n\n# ---------------------------------------------------------------------------\n#symbol \"readTextFile(filePath)\"\n\n(() =>\n\tfilePath = './test/fs/meta.txt'\n\t{hMetaData, reader, nLines} = readTextFile(filePath)\n\titer = reader()\n\n\tequal hMetaData, {\n\t\tfName: 'John'\n\t\tlName: 'Deighan'\n\t\t}\n\tequal typeof reader, 'function'\n\tequal nLines, 4\n\n\t# --- test the reader\n\tequal iter.next(), {\n\t\tdone: false\n\t\tvalue: 'abc'\n\t\t}\n\tequal iter.next(), {\n\t\tdone: false\n\t\tvalue: 'def'\n\t\t}\n\tequal iter.next(), {\n\t\tdone: true\n\t\tvalue: undef\n\t\t}\n\t)()\n\n(() =>\n\tfilePath = './test/fs/meta.txt'\n\t{hMetaData, reader} = readTextFile(filePath)\n\tequal typeof reader, 'function'\n\n\t# --- test the reader\n\tequal gen2array(reader), [\n\t\t'abc'\n\t\t'def'\n\t\t]\n\t)()\n\n(() =>\n\tfilePath = './test/fs/meta.txt'\n\t{hMetaData, reader} = readTextFile(filePath)\n\tequal typeof reader, 'function'\n\n\t# --- test the reader\n\tequal gen2block(reader), \"\"\"\n\t\tabc\n\t\tdef\n\t\t\"\"\"\n\t)()\n\n# ---------------------------------------------------------------------------\n#symbol \"pathTo(fileName)\"\n\nequal mkpath(pathTo('llutils.coffee')), mkpath(\"src/lib/llutils.coffee\")\n\n# ---------------------------------------------------------------------------\n#symbol \"allPathsTo(fileName)\"\n\nlPaths = Array.from(allPathsTo('.symbols'), (x) => relpath(x))\nequal lPaths, ['.symbols', '../.symbols']\n\n# ---------------------------------------------------------------------------\n#symbol \"TextFileWriter\"\n\n(() =>\n\twriter = new TextFileWriter()\n\twriter.writeln('abc')\n\twriter.writeln('def')\n\twriter.writeln('ghi')\n\twriter.close('./test/fs/temp123.txt')\n\n\tawait sleep(2)\n\ttruthy isFile('./test/fs/temp123.txt')\n\t)()\n"
  ]
}