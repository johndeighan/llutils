{
  "version": 3,
  "file": "lang.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\lang.test.coffee"
  ],
  "names": [],
  "mappings": "AAAkB;AAAA,IAAA;;AAElB,OAAA;EAAQ,KAAR;CAAA,MAAA;;AACA,OAAA;EAAQ,QAAR;CAAA,MAAA;;AACA,OAAO,CAAA,QAAP,MAAA;;AACA,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB,IAAtB,EALkB;;;AASlB,MAAA,CAAO,QAAP;;AACA,QAAA,CAAS,CAAA,CAAA,GAAA;SAAM,QAAA,CAAS,KAAT;AAAN,CAAT;;AACA,QAAA,CAAS,CAAA,CAAA,GAAA;SAAM,QAAA,CAAS,OAAT;AAAN,CAAT;;AACA,QAAA,CAAS,CAAA,CAAA,GAAA;SAAM,QAAA,CAAS,SAAT;AAAN,CAAT;;AAEA,MAAA,CAAO,UAAP;;AACA,QAAA,CAAS,CAAA,CAAA,GAAA;SAAM,QAAA,CAAS,CAAA;GAAA,CAAT;AAAN,CAAT;;AAIA,QAAA,CAAS,CAAA,CAAA,GAAA;SAAM,QAAA,CAAS,CAAA;KAAA,CAAT;AAAN,CAAT;;AAIA,QAAA,CAAS,CAAA,CAAA,GAAA;SAAM,QAAA,CAAS,CAAA;OAAA,CAAT;AAAN,CAAT;;AAKA,MAAA,CAAO,UAAP;;AACA,QAAA,CAAS,CAAA,CAAA,GAAA;SAAM,QAAA,CAAS,CAAA;IAAA,CAAT;AAAN,CAAT;;AAIA,QAAA,CAAS,CAAA,CAAA,GAAA;SAAM,QAAA,CAAS,CAAA;MAAA,CAAT;AAAN,CAAT;;AAKA,OAAA,GAAU,CAAA;QAAA;;AAIV,QAAA,CAAS,CAAA,CAAA,GAAA;SAAM,QAAA,CAAS,OAAT;AAAN,CAAT;;AAEA,QAAA,CAAS,CAAA,CAAA,GAAA;SAAM,QAAA,CAAS,CAAA;UAAA,CAAT;AAAN,CAAT;;AAKA,MAAA,CAAO,cAAP;;AACA,QAAA,CAAS,CAAA,CAAA,GAAA;SAAM,QAAA,CAAS,CAAA;;;;IAAA,CAAT;AAAN,CAAT;;AAQA,MAAA,CAAO,mBAAP;;AACA,QAAA,CAAS,CAAA,CAAA,GAAA;SAAM,QAAA,CAAS,CAAA;;;;;IAAA,CAAT;AAAN,CAAT;;AAQA,QAAA,CAAS,CAAA,CAAA,GAAA;SAAM,QAAA,CAAS,CAAA;;;;;;;;IAAA,CAAT;AAAN,CAAT",
  "sourcesContent": [
    "# lang.test.coffee\r\n\r\nimport {undef} from '@jdeighan/llutils'\r\nimport {evaluate} from '@jdeighan/llutils/lang'\r\nimport * as lib2 from '@jdeighan/llutils/utest'\r\nObject.assign(global, lib2)\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\nsymbol \"simple\"\r\nsucceeds () => evaluate(\"x=3\")\r\nsucceeds () => evaluate(\"x=3\\n\")\r\nsucceeds () => evaluate(\"x=3\\n\\n\")\r\n\r\nsymbol \"multiple\"\r\nsucceeds () => evaluate(\"\"\"\r\n\tx=3\r\n\ty=4\r\n\t\"\"\")\r\nsucceeds () => evaluate(\"\"\"\r\n\tx=3\r\n\ty=4\\n\r\n\t\"\"\")\r\nsucceeds () => evaluate(\"\"\"\r\n\tx=3\r\n\ty=4\\n\\n\r\n\t\"\"\")\r\n\r\nsymbol \"indented\"\r\nsucceeds () => evaluate(\"\"\"\r\n\tif\r\n\t\ty=5\r\n\t\"\"\")\r\nsucceeds () => evaluate(\"\"\"\r\n\tif\r\n\t\ty=5\\n\r\n\t\"\"\")\r\n\r\nprogram = \"\"\"\r\n\tif\r\n\t\ty=5\\n\\n\r\n\t\"\"\"\r\nsucceeds () => evaluate(program)\r\n\r\nsucceeds () => evaluate(\"\"\"\r\n\tif\r\n\t\ty=5\\n\\n\\n\r\n\t\"\"\")\r\n\r\nsymbol \"multi indent\"\r\nsucceeds () => evaluate(\"\"\"\r\n\tif\r\n\t\ty=5\r\n\t\tif\r\n\t\t\tx=3\r\n\t\tz=2\r\n\t\"\"\")\r\n\r\nsymbol \"allow blank lines\"\r\nsucceeds () => evaluate(\"\"\"\r\n\tif\r\n\t\ty=5\r\n\r\n\t\tif\r\n\t\t\tx=3\r\n\t\tz=2\r\n\t\"\"\")\r\nsucceeds () => evaluate(\"\"\"\r\n\tif\r\n\r\n\t\ty=5\r\n\r\n\t\tif\r\n\r\n\t\t\tx=3\r\n\r\n\t\tz=2\r\n\t\"\"\")\r\n"
  ]
}