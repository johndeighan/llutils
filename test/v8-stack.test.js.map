{
  "version": 3,
  "file": "v8-stack.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\v8-stack.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# v8-stack.test.coffee\n\nimport {\n\tundef, defined, notdefined, assert, croak,\n\t} from '@jdeighan/llutils'\nimport * as lib from '@jdeighan/llutils/v8-stack'\nObject.assign(global, lib)\nimport * as lib2 from '@jdeighan/llutils/utest'\nObject.assign(global, lib2)\nimport {getBoth} from './v8-stack/v8-module.js'\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\tstack1 = undef\n\tstack2 = undef\n\n\tmain = () ->\n\t\tfunc1()\n\t\tfunc2()\n\n\tfunc1 = () ->\n\t\tstack1 = getV8Stack()\n\n\tfunc2 = () ->\n\t\tstack2 = getV8Stack()\n\t\treturn\n\n\tmain()\n\tlike stack1, [\n\t\t{\n\t\t\tfunctionName: 'func1'\n\t\t\t}\n\t\t]\n\tlike stack2, [\n\t\t{\n\t\t\tfunctionName: 'func2'\n\t\t\t}\n\t\t]\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\tcaller1 = undef\n\tcaller2 = undef\n\n\tmain = () ->\n\t\tfunc1()\n\t\tfunc2()\n\n\tfunc1 = () ->\n\t\tcaller1 = getMyDirectCaller()\n\n\tfunc2 = () ->\n\t\tcaller2 = getMyDirectCaller()\n\t\treturn\n\n\tmain()\n\tlike caller1, {\n\t\tfunctionName: 'main'\n\t\tfileName: 'v8-stack.test.coffee'\n\t\t}\n\tlike caller2, {\n\t\tfunctionName: 'main'\n\t\tfileName: 'v8-stack.test.coffee'\n\t\t}\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\thCaller = undef\n\n\tmain = () ->\n\t\tfunc1()\n\t\tfunc2()\n\n\tfunc1 = () ->\n\t\treturn\n\n\tfunc2 = () ->\n\t\thCaller = getMyDirectCaller()\n\t\treturn\n\n\t# ------------------------------------------------------------------------\n\n\tmain()\n\n\tlike hCaller, {\n\t\ttype: 'function'\n\t\tfunctionName: 'main'\n\t\tfileName: 'v8-stack.test.coffee'\n\t\t}\n\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() ->\n\tlCallers1 = undef\n\tlCallers2 = undef\n\n\tmain = () ->\n\t\tfunc1()\n\t\tfunc2()\n\n\tfunc1 = () ->\n\t\tlCallers1 = getBoth()\n\n\tfunc2 = () ->\n\t\tlCallers2 = getBoth()\n\t\treturn\n\n\tmain()\n\tlike lCallers1[0], {\n\t\ttype: 'function'\n\t\tfunctionName: 'secondFunc'\n\t\tfileName: 'v8-module.coffee'\n\t\t}\n\tlike lCallers1[1], {\n\t\ttype: 'function'\n\t\tfunctionName: 'func1'\n\t\tfileName: 'v8-stack.test.coffee'\n\t\t}\n\tlike lCallers2[0], {\n\t\ttype: 'function'\n\t\tfunctionName: 'secondFunc'\n\t\tfileName: 'v8-module.coffee'\n\t\t}\n\tlike lCallers2[1], {\n\t\ttype: 'function'\n\t\tfunctionName: 'func2'\n\t\tfileName: 'v8-stack.test.coffee'\n\t\t}\n\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() =>\n\tfunc1 = () =>\n\t\treturn await func2()\n\n\tfunc2 = () =>\n\t\tstackStr = await getV8StackStr()\n\t\treturn stackStr\n\n\tequal await func1(), \"\"\"\n\t\tfunction at v8-stack.test.coffee:146:19\n\t\tfunction at v8-stack.test.coffee:143:15\n\t\tscript at v8-stack.test.coffee:149:13\n\t\t\"\"\"\n\n\t)()\n\n# ---------------------------------------------------------------------------\n\n(() =>\n\tfunc1 = () =>\n\t\tfunc2()\n\t\treturn await getV8StackStr('debug')\n\n\tfunc2 = () =>\n\t\tx = 2 * 2\n\t\treturn x\n\n\tequal await func1(), \"\"\"\n\t\tfunction at v8-stack.test.coffee:162:15\n\t\tscript at v8-stack.test.coffee:168:13\n\t\t\"\"\"\n\t)()\n"
  ]
}