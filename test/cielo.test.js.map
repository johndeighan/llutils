{
  "version": 3,
  "file": "cielo.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\cielo.test.coffee"
  ],
  "names": [],
  "mappings": "AAAmB;AAAA,IAAA,GAAA,EAAA;;AAEnB,OAAA;EAAQ,KAAR;EAAe,MAAf;EAAuB,EAAvB;EAA2B,QAA3B;CAAA,MAAA;;AACA,OAAO,CAAA,OAAP,MAAA;;AACA,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB,GAAtB;;AACA,OAAO,CAAA,QAAP,MAAA;;AACA,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB,IAAtB;;AAEA,CAAA,GAAI,IAAI,UAAJ,CAAA;;AACJ,CAAC,CAAC,cAAF,GAAmB,CAAC,GAAD,CAAA,GAAA;EAClB,MAAA,CAAO,QAAA,CAAS,GAAT,CAAP,EAAsB,CAAA,cAAA,CAAA,CAAiB,EAAA,CAAG,GAAH,CAAjB,CAAA,CAAtB;AACA,SAAO,eAAA,CAAgB,GAAhB;AAFW,EATA;;;;;;;AAmBnB,GAAA,GAAM;;AAEN,CAAC,CAAC,KAAF,CAAQ,CAAA;;;;;;;;;;kBAAA,CAAR,EAYM,CAAA;;oBAAA,CAAA,CAGiB,GAHjB,CAAA;kBAAA,CAZN;;AAmBA,CAAC,CAAC,KAAF,CAAQ,CAAA;;;;;;;;;;;kBAAA,CAAR,EAaM,CAAA;;oBAAA,CAAA,CAGiB,GAHjB,CAAA,sBAAA,CAbN",
  "sourcesContent": [
    "# cielo.test.coffee\n\nimport {undef, assert, OL, isString} from '@jdeighan/llutils'\nimport * as lib from '@jdeighan/llutils/cielo'\nObject.assign(global, lib)\nimport * as lib2 from '@jdeighan/llutils/utest'\nObject.assign(global, lib2)\n\nt = new UnitTester()\nt.transformValue = (str) =>\n\tassert isString(str), \"Not a string: #{OL(str)}\"\n\treturn cieloPreProcess(str)\n\n# ---------------------------------------------------------------------------\n#    - Handles HEREDOC syntax\n#    - ends file upon seeing '__END__'\n# ---------------------------------------------------------------------------\n#symbol \"cieloPreProcess(code)\"\n\nbsl = \"\\\\\"\n\nt.equal \"\"\"\n\timport {undef} from '@jdeighan/llutils'\n\n\tequal fromTAML(<<<), <<<\n\t\ta: 1\n\t\tb: 2\n\n\t\t---\n\t\ta: 1\n\t\tb: 2\n\n\tconsole.log 'DONE'\n\t\"\"\", \"\"\"\n\timport {undef} from '@jdeighan/llutils'\n\n\tequal fromTAML(\"a: 1#{bsl}nb: 2\"), {\"a\":1,\"b\":2}\n\tconsole.log 'DONE'\n\t\"\"\"\n\nt.equal \"\"\"\n\timport {undef} from '@jdeighan/llutils'\n\n\tequal fromTAML(<<<), <<<\n\t\ta: 1\n\t\tb: 2\n\n\t\t---\n\t\ta: 1\n\t\tb: 2\n\n\t__END__\n\tconsole.log 'DONE'\n\t\"\"\", \"\"\"\n\timport {undef} from '@jdeighan/llutils'\n\n\tequal fromTAML(\"a: 1#{bsl}nb: 2\"), {\"a\":1,\"b\":2}\n\t\"\"\"\n"
  ]
}