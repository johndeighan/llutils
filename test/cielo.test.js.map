{
  "version": 3,
  "file": "cielo.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\cielo.test.coffee"
  ],
  "names": [],
  "mappings": "AAAmB;AAEnB,OAAA;EACC,KADD;EACQ,OADR;EACiB,QADjB;EAC2B,EAD3B;EAEC,MAFD;EAES,KAFT;CAAA,MAAA;;AAIA,OAAA;EAAQ,KAAR;CAAA,MAAA;;AACA,OAAA;EAAQ,aAAR;CAAA,MAAA;;AACA,OAAA;EAAQ,UAAR;CAAA,MAAA;;AACA,OAAO,CAAA,OAAP,MAAA;;AACA,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB,GAAtB;;AACA,OAAO,CAAA,QAAP,MAAA;;AACA,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB,IAAtB,EAZmB;;;;;;;AAoBnB,CAAC,CAAA,CAAA,GAAA;AACD,MAAA,MAAA,EAAA,GAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,WAAA,EAAA;EAAC,CAAA,GAAI,IAAI,UAAJ,CAAA;EACJ,CAAC,CAAC,cAAF,GAAmB,CAAC,GAAD,CAAA,GAAA;IAClB,MAAA,CAAO,QAAA,CAAS,GAAT,CAAP,EAAsB,CAAA,cAAA,CAAA,CAAiB,EAAA,CAAG,GAAH,CAAjB,CAAA,CAAtB;AACA,WAAO,eAAA,CAAgB,GAAhB;EAFW;EAInB,GAAA,GAAM;EAEN,CAAC,CAAC,KAAF,CAAQ,CAAA;;;;;;;;;;kBAAA,CAAR,EAYM,CAAA;;oBAAA,CAAA,CAGiB,GAHjB,CAAA;kBAAA,CAZN;EAmBA,CAAC,CAAC,KAAF,CAAQ,CAAA;;;;;;;;;;;kBAAA,CAAR,EAaM,CAAA;;oBAAA,CAAA,CAGiB,GAHjB,CAAA,sBAAA,CAbN,EA1BD;;EA+CC,QAAA,GAAW;EACX,IAAA,GAAO,KAAA,CAAM,QAAN;EAEP,MAAA,CAAO,QAAA,CAAS,IAAT,CAAP;EAEA,MAAA,GAAS,IAAI,aAAJ,CAAA;EACT,MAAM,CAAC,QAAP,CAAgB,QAAhB,EAA0B,IAA1B;EAEA,WAAA,GAAc,eAAA,CAAgB,IAAhB;EAEd,MAAM,CAAC,QAAP,CAAgB,cAAhB,EAAgC,WAAhC;EACA,EAAA,GAAK,UAAA,CAAW,WAAX,CAAuB,CAAC;EAC7B,MAAM,CAAC,QAAP,CAAgB,YAAhB,EAA8B,EAA9B;SAEA,KAAA,CAAM,MAAM,CAAC,QAAP,CAAgB,YAAhB,CAAN,EAAqC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4CAAA,CAArC;AA9DA,CAAD,CAAA,CAAA",
  "sourcesContent": [
    "# cielo.test.coffee\r\n\r\nimport {\r\n\tundef, defined, isString, OL,\r\n\tassert, croak,\r\n\t} from '@jdeighan/llutils'\r\nimport {slurp} from '@jdeighan/llutils/fs'\r\nimport {TextBlockList} from '@jdeighan/llutils/text-block'\r\nimport {procCoffee} from '@jdeighan/llutils/coffee'\r\nimport * as lib from '@jdeighan/llutils/cielo'\r\nObject.assign(global, lib)\r\nimport * as lib2 from '@jdeighan/llutils/utest'\r\nObject.assign(global, lib2)\r\n\r\n# ---------------------------------------------------------------------------\r\n#    - Handles HEREDOC syntax\r\n#    - ends file upon seeing '__END__'\r\n# ---------------------------------------------------------------------------\r\n#symbol \"cieloPreProcess(code)\"\r\n\r\n(() =>\r\n\tt = new UnitTester()\r\n\tt.transformValue = (str) =>\r\n\t\tassert isString(str), \"Not a string: #{OL(str)}\"\r\n\t\treturn cieloPreProcess(str)\r\n\r\n\tbsl = \"\\\\\"\r\n\r\n\tt.equal \"\"\"\r\n\t\timport {undef} from '@jdeighan/llutils'\r\n\r\n\t\tequal fromTAML(<<<), <<<\r\n\t\t\ta: 1\r\n\t\t\tb: 2\r\n\r\n\t\t\t---\r\n\t\t\ta: 1\r\n\t\t\tb: 2\r\n\r\n\t\tconsole.log 'DONE'\r\n\t\t\"\"\", \"\"\"\r\n\t\timport {undef} from '@jdeighan/llutils'\r\n\r\n\t\tequal fromTAML(\"a: 1#{bsl}nb: 2\"), {\"a\":1,\"b\":2}\r\n\t\tconsole.log 'DONE'\r\n\t\t\"\"\"\r\n\r\n\tt.equal \"\"\"\r\n\t\timport {undef} from '@jdeighan/llutils'\r\n\r\n\t\tequal fromTAML(<<<), <<<\r\n\t\t\ta: 1\r\n\t\t\tb: 2\r\n\r\n\t\t\t---\r\n\t\t\ta: 1\r\n\t\t\tb: 2\r\n\r\n\t\t__END__\r\n\t\tconsole.log 'DONE'\r\n\t\t\"\"\", \"\"\"\r\n\t\timport {undef} from '@jdeighan/llutils'\r\n\r\n\t\tequal fromTAML(\"a: 1#{bsl}nb: 2\"), {\"a\":1,\"b\":2}\r\n\t\t\"\"\"\r\n\r\n\t# ---------------------------------------------------------------------------\r\n\r\n\tfilePath = \"test/cielo/test.cielo\"\r\n\tcode = slurp filePath\r\n\r\n\ttruthy isString(code)\r\n\r\n\tblocks = new TextBlockList()\r\n\tblocks.addBlock filePath, code\r\n\r\n\tpreprocCode = cieloPreProcess code\r\n\r\n\tblocks.addBlock 'PreProcessed', preprocCode\r\n\tjs = procCoffee(preprocCode).code\r\n\tblocks.addBlock 'JavaScript', js\r\n\r\n\tequal blocks.asString('format=box'), '''\r\n\t\t┌────────  test/cielo/test.cielo  ─────────┐\r\n\t\t│ import {undef} from '@jdeighan/llutils'  │\r\n\t\t│                                          │\r\n\t\t│ hAST = <<<                               │\r\n\t\t│    ---                                   │\r\n\t\t│    type: program                         │\r\n\t\t│    name: John                            │\r\n\t\t│                                          │\r\n\t\t│ equal extract(hAST, \"\"\"                  │\r\n\t\t│    type=\"program\"                        │\r\n\t\t│    \"\"\"), {name: 'John'}                  │\r\n\t\t│                                          │\r\n\t\t│ __END__                                  │\r\n\t\t│                                          │\r\n\t\t│ any old garbage can be here              │\r\n\t\t│                                          │\r\n\t\t├─────────────  PreProcessed  ─────────────┤\r\n\t\t│ import {undef} from '@jdeighan/llutils'  │\r\n\t\t│                                          │\r\n\t\t│ hAST = {\"type\":\"program\",\"name\":\"John\"}  │\r\n\t\t│ equal extract(hAST, \"\"\"                  │\r\n\t\t│    type=\"program\"                        │\r\n\t\t│    \"\"\"), {name: 'John'}                  │\r\n\t\t│                                          │\r\n\t\t├──────────────  JavaScript  ──────────────┤\r\n\t\t│ var hAST;                                │\r\n\t\t│                                          │\r\n\t\t│ import {                                 │\r\n\t\t│   undef                                  │\r\n\t\t│ } from '@jdeighan/llutils';              │\r\n\t\t│                                          │\r\n\t\t│ hAST = {                                 │\r\n\t\t│   \"type\": \"program\",                     │\r\n\t\t│   \"name\": \"John\"                         │\r\n\t\t│ };                                       │\r\n\t\t│                                          │\r\n\t\t│ equal(extract(hAST, `type=\"program\"`), { │\r\n\t\t│   name: 'John'                           │\r\n\t\t│ });                                      │\r\n\t\t│                                          │\r\n\t\t└──────────────────────────────────────────┘\r\n\t\t'''\r\n\r\n\t)()\r\n"
  ]
}