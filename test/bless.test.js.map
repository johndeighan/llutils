{
  "version": 3,
  "file": "bless.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\bless.test.coffee"
  ],
  "names": [],
  "mappings": "AAAkB;AAAA,IAAA,MAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,OAAA,EAAA;;AAElB,OAAA;EAAQ,KAAR;EAAe,QAAf;CAAA,MAAA;;AACA,OAAA;EAAQ,KAAR;CAAA,MAAA;;AACA,OAAA;EAAQ,aAAR;CAAA,MAAA;;AAEA,OAAO,CAAA,OAAP,MAAA;;AACA,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB,GAAtB;;AACA,OAAO,CAAA,QAAP,MAAA;;AACA,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB,IAAtB;;AAEA,QAAA,GAAW,wBAXO;;;AAelB,IAAA,GAAO,KAAA,CAAM,QAAN;;AAEP,MAAA,CAAO,QAAA,CAAS,IAAT,CAAP;;AAEA,MAAA,GAAS,IAAI,aAAJ,CAAA;;AACT,MAAM,CAAC,QAAP,CAAgB,QAAhB,EAA0B,IAA1B;;AAEA,CAAA,CAAC,OAAD,EAAU,WAAV,EAAuB,EAAvB,CAAA,GAA6B,KAAA,CAAM,IAAN,CAA7B;;AACA,MAAA,CAAQ,OAAA,KAAW,IAAnB;;AAEA,MAAM,CAAC,QAAP,CAAgB,cAAhB,EAAgC,WAAhC;;AACA,MAAM,CAAC,QAAP,CAAgB,YAAhB,EAA8B,EAA9B;;AAEA,KAAA,CAAM,MAAM,CAAC,QAAP,CAAgB,YAAhB,CAAN,EAAqC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4CAAA,CAArC",
  "sourcesContent": [
    "# brew.test.coffee\r\n\r\nimport {undef, isString} from '@jdeighan/llutils'\r\nimport {slurp} from '@jdeighan/llutils/fs'\r\nimport {TextBlockList} from '@jdeighan/llutils/text-block'\r\n\r\nimport * as lib from '@jdeighan/llutils/cielo'\r\nObject.assign(global, lib)\r\nimport * as lib2 from '@jdeighan/llutils/utest'\r\nObject.assign(global, lib2)\r\n\r\nfilePath = \"test/bless/test.cielo\"\r\n\r\n# ---------------------------------------------------------------------------\r\n\r\ncode = slurp filePath\r\n\r\ntruthy isString(code)\r\n\r\nblocks = new TextBlockList()\r\nblocks.addBlock filePath, code\r\n\r\n{orgCode, preprocCode, js} = bless code\r\ntruthy (orgCode == code)\r\n\r\nblocks.addBlock 'PreProcessed', preprocCode\r\nblocks.addBlock 'JavaScript', js\r\n\r\nequal blocks.asString('format=box'), '''\r\n\t┌────────  test/bless/test.cielo  ─────────┐\r\n\t│ import {undef} from '@jdeighan/llutils'  │\r\n\t│                                          │\r\n\t│ hAST = <<<                               │\r\n\t│    ---                                   │\r\n\t│    type: program                         │\r\n\t│    name: John                            │\r\n\t│                                          │\r\n\t│ equal extract(hAST, \"\"\"                  │\r\n\t│    type=\"program\"                        │\r\n\t│    \"\"\"), {name: 'John'}                  │\r\n\t│                                          │\r\n\t│ __END__                                  │\r\n\t│                                          │\r\n\t│ any old garbage can be here              │\r\n\t│                                          │\r\n\t├─────────────  PreProcessed  ─────────────┤\r\n\t│ import {undef} from '@jdeighan/llutils'  │\r\n\t│                                          │\r\n\t│ hAST = {\"type\":\"program\",\"name\":\"John\"}  │\r\n\t│ equal extract(hAST, \"\"\"                  │\r\n\t│    type=\"program\"                        │\r\n\t│    \"\"\"), {name: 'John'}                  │\r\n\t│                                          │\r\n\t├──────────────  JavaScript  ──────────────┤\r\n\t│ var hAST;                                │\r\n\t│                                          │\r\n\t│ import {                                 │\r\n\t│   undef                                  │\r\n\t│ } from '@jdeighan/llutils';              │\r\n\t│                                          │\r\n\t│ hAST = {                                 │\r\n\t│   \"type\": \"program\",                     │\r\n\t│   \"name\": \"John\"                         │\r\n\t│ };                                       │\r\n\t│                                          │\r\n\t│ equal(extract(hAST, `type=\"program\"`), { │\r\n\t│   name: 'John'                           │\r\n\t│ });                                      │\r\n\t└──────────────────────────────────────────┘\r\n\t'''\r\n"
  ]
}