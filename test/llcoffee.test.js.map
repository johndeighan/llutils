{
  "version": 3,
  "file": "llcoffee.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\llcoffee.test.coffee"
  ],
  "names": [],
  "mappings": "AAAsB;AAAA,IAAA,MAAA,EAAA,IAAA,EAAA,UAAA,EAAA;;AAEtB,OAAA;EAAQ,KAAR;EAAe,QAAf;CAAA,MAAA;;AACA,OAAA;EAAQ,KAAR;CAAA,MAAA;;AACA,OAAA;EAAQ,aAAR;CAAA,MAAA;;AACA,OAAO,CAAA,OAAP,MAAA;;AACA,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB,GAAtB;;AACA,OAAO,CAAA,QAAP,MAAA;;AACA,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB,IAAtB,EARsB;;;;AAatB,QAAA,CAAS,CAAA,CAAA,GAAA;SAAM,UAAA,CAAW,OAAX;AAAN,CAAT;;AACA,KAAA,CAAM,CAAA,CAAA,GAAA;SAAM,UAAA,CAAW,WAAX;AAAN,CAAN;;AAEA,OAAA,CAAQ,UAAA,CAAW,OAAX,CAAmB,CAAC,IAA5B,EAAkC,CAAA;;MAAA,CAAlC;;AAMA,KAAA,CAAM,UAAA,CAAW,OAAX,EAAoB;EAAC,OAAA,EAAS;AAAV,CAApB,CAAoC,CAAC,IAA3C,EAAiD,CAAA;;;MAAA,CAAjD;;AAOA,KAAA,CAAM,UAAA,CAAW,OAAX,EAAoB;EAAC,OAAA,EAAS;AAAV,CAApB,CAAqC,CAAC,IAA5C,EAAkD,CAAA;;;MAAA,CAAlD,EA7BsB;;;;AAuCtB,QAAA,CAAS,CAAA,CAAA,GAAA;SAAM,KAAA,CAAM,OAAN;AAAN,CAAT;;AACA,KAAA,CAAM,CAAA,CAAA,GAAA;SAAM,KAAA,CAAM,WAAN;AAAN,CAAN,EAxCsB;;;AA4CtB,QAAA,GAAW;;AACX,UAAA,GAAa,KAAA,CAAM,QAAN;;AAEb,MAAA,CAAO,QAAA,CAAS,UAAT,CAAP;;AAEA,MAAA,GAAS,IAAI,aAAJ,CAAA;;AACT,MAAM,CAAC,QAAP,CAAgB,QAAhB,EAA0B,UAA1B;;AAEA,CAAA,CAAC,IAAD,CAAA,GAAS,UAAA,CAAW,UAAX,CAAT;;AAEA,MAAM,CAAC,QAAP,CAAgB,YAAhB,EAA8B,IAA9B;;AAEA,KAAA,CAAM,MAAM,CAAC,QAAP,CAAgB,YAAhB,CAAN,EAAqC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;4CAAA,CAArC",
  "sourcesContent": [
    "# llcoffee.test.coffee\n\nimport {undef, isString} from '@jdeighan/llutils'\nimport {slurp} from '@jdeighan/llutils/fs'\nimport {TextBlockList} from '@jdeighan/llutils/text-block'\nimport * as lib from '@jdeighan/llutils/llcoffee'\nObject.assign(global, lib)\nimport * as lib2 from '@jdeighan/llutils/utest'\nObject.assign(global, lib2)\n\n# ---------------------------------------------------------------------------\n#symbol \"procCoffee(code)\"\n\nsucceeds () => procCoffee('v = 5')\nfails () => procCoffee('let v = 5')\n\nmatches procCoffee('v = 5').code, \"\"\"\n\tvar v;\n\n\tv = 5;\n\t\"\"\"\n\nequal procCoffee('v = 5', {shebang: true}).code, \"\"\"\n\t#!/usr/bin/env node\n\tvar v;\n\n\tv = 5;\n\t\"\"\"\n\nequal procCoffee('v = 5', {shebang: 'abc'}).code, \"\"\"\n\tabc\n\tvar v;\n\n\tv = 5;\n\t\"\"\"\n\n# ---------------------------------------------------------------------------\n#symbol \"toAST(code)\"\n\nsucceeds () => toAST('v = 5')\nfails () => toAST('let v = 5')\n\n# ---------------------------------------------------------------------------\n\nfilePath = \"test/coffee/test.coffee\"\ncoffeeCode = slurp filePath\n\ntruthy isString(coffeeCode)\n\nblocks = new TextBlockList()\nblocks.addBlock filePath, coffeeCode\n\n{code} = procCoffee coffeeCode\n\nblocks.addBlock 'JavaScript', code\n\nequal blocks.asString('format=box'), '''\n\t┌───────  test/coffee/test.coffee  ────────┐\n\t│ import {undef} from '@jdeighan/llutils'  │\n\t│                                          │\n\t│ hAST = {                                 │\n\t│    type: 'program'                       │\n\t│    name: 'John'                          │\n\t│    }                                     │\n\t│                                          │\n\t│ equal extract(hAST, \"\"\"                  │\n\t│    type=\"program\"                        │\n\t│    \"\"\"), {name: 'John'}                  │\n\t│                                          │\n\t├──────────────  JavaScript  ──────────────┤\n\t│ var hAST;                                │\n\t│                                          │\n\t│ import {                                 │\n\t│   undef                                  │\n\t│ } from '@jdeighan/llutils';              │\n\t│                                          │\n\t│ hAST = {                                 │\n\t│   type: 'program',                       │\n\t│   name: 'John'                           │\n\t│ };                                       │\n\t│                                          │\n\t│ equal(extract(hAST, `type=\"program\"`), { │\n\t│   name: 'John'                           │\n\t│ });                                      │\n\t└──────────────────────────────────────────┘\n\t'''\n"
  ]
}