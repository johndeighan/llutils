{
  "version": 3,
  "file": "llutils.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\llutils.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# llutils.test.coffee\n\nimport {islice} from 'itertools'\n\nimport * as lib from '@jdeighan/llutils'\nObject.assign(global, lib)\nimport * as lib2 from '@jdeighan/llutils/utest'\nObject.assign(global, lib2)\n\n# ---------------------------------------------------------------------------\n#symbol \"undef\"   # --- a synonym for undefined\n\nequal undef, undefined\nnotequal undef, 23\n\n# ---------------------------------------------------------------------------\n#symbol \"deepEqual()\"   # --- deep equality\n\ntruthy deepEqual('abc', 'abc')\ntruthy deepEqual(13, 13)\ntruthy deepEqual(['a','b'], ['a', 'b'])\ntruthy deepEqual({a:1, b:2}, {b:2, a:1})\n\nfalsy deepEqual('abc', ['abc'])\nfalsy deepEqual(['a','b'], ['b', 'a'])\nfalsy deepEqual({a:1, b:2}, {a:1, b:2, c:3})\n\n# ---------------------------------------------------------------------------\n#symbol \"dclone()\"    # --- deep clone\n\nequal dclone({a:1, b:['a',3,'z']}), {a:1, b:['a',3,'z']}\n\n# ---------------------------------------------------------------------------\n#symbol \"pass()\"    # --- do nothing\n\nsucceeds () => pass()\n\n# ---------------------------------------------------------------------------\n#symbol \"range(n)\"   # --- build iterable of ints\n\nequal Array.from(range(10)), [0,1,2,3,4,5,6,7,8,9]\nequal Array.from(islice(range(), 5)), [0,1,2,3,4]\n\nequal Array.from(islice(range(3, 'cycle'), 7)), [0,1,2,0,1,2,0]\n\n# ---------------------------------------------------------------------------\n#symbol \"inRange(i, n)\"   # --- test that (i >= 0) && (i < n)\n\ntruthy inRange(0, 5)\ntruthy inRange(2, 5)\ntruthy inRange(4, 5)\nfalsy  inRange(5, 5)\nfalsy  inRange(10, 5)\n\n# ---------------------------------------------------------------------------\n#symbol \"rev_range(n)\"   # --- build iterable of ints\n\nequal Array.from(rev_range(10)), [9,8,7,6,5,4,3,2,1,0]\n\n# ---------------------------------------------------------------------------\n#symbol \"add_s(n)\"    # --- add an 's' for plural things\n\nequal add_s(0), 's'\nequal add_s(1), ''\nequal add_s(2), 's'\nequal add_s(99), 's'\n\n# ---------------------------------------------------------------------------\n#symbol \"assert(cond, msg)\"    # --- assert some condition\n\nfails () => assert(2 == 3)\nsucceeds () => assert(2 == 2)\n\n# ---------------------------------------------------------------------------\n#symbol \"croak(msg)\"    # --- throw an exception\n\nfails () => croak(\"bad\")\n\n# ---------------------------------------------------------------------------\n# --- define some objects\n\n(() =>\n\ts = 'abc'\n\tb = true\n\tn = 3.14159\n\ti = 42\n\tl = [1, 2]\n\th = {a:1, b:2}\n\tf = (x) -> return 2*x\n\tr = /^a*$/\n\tc = class Dummy\n\t\tconstructor: (@name='my name') ->\n\t\t\t@key = 'nothing'\n\to = new c()\n\tp = new Promise((resolve,reject) => return 42)\n\tg = () ->\n\t\tyield 'a'\n\t\tyield 'b'\n\t\tyield 'c'\n\t\treturn\n\n\t# ---------------------------------------------------------------------------\n\t#symbol \"defined(obj)\"    # --- equal a value defined\n\n\ttruthy defined(s)\n\ttruthy defined(i)\n\ttruthy defined(n)\n\ttruthy defined(l)\n\ttruthy defined(h)\n\ttruthy defined(c)\n\ttruthy defined(o)\n\n\tfalsy defined(undef)\n\tfalsy defined(null)\n\n\t# ---------------------------------------------------------------------------\n\t#symbol \"notdefined(obj)\"    # --- equal a value not defined\n\n\ttruthy notdefined(undef)\n\ttruthy notdefined(null)\n\n\tfalsy notdefined(s)\n\tfalsy notdefined(i)\n\tfalsy notdefined(n)\n\tfalsy notdefined([1,2])\n\tfalsy notdefined({a:1, b:2})\n\tfalsy notdefined(c)\n\tfalsy notdefined(o)\n\n\t# ---------------------------------------------------------------------------\n\t#symbol \"words(str...)\"    # --- extract words from 1 or more strings\n\n\tequal words(), []\n\tequal words(' ab cd', 'ef gh '), ['ab','cd','ef','gh']\n\n\t# ---------------------------------------------------------------------------\n\t#symbol \"isString(obj)\"    # --- test if obj equal a string\n\n\ttruthy isString('abc')\n\ttruthy isString('abc', {nonempty: true})\n\n\tfalsy isString(undef)\n\tfalsy isString(['abc'])\n\tfalsy isString('', {nonempty: true})\n\n\t# ---------------------------------------------------------------------------\n\t#symbol \"isBoolean(obj)\"    # --- test if obj equal a boolean\n\n\ttruthy isBoolean(true)\n\ttruthy isBoolean(false)\n\ttruthy isBoolean(new Boolean(true))\n\n\tfalsy isBoolean(s)\n\n\t# ---------------------------------------------------------------------------\n\t#symbol \"isNumber(obj)\"    # --- test if obj equal a number\n\n\ttruthy isNumber(i)\n\ttruthy isNumber(n)\n\n\tfalsy isNumber('abc')\n\tfalsy isNumber(undef)\n\tfalsy isNumber(['abc'])\n\n\t# ---------------------------------------------------------------------------\n\t#symbol \"isScalar(obj)\"    # --- string | number | boolean\n\n\ttruthy isScalar('abc')\n\ttruthy isScalar(42)\n\ttruthy isScalar(3.14159)\n\ttruthy isScalar('abc')\n\n\tfalsy isScalar(undef)\n\tfalsy isScalar(null)\n\tfalsy isScalar(['a'])\n\tfalsy isScalar({a: 1})\n\n\t# ---------------------------------------------------------------------------\n\t#symbol \"isInteger(obj)\"    # --- test if obj equal n integer\n\n\ttruthy isInteger(i)\n\n\tfalsy isInteger(n)\n\tfalsy isInteger('abc')\n\tfalsy isInteger(undef)\n\tfalsy isInteger(['abc'])\n\n\t# ---------------------------------------------------------------------------\n\t#symbol \"isArray(obj)\"    # --- test if obj equal an array\n\n\ttruthy isArray(['abc'])\n\ttruthy isArray(['abc'], 'nonempty')\n\ttruthy isArray(['abc','def'], 'allStrings')\n\n\tfalsy isArray('abc')\n\tfalsy isArray(undef)\n\tfalsy isArray([], {nonempty: true})\n\tfalsy isArray([], 'nonempty')\n\tfalsy isArray(['abc', []], {allStrings: true})\n\tfalsy isArray(['abc', []], 'allStrings')\n\n\t# ---------------------------------------------------------------------------\n\t#symbol \"isHash(obj)\"    # --- test if obj equal a hash\n\n\ttruthy isHash({a:1, b:2})\n\n\tfalsy isHash('abc')\n\tfalsy isHash(undef)\n\tfalsy isHash(o)\n\n\t# ---------------------------------------------------------------------------\n\t#symbol \"isFunction(obj)\"    # --- test if obj equal a function\n\n\ttruthy isFunction(() -> return 'abc')\n\n\tfalsy isFunction(s)\n\n\t# ---------------------------------------------------------------------------\n\t#symbol \"isGenerator(obj)\"\n\t#symbol \"isIterable(obj)\"\n\n\t(() =>\n\t\tfunc = (x) ->\n\t\t\ti = 0\n\t\t\tyield i\n\t\t\ti += 1\n\n\t\ttruthy isGenerator(func)\n\t\titer = func()\n\t\ttruthy isIterable(iter)\n\t\t)()\n\n\t# ---------------------------------------------------------------------------\n\t#symbol \"isRegExp(obj)\"    # --- test if obj equal a regular expression\n\n\ttruthy isRegExp(/^abc$/)\n\n\tfalsy isRegExp(s)\n\n\t# ---------------------------------------------------------------------------\n\t#symbol \"isClass(obj)\"    # --- test if obj equal a class\n\n\ttruthy isClass(class NewClass)\n\n\tfalsy isClass(s)\n\n\t# ---------------------------------------------------------------------------\n\t#symbol \"isPromise(obj)\"    # --- test if obj equal a promise\n\n\ttruthy isPromise(p)\n\n\tfalsy isPromise(s)\n\n\t# ---------------------------------------------------------------------------\n\t#symbol \"isClassInstance(obj)\"    # --- test if obj equal a class instance\n\n\ttruthy isClassInstance(o)\n\n\tfalsy isClassInstance(s)\n\n\t# ---------------------------------------------------------------------------\n\t#symbol \"isEmpty(obj)\"\n\n\ttruthy isEmpty(undef)\n\ttruthy isEmpty(null)\n\ttruthy isEmpty('')\n\ttruthy isEmpty('   ')\n\ttruthy isEmpty([])\n\ttruthy isEmpty({})\n\n\tfalsy isEmpty(s)\n\tfalsy isEmpty(i)\n\tfalsy isEmpty(0)     # zero equal not empty!!!\n\tfalsy isEmpty(n)\n\tfalsy isEmpty(l)\n\tfalsy isEmpty(h)\n\n\t# ---------------------------------------------------------------------------\n\t#symbol \"nonEmpty(obj)\"\n\n\ttruthy nonEmpty(s)\n\ttruthy nonEmpty(i)\n\ttruthy nonEmpty(0)     # zero equal not empty!!!\n\ttruthy nonEmpty(n)\n\ttruthy nonEmpty(l)\n\ttruthy nonEmpty(h)\n\n\tfalsy nonEmpty(undef)\n\tfalsy nonEmpty(null)\n\tfalsy nonEmpty('')\n\tfalsy nonEmpty('   ')\n\tfalsy nonEmpty([])\n\tfalsy nonEmpty({})\n\n\t# ---------------------------------------------------------------------------\n\t#symbol \"gen2array(generator)\"\n\n\tequal gen2array(g), ['a','b','c']\n\n\t# ---------------------------------------------------------------------------\n\t#symbol \"gen2block(generator)\"\n\n\tequal gen2block(g), \"\"\"\n\t\t\ta\n\t\t\tb\n\t\t\tc\n\t\t\t\"\"\"\n\n\t)()\n\n# ---------------------------------------------------------------------------\n#symbol \"escapeStr(str)\"\n\nequal escapeStr(\"\\t\\tabc def\"), \"→→abc˳def\"\nequal escapeStr(\"\\t\\tabc def\\r\\n\"), \"→→abc˳def←↓\"\nequal escapeStr(\"\\t\\tabc def\\r\\nghi\", 'hEsc=escNoNL'), \"\"\"\n\t\t→→abc˳def←\n\t\tghi\n\t\t\"\"\"\nequal escapeStr(\"abcde\", 'offset=3'), \"abc┊de\"\nequal escapeStr(\"abcde\", 'offset=3 poschar=^'), \"abc^de\"\n\n# ---------------------------------------------------------------------------\n#symbol \"OL(x)\"\n\nequal OL(undef), 'undef'\nequal OL(null), 'null'\nequal OL('abc def'), '\"abc˳def\"'\nequal OL([1,2]), '[1,2]'\nequal OL({a:1, b:2}), '{\"a\":1,\"b\":2}'\nequal OL({a:'a', b:'b'}), '{\"a\":\"a\",\"b\":\"b\"}'\n\n# ---------------------------------------------------------------------------\n#symbol \"CWS\"    # --- trim & collapse whitespace to ' '\n\nequal CWS(\"\"\"\n\n\t\tabc\n\t\tdef\n\t\t\t\tghi\n\n\t\t\"\"\"), \"abc def ghi\"\n\n# ---------------------------------------------------------------------------\n#symbol \"ML(x)\"\n\nequal ML(undef), '.undef.'\nequal ML(null), '.null.'\nequal ML(true), 'true'\nequal ML(false), 'false'\nequal ML('abc def'), '\"abc˳def\"'\nequal ML([1,2]), \"\"\"\n\t\t[\n\t\t\t1,\n\t\t\t2\n\t\t]\n\t\t\"\"\"\nequal ML({a:1, b:2}), \"\"\"\n\t\t{\n\t\t\t\"a\": 1,\n\t\t\t\"b\": 2\n\t\t}\n\t\t\"\"\"\nequal ML({a:'a', b:'b'}), \"\"\"\n\t\t{\n\t\t\t\"a\": \"a\",\n\t\t\t\"b\": \"b\"\n\t\t}\n\t\t\"\"\"\nequal ML({\n\t\tmeaning: 42\n\t\tparse: (str) => return 42\n\t\t}), \"\"\"\n\t{\n\t\t\"meaning\": 42,\n\t\t\"parse\": «Function parse»\n\t}\n\t\"\"\"\n\n# ---------------------------------------------------------------------------\n#symbol \"OLS(lItems)\"\n\nequal OLS([[1,2], {a:1, b:2}]), '[1,2],{\"a\":1,\"b\":2}'\n\n# ---------------------------------------------------------------------------\n#symbol \"chomp(str)\"    # --- remove trailing \\r and/or \\n\n\nequal chomp(\"abc\\n\"), \"abc\"\nequal chomp(\"abc\\r\\n\"), \"abc\"\n\n# ---------------------------------------------------------------------------\n#symbol \"hasKey(h, key)\"\n\ntruthy hasKey({a:1, b:2, c:3}, 'b')\n\nfalsy hasKey({a:1, c:3}, 'b')\n\n# ---------------------------------------------------------------------------\n#symbol \"removeKeys(h, lKeys)\"\n\nequal removeKeys({a:1, b:2, c:3}, ['b']), {a:1, c:3}\n\nhash = {\n\ta:1\n\tb:2\n\tc:3\n\tlItems: [{a:1, b:2}, {b:2, c:3}]\n\t}\nequal removeKeys(hash, ['b','c']), {\n\ta:1\n\tlItems: [{a:1}, {}]\n\t}\n\nhAST = {\n\tbody: [\n\t\t{\n\t\t\tdeclarations: Array [{start:0}],\n\t\t\tend: 11,\n\t\t\tkind: 'let',\n\t\t\tstart: 0,\n\t\t\ttype: 'VariableDeclaration',\n\t\t\t},\n\t\t],\n\tend: 11,\n\tsourceType: 'script',\n\tstart: 0,\n\ttype: 'Program',\n\t}\n\nequal(\n\tremoveKeys(hAST, ['start','end']), {\n\t\tbody: [\n\t\t\t{\n\t\t\t\tdeclarations: Array [{}],\n\t\t\t\tkind: 'let',\n\t\t\t\ttype: 'VariableDeclaration',\n\t\t\t\t},\n\t\t\t],\n\t\tsourceType: 'script',\n\t\ttype: 'Program',\n\t\t})\n\nhAST2 = {\n\tbody: [\n\t\t{\n\t\t\tdeclarations: Array [{start:0}],\n\t\t\tend: 12,\n\t\t\tkind: 'let',\n\t\t\tstart: 0,\n\t\t\ttype: 'VariableDeclaration',\n\t\t\t},\n\t\t],\n\tend: 12,\n\tsourceType: 'script',\n\tstart: 0,\n\ttype: 'Program',\n\t}\n\nequal(\n\tremoveKeys(hAST2, ['start','end']), {\n\tbody: [\n\t\t{\n\t\t\tdeclarations: Array [{}],\n\t\t\tkind: 'let',\n\t\t\ttype: 'VariableDeclaration',\n\t\t\t},\n\t\t],\n\tsourceType: 'script',\n\ttype: 'Program',\n\t})\n\n# ---------------------------------------------------------------------------\n#symbol \"blockToArray(block)\"    # --- split string on \\r?\\n\n\nequal blockToArray(''), []\nequal blockToArray(\"a\\nb\\nc\"), ['a','b','c']\nequal blockToArray(\"a\\r\\nb\\r\\nc\"), ['a','b','c']\n\nl = blockToArray(\"\"\"\n\tabc\n\tdef\n\t\"\"\")\nequal l, [\n\t'abc'\n\t'def'\n\t]\n\n# ---------------------------------------------------------------------------\n#symbol \"toArray(strOrArray)\"\n\nequal toArray(['a','b','c']), ['a','b','c']\nequal toArray(\"\"\"\n\tabc\n\tdef\n\t\"\"\"), ['abc','def']\n\n# ---------------------------------------------------------------------------\n#symbol \"arrayToBlock(lItems)\"    # --- join lines with \\n\n\nequal arrayToBlock(['a','b','c']), \"a\\nb\\nc\"\n\n# ---------------------------------------------------------------------------\n#symbol \"toBlock(strOrArray)\"\n\nequal toBlock(['a','b','c']), \"\"\"\n\ta\n\tb\n\tc\n\t\"\"\"\nequal toBlock(\"\"\"\n\tabc\n\tdef\n\t\"\"\"), \"\"\"\n\tabc\n\tdef\n\t\"\"\"\n\n# ---------------------------------------------------------------------------\n#symbol \"listdiff(lItems, lItemsToRemove)\"\n\nequal listdiff(['a','b','c','d'], ['a','d']), ['b','c']\n\n# ---------------------------------------------------------------------------\n#symbol \"untabify(str)\"    # --- convert TAB to n chars\n\nequal untabify(\"abc\\n\\tdef\"), \"abc\\n   def\"\n\n# ---------------------------------------------------------------------------\n#symbol \"splitPrefix(str)\"    # --- separate into indentation and rest\n\nequal splitPrefix(\"   abc\"), [\"   \",\"abc\"]\nequal splitPrefix(\"\\t\\tabc\"), [\"\\t\\t\",\"abc\"]\n\n# ---------------------------------------------------------------------------\n#symbol \"substrCount(str, substr)\"\n\nequal substrCount('   abc', ' '), 3\nequal substrCount('abcabcabc', 'ab'), 3\n\n# ---------------------------------------------------------------------------\n#symbol \"tabify(str)\"    # --- convert leading spaces to TABs\n\nstr = \"\"\"\n\tabc\n\t  def\n\t    ghi\n\t\"\"\"\n\nequal tabify(str), \"abc\\n\\tdef\\n\\t\\tghi\"\n\n# ---------------------------------------------------------------------------\n#symbol \"spaces(n)\"    # --- create a string of n spaces\n\nequal spaces(3), '   '\n\n# ---------------------------------------------------------------------------\n#symbol \"tabs(n)\"    # --- create a string of n TAB chars\n\nequal tabs(3), \"\\t\\t\\t\"\n\n# ---------------------------------------------------------------------------\n#symbol \"centered(n)\"    # --- create a string of n TAB chars\n\nequal centered('abcdefg', 5), 'abcdefg'\nequal centered('abc', 5), ' abc '\nequal centered('ab', 10, {char:'-'}), '--  ab  --'\n\n# ---------------------------------------------------------------------------\n#symbol \"countChars(str, ch)\"\n\nequal countChars(\"abc,def\", \",\"), 1\nequal countChars(\",abc,def\", \",\"), 2\nequal countChars(\"abc,def,\", \",\"), 2\nequal countChars(\",abc,def,\", \",\"), 3\n\n# ---------------------------------------------------------------------------\n#symbol \"rtrim(str)\"\n\nequal rtrim(\"abc  \"), \"abc\"\nequal rtrim(\"abc\\t\\t\"), \"abc\"\nequal rtrim(\"abc \\t\"), \"abc\"\nequal rtrim(\"abc\"), \"abc\"\n\n# ---------------------------------------------------------------------------\n#symbol \"now()\"\n\nsucceeds () => now()\n\n# ---------------------------------------------------------------------------\n#symbol \"timeit(func, numReps=100)\"\n\nsucceeds () => timeit(() -> return 42)\n\n# ---------------------------------------------------------------------------\n#symbol \"behead(block)\"    # --- separate out first line\n\nequal behead(\"\"\"\n\t---\n\t- a\n\t- b\n\t\"\"\"), [\n\t\t'---'\n\t\t\"\"\"\n\t\t- a\n\t\t- b\n\t\t\"\"\"\n\t\t]\n\n# ---------------------------------------------------------------------------\n#symbol \"isTAML(block)\"    # --- must start with '---'\n\ntruthy isTAML('---\\n23')\ntruthy isTAML('---\\n{\\na:1\\n}')\n\nfalsy isTAML('abc')\n\n# ---------------------------------------------------------------------------\n#symbol \"fromTAML(block)\"\n\nequal fromTAML(\"\"\"\n\t---\n\t- a\n\t- b\n\t\"\"\"), [\n\t'a'\n\t'b'\n\t]\n\nequal fromTAML(\"\"\"\n\t---\n\ta: 1\n\t\"\"\"), {\n\ta: 1\n\t}\n\nequal fromTAML(\"\"\"\n\t---\n\ttype: tree\n\tbody:\n\t\t-\n\t\t\ttype: stmt\n\t\t\tident: abc\n\t\"\"\"), {\n\ttype: 'tree'\n\tbody: [\n\t\t{type: 'stmt', ident: 'abc'}\n\t\t]\n\t}\n\n# ---------------------------------------------------------------------------\n#symbol \"toTAML(ds)\"\n\nequal toTAML([1,2]), \"\"\"\n\t---\n\t- 1\n\t- 2\n\t\"\"\"\n\nequal toTAML({a:1, b:2}), \"\"\"\n\t---\n\ta: 1\n\tb: 2\n\t\"\"\"\n\nequal toTAML([13, {key: 'fName', value: 'John'}]), \"\"\"\n\t---\n\t- 13\n\t- key: fName\n\t\tvalue: John\n\t\"\"\"\n# ---------------------------------------------------------------------------\n#symbol \"sliceBlock(block)\"\n\n(() =>\n\tblock = \"\"\"\n\t\taaa\n\t\tbbb\n\t\tccc\n\t\tddd\n\t\teee\n\t\t\"\"\"\n\n\tequal sliceBlock(block, 0, 3), \"\"\"\n\t\taaa\n\t\tbbb\n\t\tccc\n\t\t\"\"\"\n\n\tequal sliceBlock(block, 1, 4), \"\"\"\n\t\tbbb\n\t\tccc\n\t\tddd\n\t\t\"\"\"\n\n\tequal sliceBlock(block, 3, 4), \"\"\"\n\t\tddd\n\t\t\"\"\"\n)()\n\n# ---------------------------------------------------------------------------\n#symbol \"sortArrayOfHashes(lHashes)\"\n\n(() =>\n\tequal sortArrayOfHashes([\n\t\t{a:1}\n\t\t{a:3}\n\t\t{a:2}\n\t\t], 'a'), [\n\t\t{a:1}\n\t\t{a:2}\n\t\t{a:3}\n\t\t]\n\n\tequal sortArrayOfHashes([\n\t\t{name: 'John', age: 71}\n\t\t{name: 'Arathi', age: 35}\n\t\t{name: 'Lewis', age: 33}\n\t\t{name: 'Ben', age: 39}\n\t\t], 'name'), [\n\t\t{name: 'Arathi', age: 35}\n\t\t{name: 'Ben', age: 39}\n\t\t{name: 'John', age: 71}\n\t\t{name: 'Lewis', age: 33}\n\t\t]\n\n\tequal sortArrayOfHashes([\n\t\t{name: 'John', age: 71}\n\t\t{name: 'Arathi', age: 35}\n\t\t{name: 'Lewis', age: 33}\n\t\t{name: 'Ben', age: 39}\n\t\t], 'age'), [\n\t\t{name: 'Lewis', age: 33}\n\t\t{name: 'Arathi', age: 35}\n\t\t{name: 'Ben', age: 39}\n\t\t{name: 'John', age: 71}\n\t\t]\n\n\t)()\n\n# ---------------------------------------------------------------------------\n#symbol \"cmdArgStr(lArgs=undef)\"\n\nequal cmdArgStr([\"-cmd=doit\"]), '-cmd=doit'\nequal cmdArgStr([\"-cmd=echo <file>\"]), '-cmd=\"echo <file>\"'\nequal cmdArgStr([\"something\"]), 'something'\nequal cmdArgStr([\"some thing\"]), '\"some thing\"'\nequal cmdArgStr([\n\t\"-cmd=doit\"\n\t\"-cmd=echo <file>\"\n\t\"something\"\n\t\"some thing\"\n\t]), \"\"\"\n\t-cmd=doit -cmd=\"echo <file>\" something \"some thing\"\n\t\"\"\"\n\n# ---------------------------------------------------------------------------\n#symbol rpad(str, len, ch)\n\nequal rpad('abc', 5), 'abc  '\n\n# ---------------------------------------------------------------------------\n#symbol lpad(str, len, ch)\n\nequal lpad('abc', 5), '  abc'\n\n# ---------------------------------------------------------------------------\n#symbol zpad(str, len, ch)\n\nequal zpad(3, 5), '00003'\n\n# ---------------------------------------------------------------------------\n#symbol findOneOf(str, lChars, pos)\n\nequal findOneOf('abcde', ['b','d']), 1\nequal findOneOf('abcde', ['b','e']), 1\nequal findOneOf('ace', ['b','e']), 2\nequal findOneOf('acd', ['b','e']), -1\n\nequal findOneOf('some thing DO {xxx} CHECK {xxx} yyy', ['CHECK']), 20\nequal findOneOf('some thing DO {xxx} CHECK {xxx} yyy', ['DO']), 11\nequal findOneOf('some thing DO {xxx} CHECK {xxx} yyy', ['CHECK','DO']), 11\nequal findOneOf('some thing DO {xxx} CHECK {xxx} yyy', ['DO','CHECK']), 11\n\n# ---------------------------------------------------------------------------\n#symbol matchPos(str, pos)\n\nequal matchPos(\"(where f() = '23')\"), 17\nequal matchPos(\"{return addContext(result[1])}\"), 29\nequal matchPos(\"{return popContext()}\"), 20\nequal matchPos(\"some text {return addContext(result[1])}\", 10), 39\nequal matchPos(\"some text {return popContext()}\", 10), 30\n\nfails () => matchPos(\"(missing\", 0)\nfails () => matchPos(\"(miss()ing\", 0)\nequal matchPos(\"(miss()ing\", 5), 6\n\n# ---------------------------------------------------------------------------\n#symbol splitString(str, func) - func is (pos, str) => [extract, newpos]\n\n(() =>\n\tsplitter = (str) =>\n\t\ti = str.indexOf('DO')\n\t\tif (i == -1)\n\t\t\treturn [str.trim() || undef, str.length]\n\t\telse if (i == 0)\n\t\t\treturn ['DO', 2]\n\t\telse\n\t\t\treturn [str.substring(0, i).trim() || undef, i]\n\n\tequal splitStr('abc', splitter), ['abc']\n\tequal splitStr('abcDOxyz', splitter), ['abc','DO','xyz']\n\tequal splitStr('abc DO xyz', splitter), ['abc','DO','xyz']\n\tequal splitStr('DO   ', splitter), ['DO']\n\tequal splitStr('   DO', splitter), ['DO']\n\tequal splitStr('   DO   ', splitter), ['DO']\n\t)()\n\n# ---------------------------------------------------------------------------\n#symbol cleanHash(h) - removes empty values\n\nequal cleanHash({a:1, b:undef, c:[], d:{}, e:'   '}), {a:1}\n\n# ---------------------------------------------------------------------------\n#symbol setsAreEqual(a, b)\n\ntruthy setsAreEqual(new Set([1,2,3]), new Set([1,3,2]))\nfalsy  setsAreEqual(new Set([1,2,3]), new Set([1,2,4]))\nfalsy  setsAreEqual(new Set([1,2,3]), new Set([1,2,3,4]))\n\n# ---------------------------------------------------------------------------\n#symbol tla(stub)\n\nequal tla('low-level-build'), 'llb'\n\n# ---------------------------------------------------------------------------\n#symbol arrayCombos(lArrayOfArrays)\n\n(() =>\n\tu = new UnitTester()\n\tu.transformValue = (val) ->\n\t\tassert isArrayOfArrays(val), \"Bad array #{OL(val)}\"\n\t\treturn Array.from(arrayCombos(val))\n\n\tu.equal [], []\n\tu.equal [['a']], [['a']]\n\tu.equal [[42]], [[42]]\n\n\tu.equal [[]], []\n\n\tu.equal [[],[]], []\n\tu.equal [['a'],[]], []\n\tu.equal [[],[1]], []\n\n\tu.equal [['a','b'],[1,2]], [\n\t\t['a', 1],\n\t\t['a', 2],\n\t\t['b', 1],\n\t\t['b', 2],\n\t\t]\n\tu.equal [], []\n\tu.equal [['a']], [\n\t\t['a']\n\t\t]\n\tu.equal [['a'],[]], []\n\tu.equal [[],['b']], []\n\tu.equal [['a'],['b']], [\n\t\t['a','b']\n\t\t]\n\tu.equal [[['a']],['b']], [\n\t\t[['a'],'b']\n\t\t]\n\tu.equal [[['a',1]],['b']], [\n\t\t[['a',1],'b']\n\t\t]\n\tu.equal [[['a',1]],[['b']]], [\n\t\t[['a',1],['b']]\n\t\t]\n\t)()\n\n# ---------------------------------------------------------------------------\n#symbol yieldMax(item, max)\n\n(() =>\n\tequal Array.from(yieldMax([1,2,3,4,5], 3)), [1,2,3]\n\tgen = () ->\n\t\tyield 1\n\t\tyield 2\n\t\tyield 3\n\t\treturn\n\tequal Array.from(yieldMax(gen(), 2)), [1,2]\n\n\tequal Array.from(yieldMax([0,1,2,3,4,5], 3)), [0,1,2]\n\tigen = () ->\n\t\ti = 0\n\t\tloop\n\t\t\tyield i\n\t\t\ti += 1\n\tequal Array.from(yieldMax(igen(), 3)), [0,1,2]\n\t)()\n\n# ---------------------------------------------------------------------------\n#symbol combos(lItems)\n\n(() =>\n\t# --- NOTE: max returned values is 10\n\tu = new UnitTester()\n\tu.transformValue = (val) ->\n\t\tassert isArray(val), \"Bad array #{OL(val)}\"\n\t\treturn Array.from(yieldMax(combos(val), 10))\n\n\tu.equal [], []\n\n\tu.equal [[1,2,3]], [[1],[2],[3]]\n\tu.equal [[1..25]], [[1],[2],[3],[4],[5],[6],[7],[8],[9],[10]]\n\tu.equal [[1..25]], [1..10].map((x) => [x])\n\n\t# --- Test passing in scalar, iterator\n\n\t# --- If any items are empty, no results\n\temptygen = () ->\n\t\treturn\n\t\tyield 1    # necessary to make this a generator!\n\tu.equal [[1,2,3],[]], []\n\tu.equal [[],[1,2,3]], []\n\tu.equal ['', ['a','b']], []\n\tu.equal [emptygen(), ['a','b']], []\n\n\t# --- If not all items are empty\n\tu.equal ['abc'], [['a'],['b'],['c']]   # --- OOPS, strings are iterable\n\tu.equal [['abc']], [['abc']]\n\tu.equal [42], [[42]]\n\tgen = () ->\n\t\tyield 5\n\t\tyield 10\n\t\tyield 15\n\tu.equal [gen()], [[5],[10],[15]]\n\tu.equal [['a','b'], [1,2]], [\n\t\t['a', 1]\n\t\t['b', 1]\n\t\t['a', 2]\n\t\t['b', 2]\n\t\t]\n\n\t# --- Use infinite iterators\n\tigen = () ->\n\t\ti = 0\n\t\tloop\n\t\t\tyield i\n\t\t\ti += 1\n\n\t# --- pass in a pair of iterators\n\tu.equal [igen(), igen()], [\n\t\t[0, 0]\n\t\t[1, 0]\n\t\t[0, 1]\n\t\t[1, 1]\n\t\t[2, 0]\n\t\t[2, 1]\n\t\t[0, 2]\n\t\t[1, 2]\n\t\t[2, 2]\n\t\t[3, 0]\n\t\t]\n\n\t# --- pass in 3 iterators\n\tu.equal [igen(), igen(), igen()], [\n\t\t[0, 0, 0]\n\t\t[1, 0, 0]\n\t\t[0, 1, 0]\n\t\t[1, 1, 0]\n\t\t[0, 0, 1]\n\t\t[0, 1, 1]\n\t\t[1, 0, 1]\n\t\t[1, 1, 1]\n\t\t[2, 0, 0]\n\t\t[2, 0, 1]\n\t\t]\n\t)()\n\n# ---------------------------------------------------------------------------\n# test islice\n\nequal Array.from(islice(range(10), 3)), [0, 1, 2]\n"
  ]
}